/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/js/app.js":
/*!***********************!*\
  !*** ./src/js/app.js ***!
  \***********************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _modules_expalib_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./modules/expalib.js */ \"./src/js/modules/expalib.js\");\n/* harmony import */ var _modules_textInput_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./modules/textInput.js */ \"./src/js/modules/textInput.js\");\n/* harmony import */ var _modules_login_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./modules/login.js */ \"./src/js/modules/login.js\");\n/* harmony import */ var _modules_userSettings_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./modules/userSettings.js */ \"./src/js/modules/userSettings.js\");\n/* harmony import */ var _modules_header_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./modules/header.js */ \"./src/js/modules/header.js\");\n/* harmony import */ var _modules_sidebar_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./modules/sidebar.js */ \"./src/js/modules/sidebar.js\");\n/* harmony import */ var _modules_logBlock_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./modules/logBlock.js */ \"./src/js/modules/logBlock.js\");\n/* harmony import */ var _modules_resetTimer_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./modules/resetTimer.js */ \"./src/js/modules/resetTimer.js\");\n/* harmony import */ var _modules_contextMenuTree_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./modules/contextMenuTree.js */ \"./src/js/modules/contextMenuTree.js\");\nconsole.log(\"expa 1.0.7\");\r\n\r\n\r\n(0,_modules_expalib_js__WEBPACK_IMPORTED_MODULE_0__.lib) ();\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\ntry{\r\n\r\nwebix.ready(function(){\r\n    webix.protoUI({\r\n        name:\"edittree\"\r\n    }, webix.EditAbility, webix.ui.tree);\r\n\r\n    webix.ui({\r\n        view:\"scrollview\",\r\n                type:\"clean\",\r\n                id:\"layout\", \r\n                scroll:\"y\", \r\n                body:{\r\n                    cells: [ \r\n                        {},\r\n                        {hidden:true, id: \"userAuth\", \r\n                        cols: [\r\n                            {},\r\n                            {   rows:[\r\n                                    {},\r\n                                    (0,_modules_login_js__WEBPACK_IMPORTED_MODULE_2__.login)(),\r\n                                    {}\r\n                                ]},\r\n                            {}\r\n                        ]},\r\n                        {hidden:true, id:\"mainLayout\", rows: [\r\n                            \r\n                      \r\n                            {   id:\"mainContent\",\r\n                                css:\"webix_mainContent\",\r\n                                                                \r\n                               cols:[\r\n                                    { rows:[\r\n                                        (0,_modules_header_js__WEBPACK_IMPORTED_MODULE_4__.header)(),\r\n                                        {   id:\"adaptive\",\r\n                                            rows:[]\r\n                                        },\r\n                                    \r\n                                       {id:\"container\",responsive:\"adaptive\",cols:[\r\n                                            (0,_modules_sidebar_js__WEBPACK_IMPORTED_MODULE_5__.treeSidebar)(), \r\n\r\n                                            {id:\"sideMenuResizer\",view:\"resizer\",css:\"webix_resizer-hide\",},\r\n                            \r\n                                            \r\n                                           {id:\"webix__none-content\"},\r\n                                        ]},\r\n                                    ]}, \r\n\r\n\r\n\r\n                                ]\r\n                            },\r\n                            {view:\"resizer\", id:\"log-resizer\"},\r\n                            _modules_logBlock_js__WEBPACK_IMPORTED_MODULE_6__.logLayout\r\n                \r\n                        ]}\r\n                    ],\r\n                },\r\n\r\n    });\r\n    (0,_modules_userSettings_js__WEBPACK_IMPORTED_MODULE_3__.getStorageData)();\r\n    window.addEventListener('resize', function(event) {\r\n \r\n        if ($$(\"tree\").isVisible()){\r\n        } else {\r\n            if(window.innerWidth <= 600){\r\n                if($$(\"sideMenuResizer\")){\r\n                    $$(\"sideMenuResizer\").hide(); \r\n                 }\r\n            } \r\n        }\r\n\r\n\r\n    }, true);\r\n\r\n\r\n    webix.ui((0,_modules_contextMenuTree_js__WEBPACK_IMPORTED_MODULE_8__.contextMenu)());\r\n\r\n    Backbone.history.start();\r\n\r\n    _modules_textInput_js__WEBPACK_IMPORTED_MODULE_1__.textInputClean();\r\n\r\n    _modules_resetTimer_js__WEBPACK_IMPORTED_MODULE_7__.resetTimer();\r\n\r\n    // webix.extend($$(tableId), webix.ProgressBar);\r\n    // webix.extend($$(tableIdView), webix.ProgressBar);\r\n\r\n    webix.i18n.setLocale(\"ru-RU\");   \r\n    webix.i18n.parseFormat = \"%d.%m.%Y %H:%i:%s\";\r\n    webix.i18n.setLocale();\r\n\r\n\r\n});\r\n\r\n\r\n\r\n} catch(e){\r\n    console.log(e);\r\n    alert(\"Ошибка при выполнении\");\r\n}\n\n//# sourceURL=webpack://webix/./src/js/app.js?");

/***/ }),

/***/ "./src/js/modules/contextMenuTree.js":
/*!*******************************************!*\
  !*** ./src/js/modules/contextMenuTree.js ***!
  \*******************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"contextMenu\": () => (/* binding */ contextMenu)\n/* harmony export */ });\n//     \r\n\r\nfunction contextMenu (){\r\n\r\n    function getPrevNode(tree_node)\r\n    {\r\n        var res = null;\r\n        var tree = $$(\"tree\");\r\n\r\n        if (tree_node.id == tree_node.content.pid) {\r\n            var id = tree.getFirstId();\r\n            while (id != null) {\r\n                var node = tree.getItem(id);\r\n                \r\n                if (node.id == node.content.pid) {\r\n                    //console.log(\"root: \",id,node.content.name);\r\n                    if (node.id == tree_node.id) {\r\n                        break;\r\n                    };\r\n                    res = node;\r\n                };\r\n                \r\n                id = tree.getNextId(id);\r\n            }\r\n        } else {\r\n            res = tree.getPrevSiblingId(tree_node.id);\r\n            if (res) {\r\n                res = tree.getItem(res);\r\n            }\r\n        }\r\n\r\n        return res;\r\n    }\r\n\r\n    function tree_get_next_node(tree_node)\r\n    {\r\n        var res = null;\r\n        var tree = $$(\"tree\");\r\n\r\n        if (tree_node.id == tree_node.content.pid) {\r\n            var id = tree.getLastId();\r\n            while (id != null) {\r\n                var node = tree.getItem(id);\r\n                \r\n                if (node.id == node.content.pid) {\r\n                    //console.log(\"root: \",id,node.content.name);\r\n                    if (node.id == tree_node.id) {\r\n                        break;\r\n                    };\r\n                    res = node;\r\n                };\r\n                \r\n                id = tree.getPrevId(id);\r\n            }\r\n        } else {\r\n            res = tree.getNextSiblingId(tree_node.id);\r\n            if (res) {\r\n                res = tree.getItem(res);\r\n            }\r\n        }\r\n\r\n        return res;\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    return {\r\n        view:\"contextmenu\",\r\n        id:\"cm\",\r\n        data:[\r\n               // \"Добавить\",\r\n                \"Переименовать\",\r\n                { $template:\"Separator\" },\r\n                \"Поднять\",\r\n                \"Опустить\",\r\n                { $template:\"Separator\" },\r\n                \"Свернуть всё\",\r\n                \"Развернуть всё\",\r\n                { $template:\"Separator\" },\r\n                \"Удалить\"\r\n            ],\r\n    master: $$(\"tree\"),\r\n    on:{\r\n        onMenuItemClick:function(id){\r\n            let context = this.getContext();\r\n            \r\n            console.log(\"Context: \",context);\r\n\r\n            let tree = $$(\"tree\");\r\n\r\n            let titem = tree.getItem(context.id); \r\n            console.log()\r\n\r\n            let menu = this.getMenu(id);\r\n            let cmd = menu.getItem(id).value;\r\n\r\n            console.log(cmd,\"cmd\"); // название действия \r\n\r\n            switch (cmd) {\r\n                // case \"Добавить\": {\r\n                //     var text = prompt(\"Имя нового подэлемента '\"+titem.value+\"'\", \"\");\r\n                //     if (text != null) {\r\n                //         let postObg = \r\n                //         {\"name1\":{\r\n                //                 fields:{},\r\n                //                 plural:text,\r\n                //                 type:\"dbtable\"\r\n                //             }\r\n                //         };\r\n                //         webix.ajax().post(\"/init/default/api/fields.json\"+titem.id+\"&name=\"+text).then(function (data) {\r\n                //             msg = data.text()\r\n                //             console.log(msg);\r\n                //             const newid = parseInt(msg, 10);\r\n                //             if (isNaN(newid)) {\r\n                //                 webix.message(\"Ошибка при добавлении: \"+msg);\r\n                //             } else {\r\n                //                 webix.message(\"Элемент с id=\"+msg+\" добавлен.\");\r\n                //                 tree.add({value: text, content:{name:text}, id: newid}, 0, context.id);\r\n                //                 tree.refresh();\r\n                //             }\r\n                //             return msg;\r\n                //         })\r\n                //     }\r\n                //     break;\r\n                // }\r\n               \r\n                case \"Переименовать\": {\r\n                    var text = prompt(\"Новое имя\", titem.value);\r\n                    if (text != null) { \r\n                        // console.log(titem.id, text)\r\n                        // let postData;\r\n                        // webix.ajax().put(\"/init/default/api/fields/auth_user\", postData).then(function (data) {\r\n                        //     msg = data.text()\r\n                        //     console.log(titem, text)\r\n                        //     console.log(msg);\r\n                        //     if (msg==\"OK\") {\r\n                        //         webix.message(\"Элемент с id=\"+titem.id+\" переименован.\");\r\n                        //         titem.value = text;\r\n                        //         tree.refresh();\r\n                        //     } else {\r\n                        //         webix.message(\"Ошибка при переименовании: \"+msg);\r\n                        //     }\r\n                        //     return msg;\r\n                        // })\r\n                    }\r\n                    break;\r\n                }\r\n                case \"Удалить\": {\r\n                    var r = confirm(\"Удалить элемент '\"+titem.value+\"'?\");\r\n                    if (r == true) {\r\n                        webix.ajax().get(\"/del/\"+titem.id).then(function (data) {\r\n                            msg = data.text()\r\n                            console.log(msg);\r\n                            if (msg==\"OK\") {\r\n                                webix.message(\"Элемент с id=\"+titem.id+\" удалён.\");\r\n                                tree.remove(context.id);\r\n                                tree.refresh();\r\n                            } else {\r\n                                webix.message(\"Ошибка при удалении: \"+msg);\r\n                            }\r\n                            return msg;\r\n                        })\r\n                    }\r\n                    break;\r\n                }\r\n                case \"Поднять\": {\r\n                    var parent_item = tree.getParentId(titem.id);\r\n                    console.log(\"parent:\",parent_item);\r\n                    var nexts_item = tree.getPrevSiblingId(titem.id);\r\n                    console.log(\"prev sibling:\",nexts_item);\r\n                    var next_item = tree.getPrevId(titem.id);\r\n                    console.log(\"prev item:\",next_item);\r\n                    var nexts_item = tree.getNextSiblingId(titem.id);\r\n                    console.log(\"next sibling:\",nexts_item);\r\n                    var next_item = tree.getNextId(titem.id);\r\n                    console.log(\"next item:\",next_item);\r\n                    var index = tree.getIndexById(titem.id);\r\n                    console.log(\"index:\",index);\r\n                    var index = tree.getBranchIndex(titem.id);\r\n                    console.log(\"branch index:\",index);\r\n                    var index = tree.getFirstId();\r\n                    console.log(\"tree first id:\",index);\r\n                    var index = tree.getLastId();\r\n                    console.log(\"tree last id:\",index);\r\n                    var pnode = getPrevNode(titem);\r\n                    console.log(\"prev\", pnode);\r\n                    var nnode = tree_get_next_node(titem);\r\n                    console.log(\"next\", nnode);\r\n                    //tree_list_root();\r\n\r\n                    var prev = getPrevNode(titem);\r\n                    if (prev) {\r\n                        console.log(\"Предыдущий элемент: \"+prev.id);\r\n\r\n                        var details = {};\r\n                        //console.log(parent_item);\r\n                        if (titem.content.id == titem.content.pid) { // for root items\r\n                            var cur_index  = tree.getBranchIndex(titem.id);\r\n                            if (cur_index <= 0) {\r\n                                var cur_index  = tree.getIndexById(titem.id);\r\n                                details.parent = \"0\"; //tree.getParentId(titem.id);\r\n                                var new_index  = cur_index - 1;\r\n                                webix.message(\"Корневые папки перемещаются только изменением поля Порядок\");\r\n                            } else {\r\n                                //details.parent = tree.getParentId(titem.id);\r\n                                var new_index  = cur_index - 1;\r\n                            }\r\n                        } else {\r\n                            var cur_index  = tree.getBranchIndex(titem.id);\r\n                            details.parent = tree.getParentId(titem.id);\r\n                            var new_index  = cur_index - 1;\r\n                        }\r\n\r\n                        tree.move(titem.id, new_index,undefined,details);\r\n                        //tree.move(titem.id, new_index);\r\n                        console.log(\"Index: \"+cur_index+\" => \"+new_index);\r\n                        tree.refresh();\r\n\r\n                        var prev_order = prev.content.order;\r\n                        prev.content.order = titem.content.order;\r\n                        titem.content.order = prev_order;\r\n\r\n                        webix.ajax().post(\"/item/\"+titem.content.id, titem.content).then(function (data) {\r\n                            console.log(\"Order \"+titem.content.id+\" updated to \"+titem.content.order+\".\");\r\n                            data = data.json();\r\n                            console.log(data);\r\n                        });\r\n                        \r\n                        webix.ajax().post(\"/item/\"+prev.content.id, prev.content).then(function (data) {\r\n                            console.log(\"Order \"+prev.content.id+\" updated to \"+prev.content.order+\".\");\r\n                            data = data.json();\r\n                            console.log(data);\r\n                        });\r\n                    } else {\r\n                        webix.message(\"Ошибка: нет предыдущего элемента\");\r\n                        console.log(\"Ошибка: нет предыдущего элемента\");\r\n                    }\r\n                    break;\r\n                }\r\n                case \"Опустить\": {\r\n                    var prev = tree_get_next_node(titem);\r\n                    if (prev) {\r\n                        console.log(\"Следующий элемент: \"+prev.id);\r\n\r\n                        var details = {};\r\n                        //console.log(parent_item);\r\n                        if (titem.content.id == titem.content.pid) { // for root items\r\n                            var cur_index  = tree.getBranchIndex(titem.id);\r\n                            if (cur_index <= 0) {\r\n                                var cur_index  = tree.getIndexById(titem.id);\r\n                                details.parent = \"0\"; //tree.getParentId(titem.id);\r\n                                var new_index  = cur_index + 1;\r\n                                webix.message(\"Корневые папки перемещаются только изменением поля Порядок\");\r\n                            } else {\r\n                                //details.parent = tree.getParentId(titem.id);\r\n                                var new_index  = cur_index + 1;\r\n                            }\r\n                        } else {\r\n                            var cur_index  = tree.getBranchIndex(titem.id);\r\n                            details.parent = tree.getParentId(titem.id);\r\n                            var new_index  = cur_index + 1;\r\n                        }\r\n\r\n                        if (details.parent == \"0\") {\r\n                            tree.move(titem.id, new_index, tree, details);\r\n                        } else {\r\n                            tree.move(titem.id, new_index,undefined,details);\r\n                        };\r\n                        //tree.move(titem.id, new_index);\r\n                        console.log(\"Index: \"+cur_index+\" => \"+new_index);\r\n                        tree.refresh();\r\n\r\n                        var prev_order = prev.content.order;\r\n                        prev.content.order = titem.content.order;\r\n                        titem.content.order = prev_order;\r\n\r\n                        webix.ajax().post(\"/item/\"+titem.content.id, titem.content).then(function (data) {\r\n                            console.log(\"Order \"+titem.content.id+\" updated to \"+titem.content.order+\".\");\r\n                            data = data.json();\r\n                            console.log(data);\r\n                        });\r\n                        \r\n                        webix.ajax().post(\"/item/\"+prev.content.id, prev.content).then(function (data) {\r\n                            console.log(\"Order \"+prev.content.id+\" updated to \"+prev.content.order+\".\");\r\n                            data = data.json();\r\n                            console.log(data);\r\n                        });\r\n                    } else {\r\n                        webix.message(\"Ошибка: нет следующего элемента\");\r\n                        console.log(\"Ошибка: нет предыдущего элемента\");\r\n                    }\r\n                    break;\r\n                }\r\n                case \"Развернуть всё\": {\r\n                    console.log(\"Развернуть всё\");\r\n                    tree.openAll();\r\n                    break;\r\n                }\r\n                case \"Свернуть всё\": {\r\n                    console.log(\"Свернуть всё\");\r\n                    tree.closeAll();\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    };\r\n}\r\n\r\n\r\n\r\n\n\n//# sourceURL=webpack://webix/./src/js/modules/contextMenuTree.js?");

/***/ }),

/***/ "./src/js/modules/editTableForm.js":
/*!*****************************************!*\
  !*** ./src/js/modules/editTableForm.js ***!
  \*****************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"editTableBar\": () => (/* binding */ editTableBar),\n/* harmony export */   \"notify\": () => (/* binding */ notify),\n/* harmony export */   \"createEditFields\": () => (/* binding */ createEditFields),\n/* harmony export */   \"popupExec\": () => (/* binding */ popupExec),\n/* harmony export */   \"defaultStateForm\": () => (/* binding */ defaultStateForm),\n/* harmony export */   \"checkFormSaved\": () => (/* binding */ checkFormSaved),\n/* harmony export */   \"clearItem\": () => (/* binding */ clearItem),\n/* harmony export */   \"saveItem\": () => (/* binding */ saveItem)\n/* harmony export */ });\n/* harmony import */ var _setId_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./setId.js */ \"./src/js/modules/setId.js\");\n/* harmony import */ var _sidebar_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./sidebar.js */ \"./src/js/modules/sidebar.js\");\n/* harmony import */ var _logBlock_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./logBlock.js */ \"./src/js/modules/logBlock.js\");\n/* harmony import */ var _header_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./header.js */ \"./src/js/modules/header.js\");\n/* harmony import */ var _login_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./login.js */ \"./src/js/modules/login.js\");\n\r\n\r\n\r\n\r\n\r\nlet currId;\r\n\r\nlet editTableBar;\r\n\r\nfunction getCurrId (){\r\n    if ( _sidebar_js__WEBPACK_IMPORTED_MODULE_1__.itemTreeId.length == 0){\r\n        currId=_header_js__WEBPACK_IMPORTED_MODULE_3__.headerContextId;\r\n    } else {\r\n        currId=_sidebar_js__WEBPACK_IMPORTED_MODULE_1__.itemTreeId;\r\n    }\r\n}\r\n\r\n\r\n//--- bns\r\nfunction saveItem(tableEditorVal){        \r\n    getCurrId ();\r\n    let itemData = $$(_setId_js__WEBPACK_IMPORTED_MODULE_0__.editFormId).getValues();   \r\n    if($$(_setId_js__WEBPACK_IMPORTED_MODULE_0__.editFormId).validate() ){\r\n        if( itemData.id ) {\r\n            webix.ajax().put(\"/init/default/api/\"+currId+\"/\"+itemData.id, itemData, {\r\n                success:function(){\r\n                    $$( _setId_js__WEBPACK_IMPORTED_MODULE_0__.tableId ).updateItem(itemData.id, itemData);\r\n                    clearItem();\r\n                    notify (\"success\",\"Данные сохранены\",true);\r\n                    defaultStateForm ();\r\n                    $$(\"inputsTable\").hide();\r\n                    $$(_setId_js__WEBPACK_IMPORTED_MODULE_0__.tableId).clearSelection();\r\n                    $$(_setId_js__WEBPACK_IMPORTED_MODULE_0__.newAddBtnId).enable();\r\n                },\r\n                error:function(){\r\n                    notify (\"error\",\"Ошибка при сохранении данных\",true);\r\n                }\r\n            });\r\n        }    \r\n  \r\n    } else {\r\n        notify (\"error\",\"Заполните пустые поля\",true);\r\n    }\r\n\r\n    \r\n}\r\n\r\n\r\n\r\nfunction addItem () {\r\n    if($$(_setId_js__WEBPACK_IMPORTED_MODULE_0__.editFormId).isDirty()){\r\n        popupExec(\"Данные не сохранены\").then(\r\n        function(){\r\n            $$(_setId_js__WEBPACK_IMPORTED_MODULE_0__.tableId).filter(false);\r\n            $$(_setId_js__WEBPACK_IMPORTED_MODULE_0__.tableId).hideOverlay(\"Ничего не найдено\");\r\n            $$(_setId_js__WEBPACK_IMPORTED_MODULE_0__.searchId).setValue(\"\");\r\n            createEditFields();\r\n            $$(_setId_js__WEBPACK_IMPORTED_MODULE_0__.delBtnId).disable();\r\n            $$(_setId_js__WEBPACK_IMPORTED_MODULE_0__.saveBtnId).hide();\r\n            $$(_setId_js__WEBPACK_IMPORTED_MODULE_0__.saveNewBtnId).show();\r\n        });\r\n\r\n    } else {\r\n        $$(_setId_js__WEBPACK_IMPORTED_MODULE_0__.tableId).filter(false);\r\n        $$(_setId_js__WEBPACK_IMPORTED_MODULE_0__.tableId).hideOverlay(\"Ничего не найдено\");\r\n        $$(_setId_js__WEBPACK_IMPORTED_MODULE_0__.searchId).setValue(\"\");\r\n        createEditFields();\r\n        $$(_setId_js__WEBPACK_IMPORTED_MODULE_0__.delBtnId).disable();\r\n        $$(_setId_js__WEBPACK_IMPORTED_MODULE_0__.saveBtnId).hide();\r\n        $$(_setId_js__WEBPACK_IMPORTED_MODULE_0__.saveNewBtnId).show();\r\n        $$(_setId_js__WEBPACK_IMPORTED_MODULE_0__.newAddBtnId).disable();\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n\r\nfunction saveNewItem (){\r\n    getCurrId ();\r\n    \r\n    if($$( _setId_js__WEBPACK_IMPORTED_MODULE_0__.editFormId ).validate() ) {\r\n        if($$(_setId_js__WEBPACK_IMPORTED_MODULE_0__.editFormId).isDirty()){\r\n            let newValues = $$(_setId_js__WEBPACK_IMPORTED_MODULE_0__.editFormId).getValues();\r\n            newValues.id= $$(_setId_js__WEBPACK_IMPORTED_MODULE_0__.tableId).count()+1;\r\n\r\n            webix.ajax().post(\"/init/default/api/\"+currId, newValues,{\r\n                success:function( ){\r\n                    $$(_setId_js__WEBPACK_IMPORTED_MODULE_0__.tableId).add(newValues);\r\n                    clearItem();\r\n                    defaultStateForm ();\r\n                    $$(\"inputsTable\").hide();\r\n                    $$(_setId_js__WEBPACK_IMPORTED_MODULE_0__.newAddBtnId).enable();\r\n                    notify (\"success\",\"Данные успешно добавлены\", true);\r\n                },\r\n                error:function(){\r\n                    notify (\"error\",\"Ошибка при добавлении данных\", true);\r\n                }\r\n            });\r\n        }else {\r\n            notify (\"debug\",\"Форма пуста\");\r\n        }\r\n    } else {\r\n        notify (\"error\",\"Заполните пустые поля\",true);\r\n    }\r\n   \r\n}\r\n\r\n\r\nfunction removeItem() {\r\n    getCurrId ();\r\n    popupExec(\"Запись будет удалена\").then(\r\n        function(){\r\n            $$( _setId_js__WEBPACK_IMPORTED_MODULE_0__.tableId ).remove($$(_setId_js__WEBPACK_IMPORTED_MODULE_0__.editFormId).getValues().id);\r\n            let formValues = $$(_setId_js__WEBPACK_IMPORTED_MODULE_0__.editFormId).getValues();\r\n            webix.ajax().del(\"/init/default/api/\"+currId+\"/\"+formValues.id+\".json\", formValues,{\r\n                success:function(){\r\n                    clearItem();\r\n                    defaultStateForm ();\r\n                    $$(\"inputsTable\").hide();\r\n                    notify (\"success\",\"Данные успешно удалены\",true);\r\n                },\r\n                error:function(){\r\n                    notify (\"error\",\"Ошибка при удалении записи\",true);\r\n                }\r\n            });\r\n            \r\n    });\r\n    \r\n    \r\n}\r\n\r\n\r\n//--- bns\r\n\r\n\r\n\r\n\r\n//--- components\r\n\r\nfunction createEditFields () {\r\n\r\n    let columnsData = $$(_setId_js__WEBPACK_IMPORTED_MODULE_0__.tableId).getColumns();\r\n\r\n    if(Object.keys($$(_setId_js__WEBPACK_IMPORTED_MODULE_0__.editFormId).elements).length==0  ){\r\n        let inputsArray = [];\r\n        columnsData.forEach((el,i) => {\r\n            if (el.type == \"datetime\"){\r\n                inputsArray.push({   \r\n                    view: \"datepicker\",\r\n                    format:\"%d.%m.%Y %H:%i:%s\",\r\n                    id:el.id,\r\n                    name:el.id, \r\n                    label:el.label, \r\n                    placeholder:\"дд.мм.гг\", \r\n                    timepicker: true,\r\n                    labelPosition:\"top\",\r\n                    on:{\r\n                        onItemClick:function(){\r\n                            $$(_setId_js__WEBPACK_IMPORTED_MODULE_0__.editFormId).clearValidation();\r\n                        }\r\n                    }\r\n                });\r\n            } \r\n            \r\n\r\n           else if (el.type.includes(\"reference\")) {\r\n            let findTableId = el.type.slice(10);\r\n            let refTableName;\r\n\r\n            _login_js__WEBPACK_IMPORTED_MODULE_4__.tableNames.forEach(function(el,i){\r\n                if (el.id == findTableId){\r\n                    refTableName= el.name;\r\n                }\r\n            });\r\n\r\n            inputsArray.push(\r\n                {cols:[\r\n                {   view:\"combo\",\r\n                    placeholder:\"Выберите вариант\",  \r\n                    label:el.label, \r\n                    id:el.id,\r\n                    name:el.id, \r\n                    labelPosition:\"top\",\r\n                    options:{\r\n                        data:(0,_sidebar_js__WEBPACK_IMPORTED_MODULE_1__.getComboOptions)(findTableId)\r\n                    },\r\n                    on:{\r\n                        onItemClick:function(){\r\n                            $$(_setId_js__WEBPACK_IMPORTED_MODULE_0__.editFormId).clearValidation();\r\n                        },\r\n                        // onChange: function(newValue, oldValue, config){\r\n\r\n                        // }\r\n                    }\r\n                },\r\n                {\r\n                    view:\"button\",\r\n                    css:{\"vertical-align\":\"bottom!important\",\"height\":\"38px!important\"},\r\n                    type:\"icon\",\r\n                    icon: 'wxi-angle-right',\r\n                    inputHeight:38,\r\n                    width: 40,\r\n                    on: {\r\n                        onAfterRender: function () {\r\n                            this.getInputNode().setAttribute(\"title\",\"Перейти в таблицу\"+\" \"+\"«\"+refTableName+\"»\");\r\n                        },\r\n                    },\r\n                    click:function(){\r\n                        $$(\"tree\").select(findTableId);\r\n                    }\r\n                }\r\n                ]}\r\n\r\n            );\r\n            \r\n            } \r\n            else{\r\n                inputsArray.push(\r\n                    {\r\n                    view:\"text\", \r\n                    name:el.id,\r\n                    id:el.id, \r\n                    label:el.label, \r\n                    labelPosition:\"top\",\r\n                    on:{\r\n                        onKeyPress:function(){\r\n                            $$(_setId_js__WEBPACK_IMPORTED_MODULE_0__.editFormId).clearValidation();\r\n                        }\r\n                    }\r\n                    }\r\n                );\r\n            }\r\n        });\r\n\r\n        let inpObj = {margin:8,id:\"inputsTable\", rows:inputsArray};\r\n\r\n        $$(_setId_js__WEBPACK_IMPORTED_MODULE_0__.delBtnId).enable();\r\n        return ($$(_setId_js__WEBPACK_IMPORTED_MODULE_0__.editFormId).addView( inpObj, 1));\r\n        \r\n    } else {\r\n        $$(_setId_js__WEBPACK_IMPORTED_MODULE_0__.editFormId).clear();\r\n        $$(_setId_js__WEBPACK_IMPORTED_MODULE_0__.editFormId).clearValidation();\r\n\r\n        $$(_setId_js__WEBPACK_IMPORTED_MODULE_0__.delBtnId).enable();\r\n        $$(\"inputsTable\").show();\r\n    }\r\n}\r\n\r\n\r\n\r\nfunction clearItem(){\r\n    $$(_setId_js__WEBPACK_IMPORTED_MODULE_0__.editFormId).clear();\r\n    $$(_setId_js__WEBPACK_IMPORTED_MODULE_0__.editFormId).clearValidation();\r\n    defaultStateForm ();\r\n}\r\n\r\nfunction defaultStateForm () {\r\n    if ($$(_setId_js__WEBPACK_IMPORTED_MODULE_0__.saveNewBtnId).isVisible()) {\r\n        $$(_setId_js__WEBPACK_IMPORTED_MODULE_0__.saveNewBtnId).hide();\r\n    } else if ($$(_setId_js__WEBPACK_IMPORTED_MODULE_0__.saveBtnId).isVisible()){\r\n        $$(_setId_js__WEBPACK_IMPORTED_MODULE_0__.saveBtnId).hide();\r\n    }\r\n    $$(_setId_js__WEBPACK_IMPORTED_MODULE_0__.delBtnId).disable();\r\n}\r\n\r\nfunction popupExec (titleText) { \r\n\r\n    return webix.confirm({\r\n        width:300,\r\n        ok: 'Да',\r\n        cancel: 'Отмена',\r\n        title:titleText,\r\n        text:\"Вы уверены, что хотите продолжить?\"\r\n    });\r\n}\r\n\r\nfunction notify (typeNotify,textMessage, log = false, expireTime=4000) {\r\n    webix.message.position = \"bottom\";\r\n    webix.message({type:typeNotify,expire: expireTime,  text:textMessage});\r\n    if(log){\r\n        (0,_logBlock_js__WEBPACK_IMPORTED_MODULE_2__.setLogValue)(typeNotify, textMessage);\r\n    }\r\n\r\n}\r\n\r\n\r\nfunction checkFormSaved() {\r\n    return new webix.promise(function(resolve){\r\n      webix.confirm(\r\n        {\r\n          title: 'Данные не сохранены',\r\n          ok: 'Да',\r\n          width:300,\r\n          cancel: 'Отмена',\r\n          text: 'Вы уверены, что хотите продолжить?',\r\n          callback: function (result) {\r\n            if (result) {\r\n              resolve(true);\r\n            } else {\r\n              resolve(false);\r\n            }\r\n          }\r\n        }\r\n      );\r\n    });\r\n}\r\n\r\n//--- components\r\n\r\n\r\ntry{\r\n\r\n\r\n editTableBar = {\r\n    view:\"form\", \r\n    id:_setId_js__WEBPACK_IMPORTED_MODULE_0__.editFormId,\r\n    css:\"webix_form-edit\",\r\n    container:\"webix__form-container\", \r\n    minHeight:350,\r\n    minWidth:210,\r\n    width: 320,\r\n    scroll:true,\r\n    elements:[\r\n\r\n        {id:\"form-adaptive\",minHeight:48,css:\"webix_form-adaptive\", margin:5, rows:[{margin:5, rows:[\r\n           \r\n            \r\n            {responsive:\"form-adaptive\",  margin:5, \r\n\r\n                cols: [\r\n                    {   view:\"button\",\r\n                        id:_setId_js__WEBPACK_IMPORTED_MODULE_0__.newAddBtnId,\r\n                        height:48,\r\n                        minWidth:90, \r\n                        hotkey: \"shift\",\r\n                        value:\"Новая запись\", click:addItem},\r\n                        \r\n                    {   view:\"button\",\r\n                        id:_setId_js__WEBPACK_IMPORTED_MODULE_0__.delBtnId,\r\n                        disabled:true,\r\n                        height:48,\r\n                        minWidth:90,\r\n                        width:100,\r\n                        hotkey: \"shift+esc\",\r\n                        css:\"webix_danger\", \r\n                        type:\"icon\", \r\n                        icon:\"wxi-trash\", \r\n                        click:removeItem,\r\n                        on: {\r\n                            onAfterRender: function () {\r\n                                this.getInputNode().setAttribute(\"title\",\"Удалить запись из таблицы\");\r\n                            }\r\n                        } \r\n                    },\r\n                ]\r\n            },\r\n            \r\n        ]},\r\n\r\n       {margin:10, rows:[ { \r\n            view:\"button\", \r\n            id:_setId_js__WEBPACK_IMPORTED_MODULE_0__.saveBtnId,\r\n            hidden:true, \r\n            value:\"Сохранить\", \r\n            height:48, \r\n            css:\"webix_primary\", \r\n            click:saveItem,\r\n            hotkey: \"enter\" \r\n        },\r\n        // { \r\n        //     view:\"button\", \r\n        //     id:addBtnId,\r\n        //     value:\"Добавить новую запись\", \r\n        //     height:48,\r\n        //     disabled:true,\r\n        //     hotkey: \"shift\",\r\n        //     css:\"webix_primary\", \r\n        //     click:addItem\r\n        // },\r\n        { \r\n            view:\"button\", \r\n            id:_setId_js__WEBPACK_IMPORTED_MODULE_0__.saveNewBtnId,\r\n            value:\"Сохранить новую запись\",\r\n            hidden:true,  \r\n            height:48,\r\n            hotkey: \"enter\" ,\r\n            css:\"webix_primary\", \r\n            click:saveNewItem\r\n        },\r\n\r\n        ]},\r\n        \r\n    ]},\r\n    {}\r\n    \r\n    \r\n    ],\r\n    \r\n    rules:{\r\n        $all:webix.rules.isNotEmpty\r\n    },\r\n\r\n\r\n    ready:function(){\r\n        this.validate();\r\n    },\r\n\r\n};\r\n} catch (e){\r\n    console.log(e);\r\n    alert(\"Ошибка при выполнении\");\r\n}\r\n\r\n    \r\n\r\n\n\n//# sourceURL=webpack://webix/./src/js/modules/editTableForm.js?");

/***/ }),

/***/ "./src/js/modules/expalib.js":
/*!***********************************!*\
  !*** ./src/js/modules/expalib.js ***!
  \***********************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"lib\": () => (/* binding */ lib)\n/* harmony export */ });\nfunction lib (){\r\n\r\n    (function (global, factory) {\r\n        typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\r\n        typeof define === 'function' && define.amd ? define('underscore', factory) :\r\n        (global = typeof globalThis !== 'undefined' ? globalThis : global || self, (function () {\r\n          var current = global._;\r\n          var exports = global._ = factory();\r\n          exports.noConflict = function () { global._ = current; return exports; };\r\n        }()));\r\n      }(this, (function () {\r\n        //     Underscore.js 1.13.4\r\n        //     https://underscorejs.org\r\n        //     (c) 2009-2022 Jeremy Ashkenas, Julian Gonggrijp, and DocumentCloud and Investigative Reporters & Editors\r\n        //     Underscore may be freely distributed under the MIT license.\r\n      \r\n        // Current version.\r\n        var VERSION = '1.13.4';\r\n      \r\n        // Establish the root object, `window` (`self`) in the browser, `global`\r\n        // on the server, or `this` in some virtual machines. We use `self`\r\n        // instead of `window` for `WebWorker` support.\r\n        var root = (typeof self == 'object' && self.self === self && self) ||\r\n                  (typeof global == 'object' && global.global === global && global) ||\r\n                  Function('return this')() ||\r\n                  {};\r\n      \r\n        // Save bytes in the minified (but not gzipped) version:\r\n        var ArrayProto = Array.prototype, ObjProto = Object.prototype;\r\n        var SymbolProto = typeof Symbol !== 'undefined' ? Symbol.prototype : null;\r\n      \r\n        // Create quick reference variables for speed access to core prototypes.\r\n        var push = ArrayProto.push,\r\n            slice = ArrayProto.slice,\r\n            toString = ObjProto.toString,\r\n            hasOwnProperty = ObjProto.hasOwnProperty;\r\n      \r\n        // Modern feature detection.\r\n        var supportsArrayBuffer = typeof ArrayBuffer !== 'undefined',\r\n            supportsDataView = typeof DataView !== 'undefined';\r\n      \r\n        // All **ECMAScript 5+** native function implementations that we hope to use\r\n        // are declared here.\r\n        var nativeIsArray = Array.isArray,\r\n            nativeKeys = Object.keys,\r\n            nativeCreate = Object.create,\r\n            nativeIsView = supportsArrayBuffer && ArrayBuffer.isView;\r\n      \r\n        // Create references to these builtin functions because we override them.\r\n        var _isNaN = isNaN,\r\n            _isFinite = isFinite;\r\n      \r\n        // Keys in IE < 9 that won't be iterated by `for key in ...` and thus missed.\r\n        var hasEnumBug = !{toString: null}.propertyIsEnumerable('toString');\r\n        var nonEnumerableProps = ['valueOf', 'isPrototypeOf', 'toString',\r\n          'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString'];\r\n      \r\n        // The largest integer that can be represented exactly.\r\n        var MAX_ARRAY_INDEX = Math.pow(2, 53) - 1;\r\n      \r\n        // Some functions take a variable number of arguments, or a few expected\r\n        // arguments at the beginning and then a variable number of values to operate\r\n        // on. This helper accumulates all remaining arguments past the function’s\r\n        // argument length (or an explicit `startIndex`), into an array that becomes\r\n        // the last argument. Similar to ES6’s \"rest parameter\".\r\n        function restArguments(func, startIndex) {\r\n          startIndex = startIndex == null ? func.length - 1 : +startIndex;\r\n          return function() {\r\n            var length = Math.max(arguments.length - startIndex, 0),\r\n                rest = Array(length),\r\n                index = 0;\r\n            for (; index < length; index++) {\r\n              rest[index] = arguments[index + startIndex];\r\n            }\r\n            switch (startIndex) {\r\n              case 0: return func.call(this, rest);\r\n              case 1: return func.call(this, arguments[0], rest);\r\n              case 2: return func.call(this, arguments[0], arguments[1], rest);\r\n            }\r\n            var args = Array(startIndex + 1);\r\n            for (index = 0; index < startIndex; index++) {\r\n              args[index] = arguments[index];\r\n            }\r\n            args[startIndex] = rest;\r\n            return func.apply(this, args);\r\n          };\r\n        }\r\n      \r\n        // Is a given variable an object?\r\n        function isObject(obj) {\r\n          var type = typeof obj;\r\n          return type === 'function' || (type === 'object' && !!obj);\r\n        }\r\n      \r\n        // Is a given value equal to null?\r\n        function isNull(obj) {\r\n          return obj === null;\r\n        }\r\n      \r\n        // Is a given variable undefined?\r\n        function isUndefined(obj) {\r\n          return obj === void 0;\r\n        }\r\n      \r\n        // Is a given value a boolean?\r\n        function isBoolean(obj) {\r\n          return obj === true || obj === false || toString.call(obj) === '[object Boolean]';\r\n        }\r\n      \r\n        // Is a given value a DOM element?\r\n        function isElement(obj) {\r\n          return !!(obj && obj.nodeType === 1);\r\n        }\r\n      \r\n        // Internal function for creating a `toString`-based type tester.\r\n        function tagTester(name) {\r\n          var tag = '[object ' + name + ']';\r\n          return function(obj) {\r\n            return toString.call(obj) === tag;\r\n          };\r\n        }\r\n      \r\n        var isString = tagTester('String');\r\n      \r\n        var isNumber = tagTester('Number');\r\n      \r\n        var isDate = tagTester('Date');\r\n      \r\n        var isRegExp = tagTester('RegExp');\r\n      \r\n        var isError = tagTester('Error');\r\n      \r\n        var isSymbol = tagTester('Symbol');\r\n      \r\n        var isArrayBuffer = tagTester('ArrayBuffer');\r\n      \r\n        var isFunction = tagTester('Function');\r\n      \r\n        // Optimize `isFunction` if appropriate. Work around some `typeof` bugs in old\r\n        // v8, IE 11 (#1621), Safari 8 (#1929), and PhantomJS (#2236).\r\n        var nodelist = root.document && root.document.childNodes;\r\n        if ( true && typeof Int8Array != 'object' && typeof nodelist != 'function') {\r\n          isFunction = function(obj) {\r\n            return typeof obj == 'function' || false;\r\n          };\r\n        }\r\n      \r\n        var isFunction$1 = isFunction;\r\n      \r\n        var hasObjectTag = tagTester('Object');\r\n      \r\n        // In IE 10 - Edge 13, `DataView` has string tag `'[object Object]'`.\r\n        // In IE 11, the most common among them, this problem also applies to\r\n        // `Map`, `WeakMap` and `Set`.\r\n        var hasStringTagBug = (\r\n              supportsDataView && hasObjectTag(new DataView(new ArrayBuffer(8)))\r\n            ),\r\n            isIE11 = (typeof Map !== 'undefined' && hasObjectTag(new Map));\r\n      \r\n        var isDataView = tagTester('DataView');\r\n      \r\n        // In IE 10 - Edge 13, we need a different heuristic\r\n        // to determine whether an object is a `DataView`.\r\n        function ie10IsDataView(obj) {\r\n          return obj != null && isFunction$1(obj.getInt8) && isArrayBuffer(obj.buffer);\r\n        }\r\n      \r\n        var isDataView$1 = (hasStringTagBug ? ie10IsDataView : isDataView);\r\n      \r\n        // Is a given value an array?\r\n        // Delegates to ECMA5's native `Array.isArray`.\r\n        var isArray = nativeIsArray || tagTester('Array');\r\n      \r\n        // Internal function to check whether `key` is an own property name of `obj`.\r\n        function has$1(obj, key) {\r\n          return obj != null && hasOwnProperty.call(obj, key);\r\n        }\r\n      \r\n        var isArguments = tagTester('Arguments');\r\n      \r\n        // Define a fallback version of the method in browsers (ahem, IE < 9), where\r\n        // there isn't any inspectable \"Arguments\" type.\r\n        (function() {\r\n          if (!isArguments(arguments)) {\r\n            isArguments = function(obj) {\r\n              return has$1(obj, 'callee');\r\n            };\r\n          }\r\n        }());\r\n      \r\n        var isArguments$1 = isArguments;\r\n      \r\n        // Is a given object a finite number?\r\n        function isFinite$1(obj) {\r\n          return !isSymbol(obj) && _isFinite(obj) && !isNaN(parseFloat(obj));\r\n        }\r\n      \r\n        // Is the given value `NaN`?\r\n        function isNaN$1(obj) {\r\n          return isNumber(obj) && _isNaN(obj);\r\n        }\r\n      \r\n        // Predicate-generating function. Often useful outside of Underscore.\r\n        function constant(value) {\r\n          return function() {\r\n            return value;\r\n          };\r\n        }\r\n      \r\n        // Common internal logic for `isArrayLike` and `isBufferLike`.\r\n        function createSizePropertyCheck(getSizeProperty) {\r\n          return function(collection) {\r\n            var sizeProperty = getSizeProperty(collection);\r\n            return typeof sizeProperty == 'number' && sizeProperty >= 0 && sizeProperty <= MAX_ARRAY_INDEX;\r\n          }\r\n        }\r\n      \r\n        // Internal helper to generate a function to obtain property `key` from `obj`.\r\n        function shallowProperty(key) {\r\n          return function(obj) {\r\n            return obj == null ? void 0 : obj[key];\r\n          };\r\n        }\r\n      \r\n        // Internal helper to obtain the `byteLength` property of an object.\r\n        var getByteLength = shallowProperty('byteLength');\r\n      \r\n        // Internal helper to determine whether we should spend extensive checks against\r\n        // `ArrayBuffer` et al.\r\n        var isBufferLike = createSizePropertyCheck(getByteLength);\r\n      \r\n        // Is a given value a typed array?\r\n        var typedArrayPattern = /\\[object ((I|Ui)nt(8|16|32)|Float(32|64)|Uint8Clamped|Big(I|Ui)nt64)Array\\]/;\r\n        function isTypedArray(obj) {\r\n          // `ArrayBuffer.isView` is the most future-proof, so use it when available.\r\n          // Otherwise, fall back on the above regular expression.\r\n          return nativeIsView ? (nativeIsView(obj) && !isDataView$1(obj)) :\r\n                        isBufferLike(obj) && typedArrayPattern.test(toString.call(obj));\r\n        }\r\n      \r\n        var isTypedArray$1 = supportsArrayBuffer ? isTypedArray : constant(false);\r\n      \r\n        // Internal helper to obtain the `length` property of an object.\r\n        var getLength = shallowProperty('length');\r\n      \r\n        // Internal helper to create a simple lookup structure.\r\n        // `collectNonEnumProps` used to depend on `_.contains`, but this led to\r\n        // circular imports. `emulatedSet` is a one-off solution that only works for\r\n        // arrays of strings.\r\n        function emulatedSet(keys) {\r\n          var hash = {};\r\n          for (var l = keys.length, i = 0; i < l; ++i) hash[keys[i]] = true;\r\n          return {\r\n            contains: function(key) { return hash[key] === true; },\r\n            push: function(key) {\r\n              hash[key] = true;\r\n              return keys.push(key);\r\n            }\r\n          };\r\n        }\r\n      \r\n        // Internal helper. Checks `keys` for the presence of keys in IE < 9 that won't\r\n        // be iterated by `for key in ...` and thus missed. Extends `keys` in place if\r\n        // needed.\r\n        function collectNonEnumProps(obj, keys) {\r\n          keys = emulatedSet(keys);\r\n          var nonEnumIdx = nonEnumerableProps.length;\r\n          var constructor = obj.constructor;\r\n          var proto = (isFunction$1(constructor) && constructor.prototype) || ObjProto;\r\n      \r\n          // Constructor is a special case.\r\n          var prop = 'constructor';\r\n          if (has$1(obj, prop) && !keys.contains(prop)) keys.push(prop);\r\n      \r\n          while (nonEnumIdx--) {\r\n            prop = nonEnumerableProps[nonEnumIdx];\r\n            if (prop in obj && obj[prop] !== proto[prop] && !keys.contains(prop)) {\r\n              keys.push(prop);\r\n            }\r\n          }\r\n        }\r\n      \r\n        // Retrieve the names of an object's own properties.\r\n        // Delegates to **ECMAScript 5**'s native `Object.keys`.\r\n        function keys(obj) {\r\n          if (!isObject(obj)) return [];\r\n          if (nativeKeys) return nativeKeys(obj);\r\n          var keys = [];\r\n          for (var key in obj) if (has$1(obj, key)) keys.push(key);\r\n          // Ahem, IE < 9.\r\n          if (hasEnumBug) collectNonEnumProps(obj, keys);\r\n          return keys;\r\n        }\r\n      \r\n        // Is a given array, string, or object empty?\r\n        // An \"empty\" object has no enumerable own-properties.\r\n        function isEmpty(obj) {\r\n          if (obj == null) return true;\r\n          // Skip the more expensive `toString`-based type checks if `obj` has no\r\n          // `.length`.\r\n          var length = getLength(obj);\r\n          if (typeof length == 'number' && (\r\n            isArray(obj) || isString(obj) || isArguments$1(obj)\r\n          )) return length === 0;\r\n          return getLength(keys(obj)) === 0;\r\n        }\r\n      \r\n        // Returns whether an object has a given set of `key:value` pairs.\r\n        function isMatch(object, attrs) {\r\n          var _keys = keys(attrs), length = _keys.length;\r\n          if (object == null) return !length;\r\n          var obj = Object(object);\r\n          for (var i = 0; i < length; i++) {\r\n            var key = _keys[i];\r\n            if (attrs[key] !== obj[key] || !(key in obj)) return false;\r\n          }\r\n          return true;\r\n        }\r\n      \r\n        // If Underscore is called as a function, it returns a wrapped object that can\r\n        // be used OO-style. This wrapper holds altered versions of all functions added\r\n        // through `_.mixin`. Wrapped objects may be chained.\r\n        function _$1(obj) {\r\n          if (obj instanceof _$1) return obj;\r\n          if (!(this instanceof _$1)) return new _$1(obj);\r\n          this._wrapped = obj;\r\n        }\r\n      \r\n        _$1.VERSION = VERSION;\r\n      \r\n        // Extracts the result from a wrapped and chained object.\r\n        _$1.prototype.value = function() {\r\n          return this._wrapped;\r\n        };\r\n      \r\n        // Provide unwrapping proxies for some methods used in engine operations\r\n        // such as arithmetic and JSON stringification.\r\n        _$1.prototype.valueOf = _$1.prototype.toJSON = _$1.prototype.value;\r\n      \r\n        _$1.prototype.toString = function() {\r\n          return String(this._wrapped);\r\n        };\r\n      \r\n        // Internal function to wrap or shallow-copy an ArrayBuffer,\r\n        // typed array or DataView to a new view, reusing the buffer.\r\n        function toBufferView(bufferSource) {\r\n          return new Uint8Array(\r\n            bufferSource.buffer || bufferSource,\r\n            bufferSource.byteOffset || 0,\r\n            getByteLength(bufferSource)\r\n          );\r\n        }\r\n      \r\n        // We use this string twice, so give it a name for minification.\r\n        var tagDataView = '[object DataView]';\r\n      \r\n        // Internal recursive comparison function for `_.isEqual`.\r\n        function eq(a, b, aStack, bStack) {\r\n          // Identical objects are equal. `0 === -0`, but they aren't identical.\r\n          // See the [Harmony `egal` proposal](https://wiki.ecmascript.org/doku.php?id=harmony:egal).\r\n          if (a === b) return a !== 0 || 1 / a === 1 / b;\r\n          // `null` or `undefined` only equal to itself (strict comparison).\r\n          if (a == null || b == null) return false;\r\n          // `NaN`s are equivalent, but non-reflexive.\r\n          if (a !== a) return b !== b;\r\n          // Exhaust primitive checks\r\n          var type = typeof a;\r\n          if (type !== 'function' && type !== 'object' && typeof b != 'object') return false;\r\n          return deepEq(a, b, aStack, bStack);\r\n        }\r\n      \r\n        // Internal recursive comparison function for `_.isEqual`.\r\n        function deepEq(a, b, aStack, bStack) {\r\n          // Unwrap any wrapped objects.\r\n          if (a instanceof _$1) a = a._wrapped;\r\n          if (b instanceof _$1) b = b._wrapped;\r\n          // Compare `[[Class]]` names.\r\n          var className = toString.call(a);\r\n          if (className !== toString.call(b)) return false;\r\n          // Work around a bug in IE 10 - Edge 13.\r\n          if (hasStringTagBug && className == '[object Object]' && isDataView$1(a)) {\r\n            if (!isDataView$1(b)) return false;\r\n            className = tagDataView;\r\n          }\r\n          switch (className) {\r\n            // These types are compared by value.\r\n            case '[object RegExp]':\r\n              // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\r\n            case '[object String]':\r\n              // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\r\n              // equivalent to `new String(\"5\")`.\r\n              return '' + a === '' + b;\r\n            case '[object Number]':\r\n              // `NaN`s are equivalent, but non-reflexive.\r\n              // Object(NaN) is equivalent to NaN.\r\n              if (+a !== +a) return +b !== +b;\r\n              // An `egal` comparison is performed for other numeric values.\r\n              return +a === 0 ? 1 / +a === 1 / b : +a === +b;\r\n            case '[object Date]':\r\n            case '[object Boolean]':\r\n              // Coerce dates and booleans to numeric primitive values. Dates are compared by their\r\n              // millisecond representations. Note that invalid dates with millisecond representations\r\n              // of `NaN` are not equivalent.\r\n              return +a === +b;\r\n            case '[object Symbol]':\r\n              return SymbolProto.valueOf.call(a) === SymbolProto.valueOf.call(b);\r\n            case '[object ArrayBuffer]':\r\n            case tagDataView:\r\n              // Coerce to typed array so we can fall through.\r\n              return deepEq(toBufferView(a), toBufferView(b), aStack, bStack);\r\n          }\r\n      \r\n          var areArrays = className === '[object Array]';\r\n          if (!areArrays && isTypedArray$1(a)) {\r\n              var byteLength = getByteLength(a);\r\n              if (byteLength !== getByteLength(b)) return false;\r\n              if (a.buffer === b.buffer && a.byteOffset === b.byteOffset) return true;\r\n              areArrays = true;\r\n          }\r\n          if (!areArrays) {\r\n            if (typeof a != 'object' || typeof b != 'object') return false;\r\n      \r\n            // Objects with different constructors are not equivalent, but `Object`s or `Array`s\r\n            // from different frames are.\r\n            var aCtor = a.constructor, bCtor = b.constructor;\r\n            if (aCtor !== bCtor && !(isFunction$1(aCtor) && aCtor instanceof aCtor &&\r\n                                     isFunction$1(bCtor) && bCtor instanceof bCtor)\r\n                                && ('constructor' in a && 'constructor' in b)) {\r\n              return false;\r\n            }\r\n          }\r\n          // Assume equality for cyclic structures. The algorithm for detecting cyclic\r\n          // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\r\n      \r\n          // Initializing stack of traversed objects.\r\n          // It's done here since we only need them for objects and arrays comparison.\r\n          aStack = aStack || [];\r\n          bStack = bStack || [];\r\n          var length = aStack.length;\r\n          while (length--) {\r\n            // Linear search. Performance is inversely proportional to the number of\r\n            // unique nested structures.\r\n            if (aStack[length] === a) return bStack[length] === b;\r\n          }\r\n      \r\n          // Add the first object to the stack of traversed objects.\r\n          aStack.push(a);\r\n          bStack.push(b);\r\n      \r\n          // Recursively compare objects and arrays.\r\n          if (areArrays) {\r\n            // Compare array lengths to determine if a deep comparison is necessary.\r\n            length = a.length;\r\n            if (length !== b.length) return false;\r\n            // Deep compare the contents, ignoring non-numeric properties.\r\n            while (length--) {\r\n              if (!eq(a[length], b[length], aStack, bStack)) return false;\r\n            }\r\n          } else {\r\n            // Deep compare objects.\r\n            var _keys = keys(a), key;\r\n            length = _keys.length;\r\n            // Ensure that both objects contain the same number of properties before comparing deep equality.\r\n            if (keys(b).length !== length) return false;\r\n            while (length--) {\r\n              // Deep compare each member\r\n              key = _keys[length];\r\n              if (!(has$1(b, key) && eq(a[key], b[key], aStack, bStack))) return false;\r\n            }\r\n          }\r\n          // Remove the first object from the stack of traversed objects.\r\n          aStack.pop();\r\n          bStack.pop();\r\n          return true;\r\n        }\r\n      \r\n        // Perform a deep comparison to check if two objects are equal.\r\n        function isEqual(a, b) {\r\n          return eq(a, b);\r\n        }\r\n      \r\n        // Retrieve all the enumerable property names of an object.\r\n        function allKeys(obj) {\r\n          if (!isObject(obj)) return [];\r\n          var keys = [];\r\n          for (var key in obj) keys.push(key);\r\n          // Ahem, IE < 9.\r\n          if (hasEnumBug) collectNonEnumProps(obj, keys);\r\n          return keys;\r\n        }\r\n      \r\n        // Since the regular `Object.prototype.toString` type tests don't work for\r\n        // some types in IE 11, we use a fingerprinting heuristic instead, based\r\n        // on the methods. It's not great, but it's the best we got.\r\n        // The fingerprint method lists are defined below.\r\n        function ie11fingerprint(methods) {\r\n          var length = getLength(methods);\r\n          return function(obj) {\r\n            if (obj == null) return false;\r\n            // `Map`, `WeakMap` and `Set` have no enumerable keys.\r\n            var keys = allKeys(obj);\r\n            if (getLength(keys)) return false;\r\n            for (var i = 0; i < length; i++) {\r\n              if (!isFunction$1(obj[methods[i]])) return false;\r\n            }\r\n            // If we are testing against `WeakMap`, we need to ensure that\r\n            // `obj` doesn't have a `forEach` method in order to distinguish\r\n            // it from a regular `Map`.\r\n            return methods !== weakMapMethods || !isFunction$1(obj[forEachName]);\r\n          };\r\n        }\r\n      \r\n        // In the interest of compact minification, we write\r\n        // each string in the fingerprints only once.\r\n        var forEachName = 'forEach',\r\n            hasName = 'has',\r\n            commonInit = ['clear', 'delete'],\r\n            mapTail = ['get', hasName, 'set'];\r\n      \r\n        // `Map`, `WeakMap` and `Set` each have slightly different\r\n        // combinations of the above sublists.\r\n        var mapMethods = commonInit.concat(forEachName, mapTail),\r\n            weakMapMethods = commonInit.concat(mapTail),\r\n            setMethods = ['add'].concat(commonInit, forEachName, hasName);\r\n      \r\n        var isMap = isIE11 ? ie11fingerprint(mapMethods) : tagTester('Map');\r\n      \r\n        var isWeakMap = isIE11 ? ie11fingerprint(weakMapMethods) : tagTester('WeakMap');\r\n      \r\n        var isSet = isIE11 ? ie11fingerprint(setMethods) : tagTester('Set');\r\n      \r\n        var isWeakSet = tagTester('WeakSet');\r\n      \r\n        // Retrieve the values of an object's properties.\r\n        function values(obj) {\r\n          var _keys = keys(obj);\r\n          var length = _keys.length;\r\n          var values = Array(length);\r\n          for (var i = 0; i < length; i++) {\r\n            values[i] = obj[_keys[i]];\r\n          }\r\n          return values;\r\n        }\r\n      \r\n        // Convert an object into a list of `[key, value]` pairs.\r\n        // The opposite of `_.object` with one argument.\r\n        function pairs(obj) {\r\n          var _keys = keys(obj);\r\n          var length = _keys.length;\r\n          var pairs = Array(length);\r\n          for (var i = 0; i < length; i++) {\r\n            pairs[i] = [_keys[i], obj[_keys[i]]];\r\n          }\r\n          return pairs;\r\n        }\r\n      \r\n        // Invert the keys and values of an object. The values must be serializable.\r\n        function invert(obj) {\r\n          var result = {};\r\n          var _keys = keys(obj);\r\n          for (var i = 0, length = _keys.length; i < length; i++) {\r\n            result[obj[_keys[i]]] = _keys[i];\r\n          }\r\n          return result;\r\n        }\r\n      \r\n        // Return a sorted list of the function names available on the object.\r\n        function functions(obj) {\r\n          var names = [];\r\n          for (var key in obj) {\r\n            if (isFunction$1(obj[key])) names.push(key);\r\n          }\r\n          return names.sort();\r\n        }\r\n      \r\n        // An internal function for creating assigner functions.\r\n        function createAssigner(keysFunc, defaults) {\r\n          return function(obj) {\r\n            var length = arguments.length;\r\n            if (defaults) obj = Object(obj);\r\n            if (length < 2 || obj == null) return obj;\r\n            for (var index = 1; index < length; index++) {\r\n              var source = arguments[index],\r\n                  keys = keysFunc(source),\r\n                  l = keys.length;\r\n              for (var i = 0; i < l; i++) {\r\n                var key = keys[i];\r\n                if (!defaults || obj[key] === void 0) obj[key] = source[key];\r\n              }\r\n            }\r\n            return obj;\r\n          };\r\n        }\r\n      \r\n        // Extend a given object with all the properties in passed-in object(s).\r\n        var extend = createAssigner(allKeys);\r\n      \r\n        // Assigns a given object with all the own properties in the passed-in\r\n        // object(s).\r\n        // (https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object/assign)\r\n        var extendOwn = createAssigner(keys);\r\n      \r\n        // Fill in a given object with default properties.\r\n        var defaults = createAssigner(allKeys, true);\r\n      \r\n        // Create a naked function reference for surrogate-prototype-swapping.\r\n        function ctor() {\r\n          return function(){};\r\n        }\r\n      \r\n        // An internal function for creating a new object that inherits from another.\r\n        function baseCreate(prototype) {\r\n          if (!isObject(prototype)) return {};\r\n          if (nativeCreate) return nativeCreate(prototype);\r\n          var Ctor = ctor();\r\n          Ctor.prototype = prototype;\r\n          var result = new Ctor;\r\n          Ctor.prototype = null;\r\n          return result;\r\n        }\r\n      \r\n        // Creates an object that inherits from the given prototype object.\r\n        // If additional properties are provided then they will be added to the\r\n        // created object.\r\n        function create(prototype, props) {\r\n          var result = baseCreate(prototype);\r\n          if (props) extendOwn(result, props);\r\n          return result;\r\n        }\r\n      \r\n        // Create a (shallow-cloned) duplicate of an object.\r\n        function clone(obj) {\r\n          if (!isObject(obj)) return obj;\r\n          return isArray(obj) ? obj.slice() : extend({}, obj);\r\n        }\r\n      \r\n        // Invokes `interceptor` with the `obj` and then returns `obj`.\r\n        // The primary purpose of this method is to \"tap into\" a method chain, in\r\n        // order to perform operations on intermediate results within the chain.\r\n        function tap(obj, interceptor) {\r\n          interceptor(obj);\r\n          return obj;\r\n        }\r\n      \r\n        // Normalize a (deep) property `path` to array.\r\n        // Like `_.iteratee`, this function can be customized.\r\n        function toPath$1(path) {\r\n          return isArray(path) ? path : [path];\r\n        }\r\n        _$1.toPath = toPath$1;\r\n      \r\n        // Internal wrapper for `_.toPath` to enable minification.\r\n        // Similar to `cb` for `_.iteratee`.\r\n        function toPath(path) {\r\n          return _$1.toPath(path);\r\n        }\r\n      \r\n        // Internal function to obtain a nested property in `obj` along `path`.\r\n        function deepGet(obj, path) {\r\n          var length = path.length;\r\n          for (var i = 0; i < length; i++) {\r\n            if (obj == null) return void 0;\r\n            obj = obj[path[i]];\r\n          }\r\n          return length ? obj : void 0;\r\n        }\r\n      \r\n        // Get the value of the (deep) property on `path` from `object`.\r\n        // If any property in `path` does not exist or if the value is\r\n        // `undefined`, return `defaultValue` instead.\r\n        // The `path` is normalized through `_.toPath`.\r\n        function get(object, path, defaultValue) {\r\n          var value = deepGet(object, toPath(path));\r\n          return isUndefined(value) ? defaultValue : value;\r\n        }\r\n      \r\n        // Shortcut function for checking if an object has a given property directly on\r\n        // itself (in other words, not on a prototype). Unlike the internal `has`\r\n        // function, this public version can also traverse nested properties.\r\n        function has(obj, path) {\r\n          path = toPath(path);\r\n          var length = path.length;\r\n          for (var i = 0; i < length; i++) {\r\n            var key = path[i];\r\n            if (!has$1(obj, key)) return false;\r\n            obj = obj[key];\r\n          }\r\n          return !!length;\r\n        }\r\n      \r\n        // Keep the identity function around for default iteratees.\r\n        function identity(value) {\r\n          return value;\r\n        }\r\n      \r\n        // Returns a predicate for checking whether an object has a given set of\r\n        // `key:value` pairs.\r\n        function matcher(attrs) {\r\n          attrs = extendOwn({}, attrs);\r\n          return function(obj) {\r\n            return isMatch(obj, attrs);\r\n          };\r\n        }\r\n      \r\n        // Creates a function that, when passed an object, will traverse that object’s\r\n        // properties down the given `path`, specified as an array of keys or indices.\r\n        function property(path) {\r\n          path = toPath(path);\r\n          return function(obj) {\r\n            return deepGet(obj, path);\r\n          };\r\n        }\r\n      \r\n        // Internal function that returns an efficient (for current engines) version\r\n        // of the passed-in callback, to be repeatedly applied in other Underscore\r\n        // functions.\r\n        function optimizeCb(func, context, argCount) {\r\n          if (context === void 0) return func;\r\n          switch (argCount == null ? 3 : argCount) {\r\n            case 1: return function(value) {\r\n              return func.call(context, value);\r\n            };\r\n            // The 2-argument case is omitted because we’re not using it.\r\n            case 3: return function(value, index, collection) {\r\n              return func.call(context, value, index, collection);\r\n            };\r\n            case 4: return function(accumulator, value, index, collection) {\r\n              return func.call(context, accumulator, value, index, collection);\r\n            };\r\n          }\r\n          return function() {\r\n            return func.apply(context, arguments);\r\n          };\r\n        }\r\n      \r\n        // An internal function to generate callbacks that can be applied to each\r\n        // element in a collection, returning the desired result — either `_.identity`,\r\n        // an arbitrary callback, a property matcher, or a property accessor.\r\n        function baseIteratee(value, context, argCount) {\r\n          if (value == null) return identity;\r\n          if (isFunction$1(value)) return optimizeCb(value, context, argCount);\r\n          if (isObject(value) && !isArray(value)) return matcher(value);\r\n          return property(value);\r\n        }\r\n      \r\n        // External wrapper for our callback generator. Users may customize\r\n        // `_.iteratee` if they want additional predicate/iteratee shorthand styles.\r\n        // This abstraction hides the internal-only `argCount` argument.\r\n        function iteratee(value, context) {\r\n          return baseIteratee(value, context, Infinity);\r\n        }\r\n        _$1.iteratee = iteratee;\r\n      \r\n        // The function we call internally to generate a callback. It invokes\r\n        // `_.iteratee` if overridden, otherwise `baseIteratee`.\r\n        function cb(value, context, argCount) {\r\n          if (_$1.iteratee !== iteratee) return _$1.iteratee(value, context);\r\n          return baseIteratee(value, context, argCount);\r\n        }\r\n      \r\n        // Returns the results of applying the `iteratee` to each element of `obj`.\r\n        // In contrast to `_.map` it returns an object.\r\n        function mapObject(obj, iteratee, context) {\r\n          iteratee = cb(iteratee, context);\r\n          var _keys = keys(obj),\r\n              length = _keys.length,\r\n              results = {};\r\n          for (var index = 0; index < length; index++) {\r\n            var currentKey = _keys[index];\r\n            results[currentKey] = iteratee(obj[currentKey], currentKey, obj);\r\n          }\r\n          return results;\r\n        }\r\n      \r\n        // Predicate-generating function. Often useful outside of Underscore.\r\n        function noop(){}\r\n      \r\n        // Generates a function for a given object that returns a given property.\r\n        function propertyOf(obj) {\r\n          if (obj == null) return noop;\r\n          return function(path) {\r\n            return get(obj, path);\r\n          };\r\n        }\r\n      \r\n        // Run a function **n** times.\r\n        function times(n, iteratee, context) {\r\n          var accum = Array(Math.max(0, n));\r\n          iteratee = optimizeCb(iteratee, context, 1);\r\n          for (var i = 0; i < n; i++) accum[i] = iteratee(i);\r\n          return accum;\r\n        }\r\n      \r\n        // Return a random integer between `min` and `max` (inclusive).\r\n        function random(min, max) {\r\n          if (max == null) {\r\n            max = min;\r\n            min = 0;\r\n          }\r\n          return min + Math.floor(Math.random() * (max - min + 1));\r\n        }\r\n      \r\n        // A (possibly faster) way to get the current timestamp as an integer.\r\n        var now = Date.now || function() {\r\n          return new Date().getTime();\r\n        };\r\n      \r\n        // Internal helper to generate functions for escaping and unescaping strings\r\n        // to/from HTML interpolation.\r\n        function createEscaper(map) {\r\n          var escaper = function(match) {\r\n            return map[match];\r\n          };\r\n          // Regexes for identifying a key that needs to be escaped.\r\n          var source = '(?:' + keys(map).join('|') + ')';\r\n          var testRegexp = RegExp(source);\r\n          var replaceRegexp = RegExp(source, 'g');\r\n          return function(string) {\r\n            string = string == null ? '' : '' + string;\r\n            return testRegexp.test(string) ? string.replace(replaceRegexp, escaper) : string;\r\n          };\r\n        }\r\n      \r\n        // Internal list of HTML entities for escaping.\r\n        var escapeMap = {\r\n          '&': '&amp;',\r\n          '<': '&lt;',\r\n          '>': '&gt;',\r\n          '\"': '&quot;',\r\n          \"'\": '&#x27;',\r\n          '`': '&#x60;'\r\n        };\r\n      \r\n        // Function for escaping strings to HTML interpolation.\r\n        var _escape = createEscaper(escapeMap);\r\n      \r\n        // Internal list of HTML entities for unescaping.\r\n        var unescapeMap = invert(escapeMap);\r\n      \r\n        // Function for unescaping strings from HTML interpolation.\r\n        var _unescape = createEscaper(unescapeMap);\r\n      \r\n        // By default, Underscore uses ERB-style template delimiters. Change the\r\n        // following template settings to use alternative delimiters.\r\n        var templateSettings = _$1.templateSettings = {\r\n          evaluate: /<%([\\s\\S]+?)%>/g,\r\n          interpolate: /<%=([\\s\\S]+?)%>/g,\r\n          escape: /<%-([\\s\\S]+?)%>/g\r\n        };\r\n      \r\n        // When customizing `_.templateSettings`, if you don't want to define an\r\n        // interpolation, evaluation or escaping regex, we need one that is\r\n        // guaranteed not to match.\r\n        var noMatch = /(.)^/;\r\n      \r\n        // Certain characters need to be escaped so that they can be put into a\r\n        // string literal.\r\n        var escapes = {\r\n          \"'\": \"'\",\r\n          '\\\\': '\\\\',\r\n          '\\r': 'r',\r\n          '\\n': 'n',\r\n          '\\u2028': 'u2028',\r\n          '\\u2029': 'u2029'\r\n        };\r\n      \r\n        var escapeRegExp = /\\\\|'|\\r|\\n|\\u2028|\\u2029/g;\r\n      \r\n        function escapeChar(match) {\r\n          return '\\\\' + escapes[match];\r\n        }\r\n      \r\n        // In order to prevent third-party code injection through\r\n        // `_.templateSettings.variable`, we test it against the following regular\r\n        // expression. It is intentionally a bit more liberal than just matching valid\r\n        // identifiers, but still prevents possible loopholes through defaults or\r\n        // destructuring assignment.\r\n        var bareIdentifier = /^\\s*(\\w|\\$)+\\s*$/;\r\n      \r\n        // JavaScript micro-templating, similar to John Resig's implementation.\r\n        // Underscore templating handles arbitrary delimiters, preserves whitespace,\r\n        // and correctly escapes quotes within interpolated code.\r\n        // NB: `oldSettings` only exists for backwards compatibility.\r\n        function template(text, settings, oldSettings) {\r\n          if (!settings && oldSettings) settings = oldSettings;\r\n          settings = defaults({}, settings, _$1.templateSettings);\r\n      \r\n          // Combine delimiters into one regular expression via alternation.\r\n          var matcher = RegExp([\r\n            (settings.escape || noMatch).source,\r\n            (settings.interpolate || noMatch).source,\r\n            (settings.evaluate || noMatch).source\r\n          ].join('|') + '|$', 'g');\r\n      \r\n          // Compile the template source, escaping string literals appropriately.\r\n          var index = 0;\r\n          var source = \"__p+='\";\r\n          text.replace(matcher, function(match, escape, interpolate, evaluate, offset) {\r\n            source += text.slice(index, offset).replace(escapeRegExp, escapeChar);\r\n            index = offset + match.length;\r\n      \r\n            if (escape) {\r\n              source += \"'+\\n((__t=(\" + escape + \"))==null?'':_.escape(__t))+\\n'\";\r\n            } else if (interpolate) {\r\n              source += \"'+\\n((__t=(\" + interpolate + \"))==null?'':__t)+\\n'\";\r\n            } else if (evaluate) {\r\n              source += \"';\\n\" + evaluate + \"\\n__p+='\";\r\n            }\r\n      \r\n            // Adobe VMs need the match returned to produce the correct offset.\r\n            return match;\r\n          });\r\n          source += \"';\\n\";\r\n      \r\n          var argument = settings.variable;\r\n          if (argument) {\r\n            // Insure against third-party code injection. (CVE-2021-23358)\r\n            if (!bareIdentifier.test(argument)) throw new Error(\r\n              'variable is not a bare identifier: ' + argument\r\n            );\r\n          } else {\r\n            // If a variable is not specified, place data values in local scope.\r\n            source = 'with(obj||{}){\\n' + source + '}\\n';\r\n            argument = 'obj';\r\n          }\r\n      \r\n          source = \"var __t,__p='',__j=Array.prototype.join,\" +\r\n            \"print=function(){__p+=__j.call(arguments,'');};\\n\" +\r\n            source + 'return __p;\\n';\r\n      \r\n          var render;\r\n          try {\r\n            render = new Function(argument, '_', source);\r\n          } catch (e) {\r\n            e.source = source;\r\n            throw e;\r\n          }\r\n      \r\n          var template = function(data) {\r\n            return render.call(this, data, _$1);\r\n          };\r\n      \r\n          // Provide the compiled source as a convenience for precompilation.\r\n          template.source = 'function(' + argument + '){\\n' + source + '}';\r\n      \r\n          return template;\r\n        }\r\n      \r\n        // Traverses the children of `obj` along `path`. If a child is a function, it\r\n        // is invoked with its parent as context. Returns the value of the final\r\n        // child, or `fallback` if any child is undefined.\r\n        function result(obj, path, fallback) {\r\n          path = toPath(path);\r\n          var length = path.length;\r\n          if (!length) {\r\n            return isFunction$1(fallback) ? fallback.call(obj) : fallback;\r\n          }\r\n          for (var i = 0; i < length; i++) {\r\n            var prop = obj == null ? void 0 : obj[path[i]];\r\n            if (prop === void 0) {\r\n              prop = fallback;\r\n              i = length; // Ensure we don't continue iterating.\r\n            }\r\n            obj = isFunction$1(prop) ? prop.call(obj) : prop;\r\n          }\r\n          return obj;\r\n        }\r\n      \r\n        // Generate a unique integer id (unique within the entire client session).\r\n        // Useful for temporary DOM ids.\r\n        var idCounter = 0;\r\n        function uniqueId(prefix) {\r\n          var id = ++idCounter + '';\r\n          return prefix ? prefix + id : id;\r\n        }\r\n      \r\n        // Start chaining a wrapped Underscore object.\r\n        function chain(obj) {\r\n          var instance = _$1(obj);\r\n          instance._chain = true;\r\n          return instance;\r\n        }\r\n      \r\n        // Internal function to execute `sourceFunc` bound to `context` with optional\r\n        // `args`. Determines whether to execute a function as a constructor or as a\r\n        // normal function.\r\n        function executeBound(sourceFunc, boundFunc, context, callingContext, args) {\r\n          if (!(callingContext instanceof boundFunc)) return sourceFunc.apply(context, args);\r\n          var self = baseCreate(sourceFunc.prototype);\r\n          var result = sourceFunc.apply(self, args);\r\n          if (isObject(result)) return result;\r\n          return self;\r\n        }\r\n      \r\n        // Partially apply a function by creating a version that has had some of its\r\n        // arguments pre-filled, without changing its dynamic `this` context. `_` acts\r\n        // as a placeholder by default, allowing any combination of arguments to be\r\n        // pre-filled. Set `_.partial.placeholder` for a custom placeholder argument.\r\n        var partial = restArguments(function(func, boundArgs) {\r\n          var placeholder = partial.placeholder;\r\n          var bound = function() {\r\n            var position = 0, length = boundArgs.length;\r\n            var args = Array(length);\r\n            for (var i = 0; i < length; i++) {\r\n              args[i] = boundArgs[i] === placeholder ? arguments[position++] : boundArgs[i];\r\n            }\r\n            while (position < arguments.length) args.push(arguments[position++]);\r\n            return executeBound(func, bound, this, this, args);\r\n          };\r\n          return bound;\r\n        });\r\n      \r\n        partial.placeholder = _$1;\r\n      \r\n        // Create a function bound to a given object (assigning `this`, and arguments,\r\n        // optionally).\r\n        var bind = restArguments(function(func, context, args) {\r\n          if (!isFunction$1(func)) throw new TypeError('Bind must be called on a function');\r\n          var bound = restArguments(function(callArgs) {\r\n            return executeBound(func, bound, context, this, args.concat(callArgs));\r\n          });\r\n          return bound;\r\n        });\r\n      \r\n        // Internal helper for collection methods to determine whether a collection\r\n        // should be iterated as an array or as an object.\r\n        // Related: https://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength\r\n        // Avoids a very nasty iOS 8 JIT bug on ARM-64. #2094\r\n        var isArrayLike = createSizePropertyCheck(getLength);\r\n      \r\n        // Internal implementation of a recursive `flatten` function.\r\n        function flatten$1(input, depth, strict, output) {\r\n          output = output || [];\r\n          if (!depth && depth !== 0) {\r\n            depth = Infinity;\r\n          } else if (depth <= 0) {\r\n            return output.concat(input);\r\n          }\r\n          var idx = output.length;\r\n          for (var i = 0, length = getLength(input); i < length; i++) {\r\n            var value = input[i];\r\n            if (isArrayLike(value) && (isArray(value) || isArguments$1(value))) {\r\n              // Flatten current level of array or arguments object.\r\n              if (depth > 1) {\r\n                flatten$1(value, depth - 1, strict, output);\r\n                idx = output.length;\r\n              } else {\r\n                var j = 0, len = value.length;\r\n                while (j < len) output[idx++] = value[j++];\r\n              }\r\n            } else if (!strict) {\r\n              output[idx++] = value;\r\n            }\r\n          }\r\n          return output;\r\n        }\r\n      \r\n        // Bind a number of an object's methods to that object. Remaining arguments\r\n        // are the method names to be bound. Useful for ensuring that all callbacks\r\n        // defined on an object belong to it.\r\n        var bindAll = restArguments(function(obj, keys) {\r\n          keys = flatten$1(keys, false, false);\r\n          var index = keys.length;\r\n          if (index < 1) throw new Error('bindAll must be passed function names');\r\n          while (index--) {\r\n            var key = keys[index];\r\n            obj[key] = bind(obj[key], obj);\r\n          }\r\n          return obj;\r\n        });\r\n      \r\n        // Memoize an expensive function by storing its results.\r\n        function memoize(func, hasher) {\r\n          var memoize = function(key) {\r\n            var cache = memoize.cache;\r\n            var address = '' + (hasher ? hasher.apply(this, arguments) : key);\r\n            if (!has$1(cache, address)) cache[address] = func.apply(this, arguments);\r\n            return cache[address];\r\n          };\r\n          memoize.cache = {};\r\n          return memoize;\r\n        }\r\n      \r\n        // Delays a function for the given number of milliseconds, and then calls\r\n        // it with the arguments supplied.\r\n        var delay = restArguments(function(func, wait, args) {\r\n          return setTimeout(function() {\r\n            return func.apply(null, args);\r\n          }, wait);\r\n        });\r\n      \r\n        // Defers a function, scheduling it to run after the current call stack has\r\n        // cleared.\r\n        var defer = partial(delay, _$1, 1);\r\n      \r\n        // Returns a function, that, when invoked, will only be triggered at most once\r\n        // during a given window of time. Normally, the throttled function will run\r\n        // as much as it can, without ever going more than once per `wait` duration;\r\n        // but if you'd like to disable the execution on the leading edge, pass\r\n        // `{leading: false}`. To disable execution on the trailing edge, ditto.\r\n        function throttle(func, wait, options) {\r\n          var timeout, context, args, result;\r\n          var previous = 0;\r\n          if (!options) options = {};\r\n      \r\n          var later = function() {\r\n            previous = options.leading === false ? 0 : now();\r\n            timeout = null;\r\n            result = func.apply(context, args);\r\n            if (!timeout) context = args = null;\r\n          };\r\n      \r\n          var throttled = function() {\r\n            var _now = now();\r\n            if (!previous && options.leading === false) previous = _now;\r\n            var remaining = wait - (_now - previous);\r\n            context = this;\r\n            args = arguments;\r\n            if (remaining <= 0 || remaining > wait) {\r\n              if (timeout) {\r\n                clearTimeout(timeout);\r\n                timeout = null;\r\n              }\r\n              previous = _now;\r\n              result = func.apply(context, args);\r\n              if (!timeout) context = args = null;\r\n            } else if (!timeout && options.trailing !== false) {\r\n              timeout = setTimeout(later, remaining);\r\n            }\r\n            return result;\r\n          };\r\n      \r\n          throttled.cancel = function() {\r\n            clearTimeout(timeout);\r\n            previous = 0;\r\n            timeout = context = args = null;\r\n          };\r\n      \r\n          return throttled;\r\n        }\r\n      \r\n        // When a sequence of calls of the returned function ends, the argument\r\n        // function is triggered. The end of a sequence is defined by the `wait`\r\n        // parameter. If `immediate` is passed, the argument function will be\r\n        // triggered at the beginning of the sequence instead of at the end.\r\n        function debounce(func, wait, immediate) {\r\n          var timeout, previous, args, result, context;\r\n      \r\n          var later = function() {\r\n            var passed = now() - previous;\r\n            if (wait > passed) {\r\n              timeout = setTimeout(later, wait - passed);\r\n            } else {\r\n              timeout = null;\r\n              if (!immediate) result = func.apply(context, args);\r\n              // This check is needed because `func` can recursively invoke `debounced`.\r\n              if (!timeout) args = context = null;\r\n            }\r\n          };\r\n      \r\n          var debounced = restArguments(function(_args) {\r\n            context = this;\r\n            args = _args;\r\n            previous = now();\r\n            if (!timeout) {\r\n              timeout = setTimeout(later, wait);\r\n              if (immediate) result = func.apply(context, args);\r\n            }\r\n            return result;\r\n          });\r\n      \r\n          debounced.cancel = function() {\r\n            clearTimeout(timeout);\r\n            timeout = args = context = null;\r\n          };\r\n      \r\n          return debounced;\r\n        }\r\n      \r\n        // Returns the first function passed as an argument to the second,\r\n        // allowing you to adjust arguments, run code before and after, and\r\n        // conditionally execute the original function.\r\n        function wrap(func, wrapper) {\r\n          return partial(wrapper, func);\r\n        }\r\n      \r\n        // Returns a negated version of the passed-in predicate.\r\n        function negate(predicate) {\r\n          return function() {\r\n            return !predicate.apply(this, arguments);\r\n          };\r\n        }\r\n      \r\n        // Returns a function that is the composition of a list of functions, each\r\n        // consuming the return value of the function that follows.\r\n        function compose() {\r\n          var args = arguments;\r\n          var start = args.length - 1;\r\n          return function() {\r\n            var i = start;\r\n            var result = args[start].apply(this, arguments);\r\n            while (i--) result = args[i].call(this, result);\r\n            return result;\r\n          };\r\n        }\r\n      \r\n        // Returns a function that will only be executed on and after the Nth call.\r\n        function after(times, func) {\r\n          return function() {\r\n            if (--times < 1) {\r\n              return func.apply(this, arguments);\r\n            }\r\n          };\r\n        }\r\n      \r\n        // Returns a function that will only be executed up to (but not including) the\r\n        // Nth call.\r\n        function before(times, func) {\r\n          var memo;\r\n          return function() {\r\n            if (--times > 0) {\r\n              memo = func.apply(this, arguments);\r\n            }\r\n            if (times <= 1) func = null;\r\n            return memo;\r\n          };\r\n        }\r\n      \r\n        // Returns a function that will be executed at most one time, no matter how\r\n        // often you call it. Useful for lazy initialization.\r\n        var once = partial(before, 2);\r\n      \r\n        // Returns the first key on an object that passes a truth test.\r\n        function findKey(obj, predicate, context) {\r\n          predicate = cb(predicate, context);\r\n          var _keys = keys(obj), key;\r\n          for (var i = 0, length = _keys.length; i < length; i++) {\r\n            key = _keys[i];\r\n            if (predicate(obj[key], key, obj)) return key;\r\n          }\r\n        }\r\n      \r\n        // Internal function to generate `_.findIndex` and `_.findLastIndex`.\r\n        function createPredicateIndexFinder(dir) {\r\n          return function(array, predicate, context) {\r\n            predicate = cb(predicate, context);\r\n            var length = getLength(array);\r\n            var index = dir > 0 ? 0 : length - 1;\r\n            for (; index >= 0 && index < length; index += dir) {\r\n              if (predicate(array[index], index, array)) return index;\r\n            }\r\n            return -1;\r\n          };\r\n        }\r\n      \r\n        // Returns the first index on an array-like that passes a truth test.\r\n        var findIndex = createPredicateIndexFinder(1);\r\n      \r\n        // Returns the last index on an array-like that passes a truth test.\r\n        var findLastIndex = createPredicateIndexFinder(-1);\r\n      \r\n        // Use a comparator function to figure out the smallest index at which\r\n        // an object should be inserted so as to maintain order. Uses binary search.\r\n        function sortedIndex(array, obj, iteratee, context) {\r\n          iteratee = cb(iteratee, context, 1);\r\n          var value = iteratee(obj);\r\n          var low = 0, high = getLength(array);\r\n          while (low < high) {\r\n            var mid = Math.floor((low + high) / 2);\r\n            if (iteratee(array[mid]) < value) low = mid + 1; else high = mid;\r\n          }\r\n          return low;\r\n        }\r\n      \r\n        // Internal function to generate the `_.indexOf` and `_.lastIndexOf` functions.\r\n        function createIndexFinder(dir, predicateFind, sortedIndex) {\r\n          return function(array, item, idx) {\r\n            var i = 0, length = getLength(array);\r\n            if (typeof idx == 'number') {\r\n              if (dir > 0) {\r\n                i = idx >= 0 ? idx : Math.max(idx + length, i);\r\n              } else {\r\n                length = idx >= 0 ? Math.min(idx + 1, length) : idx + length + 1;\r\n              }\r\n            } else if (sortedIndex && idx && length) {\r\n              idx = sortedIndex(array, item);\r\n              return array[idx] === item ? idx : -1;\r\n            }\r\n            if (item !== item) {\r\n              idx = predicateFind(slice.call(array, i, length), isNaN$1);\r\n              return idx >= 0 ? idx + i : -1;\r\n            }\r\n            for (idx = dir > 0 ? i : length - 1; idx >= 0 && idx < length; idx += dir) {\r\n              if (array[idx] === item) return idx;\r\n            }\r\n            return -1;\r\n          };\r\n        }\r\n      \r\n        // Return the position of the first occurrence of an item in an array,\r\n        // or -1 if the item is not included in the array.\r\n        // If the array is large and already in sort order, pass `true`\r\n        // for **isSorted** to use binary search.\r\n        var indexOf = createIndexFinder(1, findIndex, sortedIndex);\r\n      \r\n        // Return the position of the last occurrence of an item in an array,\r\n        // or -1 if the item is not included in the array.\r\n        var lastIndexOf = createIndexFinder(-1, findLastIndex);\r\n      \r\n        // Return the first value which passes a truth test.\r\n        function find(obj, predicate, context) {\r\n          var keyFinder = isArrayLike(obj) ? findIndex : findKey;\r\n          var key = keyFinder(obj, predicate, context);\r\n          if (key !== void 0 && key !== -1) return obj[key];\r\n        }\r\n      \r\n        // Convenience version of a common use case of `_.find`: getting the first\r\n        // object containing specific `key:value` pairs.\r\n        function findWhere(obj, attrs) {\r\n          return find(obj, matcher(attrs));\r\n        }\r\n      \r\n        // The cornerstone for collection functions, an `each`\r\n        // implementation, aka `forEach`.\r\n        // Handles raw objects in addition to array-likes. Treats all\r\n        // sparse array-likes as if they were dense.\r\n        function each(obj, iteratee, context) {\r\n          iteratee = optimizeCb(iteratee, context);\r\n          var i, length;\r\n          if (isArrayLike(obj)) {\r\n            for (i = 0, length = obj.length; i < length; i++) {\r\n              iteratee(obj[i], i, obj);\r\n            }\r\n          } else {\r\n            var _keys = keys(obj);\r\n            for (i = 0, length = _keys.length; i < length; i++) {\r\n              iteratee(obj[_keys[i]], _keys[i], obj);\r\n            }\r\n          }\r\n          return obj;\r\n        }\r\n      \r\n        // Return the results of applying the iteratee to each element.\r\n        function map(obj, iteratee, context) {\r\n          iteratee = cb(iteratee, context);\r\n          var _keys = !isArrayLike(obj) && keys(obj),\r\n              length = (_keys || obj).length,\r\n              results = Array(length);\r\n          for (var index = 0; index < length; index++) {\r\n            var currentKey = _keys ? _keys[index] : index;\r\n            results[index] = iteratee(obj[currentKey], currentKey, obj);\r\n          }\r\n          return results;\r\n        }\r\n      \r\n        // Internal helper to create a reducing function, iterating left or right.\r\n        function createReduce(dir) {\r\n          // Wrap code that reassigns argument variables in a separate function than\r\n          // the one that accesses `arguments.length` to avoid a perf hit. (#1991)\r\n          var reducer = function(obj, iteratee, memo, initial) {\r\n            var _keys = !isArrayLike(obj) && keys(obj),\r\n                length = (_keys || obj).length,\r\n                index = dir > 0 ? 0 : length - 1;\r\n            if (!initial) {\r\n              memo = obj[_keys ? _keys[index] : index];\r\n              index += dir;\r\n            }\r\n            for (; index >= 0 && index < length; index += dir) {\r\n              var currentKey = _keys ? _keys[index] : index;\r\n              memo = iteratee(memo, obj[currentKey], currentKey, obj);\r\n            }\r\n            return memo;\r\n          };\r\n      \r\n          return function(obj, iteratee, memo, context) {\r\n            var initial = arguments.length >= 3;\r\n            return reducer(obj, optimizeCb(iteratee, context, 4), memo, initial);\r\n          };\r\n        }\r\n      \r\n        // **Reduce** builds up a single result from a list of values, aka `inject`,\r\n        // or `foldl`.\r\n        var reduce = createReduce(1);\r\n      \r\n        // The right-associative version of reduce, also known as `foldr`.\r\n        var reduceRight = createReduce(-1);\r\n      \r\n        // Return all the elements that pass a truth test.\r\n        function filter(obj, predicate, context) {\r\n          var results = [];\r\n          predicate = cb(predicate, context);\r\n          each(obj, function(value, index, list) {\r\n            if (predicate(value, index, list)) results.push(value);\r\n          });\r\n          return results;\r\n        }\r\n      \r\n        // Return all the elements for which a truth test fails.\r\n        function reject(obj, predicate, context) {\r\n          return filter(obj, negate(cb(predicate)), context);\r\n        }\r\n      \r\n        // Determine whether all of the elements pass a truth test.\r\n        function every(obj, predicate, context) {\r\n          predicate = cb(predicate, context);\r\n          var _keys = !isArrayLike(obj) && keys(obj),\r\n              length = (_keys || obj).length;\r\n          for (var index = 0; index < length; index++) {\r\n            var currentKey = _keys ? _keys[index] : index;\r\n            if (!predicate(obj[currentKey], currentKey, obj)) return false;\r\n          }\r\n          return true;\r\n        }\r\n      \r\n        // Determine if at least one element in the object passes a truth test.\r\n        function some(obj, predicate, context) {\r\n          predicate = cb(predicate, context);\r\n          var _keys = !isArrayLike(obj) && keys(obj),\r\n              length = (_keys || obj).length;\r\n          for (var index = 0; index < length; index++) {\r\n            var currentKey = _keys ? _keys[index] : index;\r\n            if (predicate(obj[currentKey], currentKey, obj)) return true;\r\n          }\r\n          return false;\r\n        }\r\n      \r\n        // Determine if the array or object contains a given item (using `===`).\r\n        function contains(obj, item, fromIndex, guard) {\r\n          if (!isArrayLike(obj)) obj = values(obj);\r\n          if (typeof fromIndex != 'number' || guard) fromIndex = 0;\r\n          return indexOf(obj, item, fromIndex) >= 0;\r\n        }\r\n      \r\n        // Invoke a method (with arguments) on every item in a collection.\r\n        var invoke = restArguments(function(obj, path, args) {\r\n          var contextPath, func;\r\n          if (isFunction$1(path)) {\r\n            func = path;\r\n          } else {\r\n            path = toPath(path);\r\n            contextPath = path.slice(0, -1);\r\n            path = path[path.length - 1];\r\n          }\r\n          return map(obj, function(context) {\r\n            var method = func;\r\n            if (!method) {\r\n              if (contextPath && contextPath.length) {\r\n                context = deepGet(context, contextPath);\r\n              }\r\n              if (context == null) return void 0;\r\n              method = context[path];\r\n            }\r\n            return method == null ? method : method.apply(context, args);\r\n          });\r\n        });\r\n      \r\n        // Convenience version of a common use case of `_.map`: fetching a property.\r\n        function pluck(obj, key) {\r\n          return map(obj, property(key));\r\n        }\r\n      \r\n        // Convenience version of a common use case of `_.filter`: selecting only\r\n        // objects containing specific `key:value` pairs.\r\n        function where(obj, attrs) {\r\n          return filter(obj, matcher(attrs));\r\n        }\r\n      \r\n        // Return the maximum element (or element-based computation).\r\n        function max(obj, iteratee, context) {\r\n          var result = -Infinity, lastComputed = -Infinity,\r\n              value, computed;\r\n          if (iteratee == null || (typeof iteratee == 'number' && typeof obj[0] != 'object' && obj != null)) {\r\n            obj = isArrayLike(obj) ? obj : values(obj);\r\n            for (var i = 0, length = obj.length; i < length; i++) {\r\n              value = obj[i];\r\n              if (value != null && value > result) {\r\n                result = value;\r\n              }\r\n            }\r\n          } else {\r\n            iteratee = cb(iteratee, context);\r\n            each(obj, function(v, index, list) {\r\n              computed = iteratee(v, index, list);\r\n              if (computed > lastComputed || (computed === -Infinity && result === -Infinity)) {\r\n                result = v;\r\n                lastComputed = computed;\r\n              }\r\n            });\r\n          }\r\n          return result;\r\n        }\r\n      \r\n        // Return the minimum element (or element-based computation).\r\n        function min(obj, iteratee, context) {\r\n          var result = Infinity, lastComputed = Infinity,\r\n              value, computed;\r\n          if (iteratee == null || (typeof iteratee == 'number' && typeof obj[0] != 'object' && obj != null)) {\r\n            obj = isArrayLike(obj) ? obj : values(obj);\r\n            for (var i = 0, length = obj.length; i < length; i++) {\r\n              value = obj[i];\r\n              if (value != null && value < result) {\r\n                result = value;\r\n              }\r\n            }\r\n          } else {\r\n            iteratee = cb(iteratee, context);\r\n            each(obj, function(v, index, list) {\r\n              computed = iteratee(v, index, list);\r\n              if (computed < lastComputed || (computed === Infinity && result === Infinity)) {\r\n                result = v;\r\n                lastComputed = computed;\r\n              }\r\n            });\r\n          }\r\n          return result;\r\n        }\r\n      \r\n        // Safely create a real, live array from anything iterable.\r\n        var reStrSymbol = /[^\\ud800-\\udfff]|[\\ud800-\\udbff][\\udc00-\\udfff]|[\\ud800-\\udfff]/g;\r\n        function toArray(obj) {\r\n          if (!obj) return [];\r\n          if (isArray(obj)) return slice.call(obj);\r\n          if (isString(obj)) {\r\n            // Keep surrogate pair characters together.\r\n            return obj.match(reStrSymbol);\r\n          }\r\n          if (isArrayLike(obj)) return map(obj, identity);\r\n          return values(obj);\r\n        }\r\n      \r\n        // Sample **n** random values from a collection using the modern version of the\r\n        // [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher–Yates_shuffle).\r\n        // If **n** is not specified, returns a single random element.\r\n        // The internal `guard` argument allows it to work with `_.map`.\r\n        function sample(obj, n, guard) {\r\n          if (n == null || guard) {\r\n            if (!isArrayLike(obj)) obj = values(obj);\r\n            return obj[random(obj.length - 1)];\r\n          }\r\n          var sample = toArray(obj);\r\n          var length = getLength(sample);\r\n          n = Math.max(Math.min(n, length), 0);\r\n          var last = length - 1;\r\n          for (var index = 0; index < n; index++) {\r\n            var rand = random(index, last);\r\n            var temp = sample[index];\r\n            sample[index] = sample[rand];\r\n            sample[rand] = temp;\r\n          }\r\n          return sample.slice(0, n);\r\n        }\r\n      \r\n        // Shuffle a collection.\r\n        function shuffle(obj) {\r\n          return sample(obj, Infinity);\r\n        }\r\n      \r\n        // Sort the object's values by a criterion produced by an iteratee.\r\n        function sortBy(obj, iteratee, context) {\r\n          var index = 0;\r\n          iteratee = cb(iteratee, context);\r\n          return pluck(map(obj, function(value, key, list) {\r\n            return {\r\n              value: value,\r\n              index: index++,\r\n              criteria: iteratee(value, key, list)\r\n            };\r\n          }).sort(function(left, right) {\r\n            var a = left.criteria;\r\n            var b = right.criteria;\r\n            if (a !== b) {\r\n              if (a > b || a === void 0) return 1;\r\n              if (a < b || b === void 0) return -1;\r\n            }\r\n            return left.index - right.index;\r\n          }), 'value');\r\n        }\r\n      \r\n        // An internal function used for aggregate \"group by\" operations.\r\n        function group(behavior, partition) {\r\n          return function(obj, iteratee, context) {\r\n            var result = partition ? [[], []] : {};\r\n            iteratee = cb(iteratee, context);\r\n            each(obj, function(value, index) {\r\n              var key = iteratee(value, index, obj);\r\n              behavior(result, value, key);\r\n            });\r\n            return result;\r\n          };\r\n        }\r\n      \r\n        // Groups the object's values by a criterion. Pass either a string attribute\r\n        // to group by, or a function that returns the criterion.\r\n        var groupBy = group(function(result, value, key) {\r\n          if (has$1(result, key)) result[key].push(value); else result[key] = [value];\r\n        });\r\n      \r\n        // Indexes the object's values by a criterion, similar to `_.groupBy`, but for\r\n        // when you know that your index values will be unique.\r\n        var indexBy = group(function(result, value, key) {\r\n          result[key] = value;\r\n        });\r\n      \r\n        // Counts instances of an object that group by a certain criterion. Pass\r\n        // either a string attribute to count by, or a function that returns the\r\n        // criterion.\r\n        var countBy = group(function(result, value, key) {\r\n          if (has$1(result, key)) result[key]++; else result[key] = 1;\r\n        });\r\n      \r\n        // Split a collection into two arrays: one whose elements all pass the given\r\n        // truth test, and one whose elements all do not pass the truth test.\r\n        var partition = group(function(result, value, pass) {\r\n          result[pass ? 0 : 1].push(value);\r\n        }, true);\r\n      \r\n        // Return the number of elements in a collection.\r\n        function size(obj) {\r\n          if (obj == null) return 0;\r\n          return isArrayLike(obj) ? obj.length : keys(obj).length;\r\n        }\r\n      \r\n        // Internal `_.pick` helper function to determine whether `key` is an enumerable\r\n        // property name of `obj`.\r\n        function keyInObj(value, key, obj) {\r\n          return key in obj;\r\n        }\r\n      \r\n        // Return a copy of the object only containing the allowed properties.\r\n        var pick = restArguments(function(obj, keys) {\r\n          var result = {}, iteratee = keys[0];\r\n          if (obj == null) return result;\r\n          if (isFunction$1(iteratee)) {\r\n            if (keys.length > 1) iteratee = optimizeCb(iteratee, keys[1]);\r\n            keys = allKeys(obj);\r\n          } else {\r\n            iteratee = keyInObj;\r\n            keys = flatten$1(keys, false, false);\r\n            obj = Object(obj);\r\n          }\r\n          for (var i = 0, length = keys.length; i < length; i++) {\r\n            var key = keys[i];\r\n            var value = obj[key];\r\n            if (iteratee(value, key, obj)) result[key] = value;\r\n          }\r\n          return result;\r\n        });\r\n      \r\n        // Return a copy of the object without the disallowed properties.\r\n        var omit = restArguments(function(obj, keys) {\r\n          var iteratee = keys[0], context;\r\n          if (isFunction$1(iteratee)) {\r\n            iteratee = negate(iteratee);\r\n            if (keys.length > 1) context = keys[1];\r\n          } else {\r\n            keys = map(flatten$1(keys, false, false), String);\r\n            iteratee = function(value, key) {\r\n              return !contains(keys, key);\r\n            };\r\n          }\r\n          return pick(obj, iteratee, context);\r\n        });\r\n      \r\n        // Returns everything but the last entry of the array. Especially useful on\r\n        // the arguments object. Passing **n** will return all the values in\r\n        // the array, excluding the last N.\r\n        function initial(array, n, guard) {\r\n          return slice.call(array, 0, Math.max(0, array.length - (n == null || guard ? 1 : n)));\r\n        }\r\n      \r\n        // Get the first element of an array. Passing **n** will return the first N\r\n        // values in the array. The **guard** check allows it to work with `_.map`.\r\n        function first(array, n, guard) {\r\n          if (array == null || array.length < 1) return n == null || guard ? void 0 : [];\r\n          if (n == null || guard) return array[0];\r\n          return initial(array, array.length - n);\r\n        }\r\n      \r\n        // Returns everything but the first entry of the `array`. Especially useful on\r\n        // the `arguments` object. Passing an **n** will return the rest N values in the\r\n        // `array`.\r\n        function rest(array, n, guard) {\r\n          return slice.call(array, n == null || guard ? 1 : n);\r\n        }\r\n      \r\n        // Get the last element of an array. Passing **n** will return the last N\r\n        // values in the array.\r\n        function last(array, n, guard) {\r\n          if (array == null || array.length < 1) return n == null || guard ? void 0 : [];\r\n          if (n == null || guard) return array[array.length - 1];\r\n          return rest(array, Math.max(0, array.length - n));\r\n        }\r\n      \r\n        // Trim out all falsy values from an array.\r\n        function compact(array) {\r\n          return filter(array, Boolean);\r\n        }\r\n      \r\n        // Flatten out an array, either recursively (by default), or up to `depth`.\r\n        // Passing `true` or `false` as `depth` means `1` or `Infinity`, respectively.\r\n        function flatten(array, depth) {\r\n          return flatten$1(array, depth, false);\r\n        }\r\n      \r\n        // Take the difference between one array and a number of other arrays.\r\n        // Only the elements present in just the first array will remain.\r\n        var difference = restArguments(function(array, rest) {\r\n          rest = flatten$1(rest, true, true);\r\n          return filter(array, function(value){\r\n            return !contains(rest, value);\r\n          });\r\n        });\r\n      \r\n        // Return a version of the array that does not contain the specified value(s).\r\n        var without = restArguments(function(array, otherArrays) {\r\n          return difference(array, otherArrays);\r\n        });\r\n      \r\n        // Produce a duplicate-free version of the array. If the array has already\r\n        // been sorted, you have the option of using a faster algorithm.\r\n        // The faster algorithm will not work with an iteratee if the iteratee\r\n        // is not a one-to-one function, so providing an iteratee will disable\r\n        // the faster algorithm.\r\n        function uniq(array, isSorted, iteratee, context) {\r\n          if (!isBoolean(isSorted)) {\r\n            context = iteratee;\r\n            iteratee = isSorted;\r\n            isSorted = false;\r\n          }\r\n          if (iteratee != null) iteratee = cb(iteratee, context);\r\n          var result = [];\r\n          var seen = [];\r\n          for (var i = 0, length = getLength(array); i < length; i++) {\r\n            var value = array[i],\r\n                computed = iteratee ? iteratee(value, i, array) : value;\r\n            if (isSorted && !iteratee) {\r\n              if (!i || seen !== computed) result.push(value);\r\n              seen = computed;\r\n            } else if (iteratee) {\r\n              if (!contains(seen, computed)) {\r\n                seen.push(computed);\r\n                result.push(value);\r\n              }\r\n            } else if (!contains(result, value)) {\r\n              result.push(value);\r\n            }\r\n          }\r\n          return result;\r\n        }\r\n      \r\n        // Produce an array that contains the union: each distinct element from all of\r\n        // the passed-in arrays.\r\n        var union = restArguments(function(arrays) {\r\n          return uniq(flatten$1(arrays, true, true));\r\n        });\r\n      \r\n        // Produce an array that contains every item shared between all the\r\n        // passed-in arrays.\r\n        function intersection(array) {\r\n          var result = [];\r\n          var argsLength = arguments.length;\r\n          for (var i = 0, length = getLength(array); i < length; i++) {\r\n            var item = array[i];\r\n            if (contains(result, item)) continue;\r\n            var j;\r\n            for (j = 1; j < argsLength; j++) {\r\n              if (!contains(arguments[j], item)) break;\r\n            }\r\n            if (j === argsLength) result.push(item);\r\n          }\r\n          return result;\r\n        }\r\n      \r\n        // Complement of zip. Unzip accepts an array of arrays and groups\r\n        // each array's elements on shared indices.\r\n        function unzip(array) {\r\n          var length = (array && max(array, getLength).length) || 0;\r\n          var result = Array(length);\r\n      \r\n          for (var index = 0; index < length; index++) {\r\n            result[index] = pluck(array, index);\r\n          }\r\n          return result;\r\n        }\r\n      \r\n        // Zip together multiple lists into a single array -- elements that share\r\n        // an index go together.\r\n        var zip = restArguments(unzip);\r\n      \r\n        // Converts lists into objects. Pass either a single array of `[key, value]`\r\n        // pairs, or two parallel arrays of the same length -- one of keys, and one of\r\n        // the corresponding values. Passing by pairs is the reverse of `_.pairs`.\r\n        function object(list, values) {\r\n          var result = {};\r\n          for (var i = 0, length = getLength(list); i < length; i++) {\r\n            if (values) {\r\n              result[list[i]] = values[i];\r\n            } else {\r\n              result[list[i][0]] = list[i][1];\r\n            }\r\n          }\r\n          return result;\r\n        }\r\n      \r\n        // Generate an integer Array containing an arithmetic progression. A port of\r\n        // the native Python `range()` function. See\r\n        // [the Python documentation](https://docs.python.org/library/functions.html#range).\r\n        function range(start, stop, step) {\r\n          if (stop == null) {\r\n            stop = start || 0;\r\n            start = 0;\r\n          }\r\n          if (!step) {\r\n            step = stop < start ? -1 : 1;\r\n          }\r\n      \r\n          var length = Math.max(Math.ceil((stop - start) / step), 0);\r\n          var range = Array(length);\r\n      \r\n          for (var idx = 0; idx < length; idx++, start += step) {\r\n            range[idx] = start;\r\n          }\r\n      \r\n          return range;\r\n        }\r\n      \r\n        // Chunk a single array into multiple arrays, each containing `count` or fewer\r\n        // items.\r\n        function chunk(array, count) {\r\n          if (count == null || count < 1) return [];\r\n          var result = [];\r\n          var i = 0, length = array.length;\r\n          while (i < length) {\r\n            result.push(slice.call(array, i, i += count));\r\n          }\r\n          return result;\r\n        }\r\n      \r\n        // Helper function to continue chaining intermediate results.\r\n        function chainResult(instance, obj) {\r\n          return instance._chain ? _$1(obj).chain() : obj;\r\n        }\r\n      \r\n        // Add your own custom functions to the Underscore object.\r\n        function mixin(obj) {\r\n          each(functions(obj), function(name) {\r\n            var func = _$1[name] = obj[name];\r\n            _$1.prototype[name] = function() {\r\n              var args = [this._wrapped];\r\n              push.apply(args, arguments);\r\n              return chainResult(this, func.apply(_$1, args));\r\n            };\r\n          });\r\n          return _$1;\r\n        }\r\n      \r\n        // Add all mutator `Array` functions to the wrapper.\r\n        each(['pop', 'push', 'reverse', 'shift', 'sort', 'splice', 'unshift'], function(name) {\r\n          var method = ArrayProto[name];\r\n          _$1.prototype[name] = function() {\r\n            var obj = this._wrapped;\r\n            if (obj != null) {\r\n              method.apply(obj, arguments);\r\n              if ((name === 'shift' || name === 'splice') && obj.length === 0) {\r\n                delete obj[0];\r\n              }\r\n            }\r\n            return chainResult(this, obj);\r\n          };\r\n        });\r\n      \r\n        // Add all accessor `Array` functions to the wrapper.\r\n        each(['concat', 'join', 'slice'], function(name) {\r\n          var method = ArrayProto[name];\r\n          _$1.prototype[name] = function() {\r\n            var obj = this._wrapped;\r\n            if (obj != null) obj = method.apply(obj, arguments);\r\n            return chainResult(this, obj);\r\n          };\r\n        });\r\n      \r\n        // Named Exports\r\n      \r\n        var allExports = {\r\n          __proto__: null,\r\n          VERSION: VERSION,\r\n          restArguments: restArguments,\r\n          isObject: isObject,\r\n          isNull: isNull,\r\n          isUndefined: isUndefined,\r\n          isBoolean: isBoolean,\r\n          isElement: isElement,\r\n          isString: isString,\r\n          isNumber: isNumber,\r\n          isDate: isDate,\r\n          isRegExp: isRegExp,\r\n          isError: isError,\r\n          isSymbol: isSymbol,\r\n          isArrayBuffer: isArrayBuffer,\r\n          isDataView: isDataView$1,\r\n          isArray: isArray,\r\n          isFunction: isFunction$1,\r\n          isArguments: isArguments$1,\r\n          isFinite: isFinite$1,\r\n          isNaN: isNaN$1,\r\n          isTypedArray: isTypedArray$1,\r\n          isEmpty: isEmpty,\r\n          isMatch: isMatch,\r\n          isEqual: isEqual,\r\n          isMap: isMap,\r\n          isWeakMap: isWeakMap,\r\n          isSet: isSet,\r\n          isWeakSet: isWeakSet,\r\n          keys: keys,\r\n          allKeys: allKeys,\r\n          values: values,\r\n          pairs: pairs,\r\n          invert: invert,\r\n          functions: functions,\r\n          methods: functions,\r\n          extend: extend,\r\n          extendOwn: extendOwn,\r\n          assign: extendOwn,\r\n          defaults: defaults,\r\n          create: create,\r\n          clone: clone,\r\n          tap: tap,\r\n          get: get,\r\n          has: has,\r\n          mapObject: mapObject,\r\n          identity: identity,\r\n          constant: constant,\r\n          noop: noop,\r\n          toPath: toPath$1,\r\n          property: property,\r\n          propertyOf: propertyOf,\r\n          matcher: matcher,\r\n          matches: matcher,\r\n          times: times,\r\n          random: random,\r\n          now: now,\r\n          escape: _escape,\r\n          unescape: _unescape,\r\n          templateSettings: templateSettings,\r\n          template: template,\r\n          result: result,\r\n          uniqueId: uniqueId,\r\n          chain: chain,\r\n          iteratee: iteratee,\r\n          partial: partial,\r\n          bind: bind,\r\n          bindAll: bindAll,\r\n          memoize: memoize,\r\n          delay: delay,\r\n          defer: defer,\r\n          throttle: throttle,\r\n          debounce: debounce,\r\n          wrap: wrap,\r\n          negate: negate,\r\n          compose: compose,\r\n          after: after,\r\n          before: before,\r\n          once: once,\r\n          findKey: findKey,\r\n          findIndex: findIndex,\r\n          findLastIndex: findLastIndex,\r\n          sortedIndex: sortedIndex,\r\n          indexOf: indexOf,\r\n          lastIndexOf: lastIndexOf,\r\n          find: find,\r\n          detect: find,\r\n          findWhere: findWhere,\r\n          each: each,\r\n          forEach: each,\r\n          map: map,\r\n          collect: map,\r\n          reduce: reduce,\r\n          foldl: reduce,\r\n          inject: reduce,\r\n          reduceRight: reduceRight,\r\n          foldr: reduceRight,\r\n          filter: filter,\r\n          select: filter,\r\n          reject: reject,\r\n          every: every,\r\n          all: every,\r\n          some: some,\r\n          any: some,\r\n          contains: contains,\r\n          includes: contains,\r\n          include: contains,\r\n          invoke: invoke,\r\n          pluck: pluck,\r\n          where: where,\r\n          max: max,\r\n          min: min,\r\n          shuffle: shuffle,\r\n          sample: sample,\r\n          sortBy: sortBy,\r\n          groupBy: groupBy,\r\n          indexBy: indexBy,\r\n          countBy: countBy,\r\n          partition: partition,\r\n          toArray: toArray,\r\n          size: size,\r\n          pick: pick,\r\n          omit: omit,\r\n          first: first,\r\n          head: first,\r\n          take: first,\r\n          initial: initial,\r\n          last: last,\r\n          rest: rest,\r\n          tail: rest,\r\n          drop: rest,\r\n          compact: compact,\r\n          flatten: flatten,\r\n          without: without,\r\n          uniq: uniq,\r\n          unique: uniq,\r\n          union: union,\r\n          intersection: intersection,\r\n          difference: difference,\r\n          unzip: unzip,\r\n          transpose: unzip,\r\n          zip: zip,\r\n          object: object,\r\n          range: range,\r\n          chunk: chunk,\r\n          mixin: mixin,\r\n          'default': _$1\r\n        };\r\n      \r\n        // Default Export\r\n      \r\n        // Add all of the Underscore functions to the wrapper object.\r\n        var _ = mixin(allExports);\r\n        // Legacy Node.js API.\r\n        _._ = _;\r\n      \r\n        return _;\r\n      \r\n      })));\r\n      //# sourceMappingURL=underscore-umd.js.map\r\n      \r\n//     Backbone.js 1.4.1\r\n\r\n//     (c) 2010-2022 Jeremy Ashkenas and DocumentCloud\r\n//     Backbone may be freely distributed under the MIT license.\r\n//     For all details and documentation:\r\n//     http://backbonejs.org\r\n\r\n(function(factory) {\r\n\r\n    // Establish the root object, `window` (`self`) in the browser, or `global` on the server.\r\n    // We use `self` instead of `window` for `WebWorker` support.\r\n    var root = typeof self == 'object' && self.self === self && self ||\r\n              typeof global == 'object' && global.global === global && global;\r\n  \r\n    // Set up Backbone appropriately for the environment. Start with AMD.\r\n    if (typeof define === 'function' && define.amd) {\r\n      define(['underscore', 'jquery', 'exports'], function(_, $, exports) {\r\n        // Export global even in AMD case in case this script is loaded with\r\n        // others that may still expect a global Backbone.\r\n        root.Backbone = factory(root, exports, _, $);\r\n      });\r\n  \r\n    // Next for Node.js or CommonJS. jQuery may not be needed as a module.\r\n    } else if (typeof exports !== 'undefined') {\r\n      var _ = require('underscore'), $;\r\n      try { $ = require('jquery'); } catch (e) {}\r\n      factory(root, exports, _, $);\r\n  \r\n    // Finally, as a browser global.\r\n    } else {\r\n      root.Backbone = factory(root, {}, root._, root.jQuery || root.Zepto || root.ender || root.$);\r\n    }\r\n  \r\n  })(function(root, Backbone, _, $) {\r\n  \r\n    // Initial Setup\r\n    // -------------\r\n  \r\n    // Save the previous value of the `Backbone` variable, so that it can be\r\n    // restored later on, if `noConflict` is used.\r\n    var previousBackbone = root.Backbone;\r\n  \r\n    // Create a local reference to a common array method we'll want to use later.\r\n    var slice = Array.prototype.slice;\r\n  \r\n    // Current version of the library. Keep in sync with `package.json`.\r\n    Backbone.VERSION = '1.4.1';\r\n  \r\n    // For Backbone's purposes, jQuery, Zepto, Ender, or My Library (kidding) owns\r\n    // the `$` variable.\r\n    Backbone.$ = $;\r\n  \r\n    // Runs Backbone.js in *noConflict* mode, returning the `Backbone` variable\r\n    // to its previous owner. Returns a reference to this Backbone object.\r\n    Backbone.noConflict = function() {\r\n      root.Backbone = previousBackbone;\r\n      return this;\r\n    };\r\n  \r\n    // Turn on `emulateHTTP` to support legacy HTTP servers. Setting this option\r\n    // will fake `\"PATCH\"`, `\"PUT\"` and `\"DELETE\"` requests via the `_method` parameter and\r\n    // set a `X-Http-Method-Override` header.\r\n    Backbone.emulateHTTP = false;\r\n  \r\n    // Turn on `emulateJSON` to support legacy servers that can't deal with direct\r\n    // `application/json` requests ... this will encode the body as\r\n    // `application/x-www-form-urlencoded` instead and will send the model in a\r\n    // form param named `model`.\r\n    Backbone.emulateJSON = false;\r\n  \r\n    // Backbone.Events\r\n    // ---------------\r\n  \r\n    // A module that can be mixed in to *any object* in order to provide it with\r\n    // a custom event channel. You may bind a callback to an event with `on` or\r\n    // remove with `off`; `trigger`-ing an event fires all callbacks in\r\n    // succession.\r\n    //\r\n    //     var object = {};\r\n    //     _.extend(object, Backbone.Events);\r\n    //     object.on('expand', function(){ alert('expanded'); });\r\n    //     object.trigger('expand');\r\n    //\r\n    var Events = Backbone.Events = {};\r\n  \r\n    // Regular expression used to split event strings.\r\n    var eventSplitter = /\\s+/;\r\n  \r\n    // A private global variable to share between listeners and listenees.\r\n    var _listening;\r\n  \r\n    // Iterates over the standard `event, callback` (as well as the fancy multiple\r\n    // space-separated events `\"change blur\", callback` and jQuery-style event\r\n    // maps `{event: callback}`).\r\n    var eventsApi = function(iteratee, events, name, callback, opts) {\r\n      var i = 0, names;\r\n      if (name && typeof name === 'object') {\r\n        // Handle event maps.\r\n        if (callback !== void 0 && 'context' in opts && opts.context === void 0) opts.context = callback;\r\n        for (names = _.keys(name); i < names.length ; i++) {\r\n          events = eventsApi(iteratee, events, names[i], name[names[i]], opts);\r\n        }\r\n      } else if (name && eventSplitter.test(name)) {\r\n        // Handle space-separated event names by delegating them individually.\r\n        for (names = name.split(eventSplitter); i < names.length; i++) {\r\n          events = iteratee(events, names[i], callback, opts);\r\n        }\r\n      } else {\r\n        // Finally, standard events.\r\n        events = iteratee(events, name, callback, opts);\r\n      }\r\n      return events;\r\n    };\r\n  \r\n    // Bind an event to a `callback` function. Passing `\"all\"` will bind\r\n    // the callback to all events fired.\r\n    Events.on = function(name, callback, context) {\r\n      this._events = eventsApi(onApi, this._events || {}, name, callback, {\r\n        context: context,\r\n        ctx: this,\r\n        listening: _listening\r\n      });\r\n  \r\n      if (_listening) {\r\n        var listeners = this._listeners || (this._listeners = {});\r\n        listeners[_listening.id] = _listening;\r\n        // Allow the listening to use a counter, instead of tracking\r\n        // callbacks for library interop\r\n        _listening.interop = false;\r\n      }\r\n  \r\n      return this;\r\n    };\r\n  \r\n    // Inversion-of-control versions of `on`. Tell *this* object to listen to\r\n    // an event in another object... keeping track of what it's listening to\r\n    // for easier unbinding later.\r\n    Events.listenTo = function(obj, name, callback) {\r\n      if (!obj) return this;\r\n      var id = obj._listenId || (obj._listenId = _.uniqueId('l'));\r\n      var listeningTo = this._listeningTo || (this._listeningTo = {});\r\n      var listening = _listening = listeningTo[id];\r\n  \r\n      // This object is not listening to any other events on `obj` yet.\r\n      // Setup the necessary references to track the listening callbacks.\r\n      if (!listening) {\r\n        this._listenId || (this._listenId = _.uniqueId('l'));\r\n        listening = _listening = listeningTo[id] = new Listening(this, obj);\r\n      }\r\n  \r\n      // Bind callbacks on obj.\r\n      var error = tryCatchOn(obj, name, callback, this);\r\n      _listening = void 0;\r\n  \r\n      if (error) throw error;\r\n      // If the target obj is not Backbone.Events, track events manually.\r\n      if (listening.interop) listening.on(name, callback);\r\n  \r\n      return this;\r\n    };\r\n  \r\n    // The reducing API that adds a callback to the `events` object.\r\n    var onApi = function(events, name, callback, options) {\r\n      if (callback) {\r\n        var handlers = events[name] || (events[name] = []);\r\n        var context = options.context, ctx = options.ctx, listening = options.listening;\r\n        if (listening) listening.count++;\r\n  \r\n        handlers.push({callback: callback, context: context, ctx: context || ctx, listening: listening});\r\n      }\r\n      return events;\r\n    };\r\n  \r\n    // An try-catch guarded #on function, to prevent poisoning the global\r\n    // `_listening` variable.\r\n    var tryCatchOn = function(obj, name, callback, context) {\r\n      try {\r\n        obj.on(name, callback, context);\r\n      } catch (e) {\r\n        return e;\r\n      }\r\n    };\r\n  \r\n    // Remove one or many callbacks. If `context` is null, removes all\r\n    // callbacks with that function. If `callback` is null, removes all\r\n    // callbacks for the event. If `name` is null, removes all bound\r\n    // callbacks for all events.\r\n    Events.off = function(name, callback, context) {\r\n      if (!this._events) return this;\r\n      this._events = eventsApi(offApi, this._events, name, callback, {\r\n        context: context,\r\n        listeners: this._listeners\r\n      });\r\n  \r\n      return this;\r\n    };\r\n  \r\n    // Tell this object to stop listening to either specific events ... or\r\n    // to every object it's currently listening to.\r\n    Events.stopListening = function(obj, name, callback) {\r\n      var listeningTo = this._listeningTo;\r\n      if (!listeningTo) return this;\r\n  \r\n      var ids = obj ? [obj._listenId] : _.keys(listeningTo);\r\n      for (var i = 0; i < ids.length; i++) {\r\n        var listening = listeningTo[ids[i]];\r\n  \r\n        // If listening doesn't exist, this object is not currently\r\n        // listening to obj. Break out early.\r\n        if (!listening) break;\r\n  \r\n        listening.obj.off(name, callback, this);\r\n        if (listening.interop) listening.off(name, callback);\r\n      }\r\n      if (_.isEmpty(listeningTo)) this._listeningTo = void 0;\r\n  \r\n      return this;\r\n    };\r\n  \r\n    // The reducing API that removes a callback from the `events` object.\r\n    var offApi = function(events, name, callback, options) {\r\n      if (!events) return;\r\n  \r\n      var context = options.context, listeners = options.listeners;\r\n      var i = 0, names;\r\n  \r\n      // Delete all event listeners and \"drop\" events.\r\n      if (!name && !context && !callback) {\r\n        for (names = _.keys(listeners); i < names.length; i++) {\r\n          listeners[names[i]].cleanup();\r\n        }\r\n        return;\r\n      }\r\n  \r\n      names = name ? [name] : _.keys(events);\r\n      for (; i < names.length; i++) {\r\n        name = names[i];\r\n        var handlers = events[name];\r\n  \r\n        // Bail out if there are no events stored.\r\n        if (!handlers) break;\r\n  \r\n        // Find any remaining events.\r\n        var remaining = [];\r\n        for (var j = 0; j < handlers.length; j++) {\r\n          var handler = handlers[j];\r\n          if (\r\n            callback && callback !== handler.callback &&\r\n              callback !== handler.callback._callback ||\r\n                context && context !== handler.context\r\n          ) {\r\n            remaining.push(handler);\r\n          } else {\r\n            var listening = handler.listening;\r\n            if (listening) listening.off(name, callback);\r\n          }\r\n        }\r\n  \r\n        // Replace events if there are any remaining.  Otherwise, clean up.\r\n        if (remaining.length) {\r\n          events[name] = remaining;\r\n        } else {\r\n          delete events[name];\r\n        }\r\n      }\r\n  \r\n      return events;\r\n    };\r\n  \r\n    // Bind an event to only be triggered a single time. After the first time\r\n    // the callback is invoked, its listener will be removed. If multiple events\r\n    // are passed in using the space-separated syntax, the handler will fire\r\n    // once for each event, not once for a combination of all events.\r\n    Events.once = function(name, callback, context) {\r\n      // Map the event into a `{event: once}` object.\r\n      var events = eventsApi(onceMap, {}, name, callback, this.off.bind(this));\r\n      if (typeof name === 'string' && context == null) callback = void 0;\r\n      return this.on(events, callback, context);\r\n    };\r\n  \r\n    // Inversion-of-control versions of `once`.\r\n    Events.listenToOnce = function(obj, name, callback) {\r\n      // Map the event into a `{event: once}` object.\r\n      var events = eventsApi(onceMap, {}, name, callback, this.stopListening.bind(this, obj));\r\n      return this.listenTo(obj, events);\r\n    };\r\n  \r\n    // Reduces the event callbacks into a map of `{event: onceWrapper}`.\r\n    // `offer` unbinds the `onceWrapper` after it has been called.\r\n    var onceMap = function(map, name, callback, offer) {\r\n      if (callback) {\r\n        var once = map[name] = _.once(function() {\r\n          offer(name, once);\r\n          callback.apply(this, arguments);\r\n        });\r\n        once._callback = callback;\r\n      }\r\n      return map;\r\n    };\r\n  \r\n    // Trigger one or many events, firing all bound callbacks. Callbacks are\r\n    // passed the same arguments as `trigger` is, apart from the event name\r\n    // (unless you're listening on `\"all\"`, which will cause your callback to\r\n    // receive the true name of the event as the first argument).\r\n    Events.trigger = function(name) {\r\n      if (!this._events) return this;\r\n  \r\n      var length = Math.max(0, arguments.length - 1);\r\n      var args = Array(length);\r\n      for (var i = 0; i < length; i++) args[i] = arguments[i + 1];\r\n  \r\n      eventsApi(triggerApi, this._events, name, void 0, args);\r\n      return this;\r\n    };\r\n  \r\n    // Handles triggering the appropriate event callbacks.\r\n    var triggerApi = function(objEvents, name, callback, args) {\r\n      if (objEvents) {\r\n        var events = objEvents[name];\r\n        var allEvents = objEvents.all;\r\n        if (events && allEvents) allEvents = allEvents.slice();\r\n        if (events) triggerEvents(events, args);\r\n        if (allEvents) triggerEvents(allEvents, [name].concat(args));\r\n      }\r\n      return objEvents;\r\n    };\r\n  \r\n    // A difficult-to-believe, but optimized internal dispatch function for\r\n    // triggering events. Tries to keep the usual cases speedy (most internal\r\n    // Backbone events have 3 arguments).\r\n    var triggerEvents = function(events, args) {\r\n      var ev, i = -1, l = events.length, a1 = args[0], a2 = args[1], a3 = args[2];\r\n      switch (args.length) {\r\n        case 0: while (++i < l) (ev = events[i]).callback.call(ev.ctx); return;\r\n        case 1: while (++i < l) (ev = events[i]).callback.call(ev.ctx, a1); return;\r\n        case 2: while (++i < l) (ev = events[i]).callback.call(ev.ctx, a1, a2); return;\r\n        case 3: while (++i < l) (ev = events[i]).callback.call(ev.ctx, a1, a2, a3); return;\r\n        default: while (++i < l) (ev = events[i]).callback.apply(ev.ctx, args); return;\r\n      }\r\n    };\r\n  \r\n    // A listening class that tracks and cleans up memory bindings\r\n    // when all callbacks have been offed.\r\n    var Listening = function(listener, obj) {\r\n      this.id = listener._listenId;\r\n      this.listener = listener;\r\n      this.obj = obj;\r\n      this.interop = true;\r\n      this.count = 0;\r\n      this._events = void 0;\r\n    };\r\n  \r\n    Listening.prototype.on = Events.on;\r\n  \r\n    // Offs a callback (or several).\r\n    // Uses an optimized counter if the listenee uses Backbone.Events.\r\n    // Otherwise, falls back to manual tracking to support events\r\n    // library interop.\r\n    Listening.prototype.off = function(name, callback) {\r\n      var cleanup;\r\n      if (this.interop) {\r\n        this._events = eventsApi(offApi, this._events, name, callback, {\r\n          context: void 0,\r\n          listeners: void 0\r\n        });\r\n        cleanup = !this._events;\r\n      } else {\r\n        this.count--;\r\n        cleanup = this.count === 0;\r\n      }\r\n      if (cleanup) this.cleanup();\r\n    };\r\n  \r\n    // Cleans up memory bindings between the listener and the listenee.\r\n    Listening.prototype.cleanup = function() {\r\n      delete this.listener._listeningTo[this.obj._listenId];\r\n      if (!this.interop) delete this.obj._listeners[this.id];\r\n    };\r\n  \r\n    // Aliases for backwards compatibility.\r\n    Events.bind   = Events.on;\r\n    Events.unbind = Events.off;\r\n  \r\n    // Allow the `Backbone` object to serve as a global event bus, for folks who\r\n    // want global \"pubsub\" in a convenient place.\r\n    _.extend(Backbone, Events);\r\n  \r\n    // Backbone.Model\r\n    // --------------\r\n  \r\n    // Backbone **Models** are the basic data object in the framework --\r\n    // frequently representing a row in a table in a database on your server.\r\n    // A discrete chunk of data and a bunch of useful, related methods for\r\n    // performing computations and transformations on that data.\r\n  \r\n    // Create a new model with the specified attributes. A client id (`cid`)\r\n    // is automatically generated and assigned for you.\r\n    var Model = Backbone.Model = function(attributes, options) {\r\n      var attrs = attributes || {};\r\n      options || (options = {});\r\n      this.preinitialize.apply(this, arguments);\r\n      this.cid = _.uniqueId(this.cidPrefix);\r\n      this.attributes = {};\r\n      if (options.collection) this.collection = options.collection;\r\n      if (options.parse) attrs = this.parse(attrs, options) || {};\r\n      var defaults = _.result(this, 'defaults');\r\n      attrs = _.defaults(_.extend({}, defaults, attrs), defaults);\r\n      this.set(attrs, options);\r\n      this.changed = {};\r\n      this.initialize.apply(this, arguments);\r\n    };\r\n  \r\n    // Attach all inheritable methods to the Model prototype.\r\n    _.extend(Model.prototype, Events, {\r\n  \r\n      // A hash of attributes whose current and previous value differ.\r\n      changed: null,\r\n  \r\n      // The value returned during the last failed validation.\r\n      validationError: null,\r\n  \r\n      // The default name for the JSON `id` attribute is `\"id\"`. MongoDB and\r\n      // CouchDB users may want to set this to `\"_id\"`.\r\n      idAttribute: 'id',\r\n  \r\n      // The prefix is used to create the client id which is used to identify models locally.\r\n      // You may want to override this if you're experiencing name clashes with model ids.\r\n      cidPrefix: 'c',\r\n  \r\n      // preinitialize is an empty function by default. You can override it with a function\r\n      // or object.  preinitialize will run before any instantiation logic is run in the Model.\r\n      preinitialize: function(){},\r\n  \r\n      // Initialize is an empty function by default. Override it with your own\r\n      // initialization logic.\r\n      initialize: function(){},\r\n  \r\n      // Return a copy of the model's `attributes` object.\r\n      toJSON: function(options) {\r\n        return _.clone(this.attributes);\r\n      },\r\n  \r\n      // Proxy `Backbone.sync` by default -- but override this if you need\r\n      // custom syncing semantics for *this* particular model.\r\n      sync: function() {\r\n        return Backbone.sync.apply(this, arguments);\r\n      },\r\n  \r\n      // Get the value of an attribute.\r\n      get: function(attr) {\r\n        return this.attributes[attr];\r\n      },\r\n  \r\n      // Get the HTML-escaped value of an attribute.\r\n      escape: function(attr) {\r\n        return _.escape(this.get(attr));\r\n      },\r\n  \r\n      // Returns `true` if the attribute contains a value that is not null\r\n      // or undefined.\r\n      has: function(attr) {\r\n        return this.get(attr) != null;\r\n      },\r\n  \r\n      // Special-cased proxy to underscore's `_.matches` method.\r\n      matches: function(attrs) {\r\n        return !!_.iteratee(attrs, this)(this.attributes);\r\n      },\r\n  \r\n      // Set a hash of model attributes on the object, firing `\"change\"`. This is\r\n      // the core primitive operation of a model, updating the data and notifying\r\n      // anyone who needs to know about the change in state. The heart of the beast.\r\n      set: function(key, val, options) {\r\n        if (key == null) return this;\r\n  \r\n        // Handle both `\"key\", value` and `{key: value}` -style arguments.\r\n        var attrs;\r\n        if (typeof key === 'object') {\r\n          attrs = key;\r\n          options = val;\r\n        } else {\r\n          (attrs = {})[key] = val;\r\n        }\r\n  \r\n        options || (options = {});\r\n  \r\n        // Run validation.\r\n        if (!this._validate(attrs, options)) return false;\r\n  \r\n        // Extract attributes and options.\r\n        var unset      = options.unset;\r\n        var silent     = options.silent;\r\n        var changes    = [];\r\n        var changing   = this._changing;\r\n        this._changing = true;\r\n  \r\n        if (!changing) {\r\n          this._previousAttributes = _.clone(this.attributes);\r\n          this.changed = {};\r\n        }\r\n  \r\n        var current = this.attributes;\r\n        var changed = this.changed;\r\n        var prev    = this._previousAttributes;\r\n  \r\n        // For each `set` attribute, update or delete the current value.\r\n        for (var attr in attrs) {\r\n          val = attrs[attr];\r\n          if (!_.isEqual(current[attr], val)) changes.push(attr);\r\n          if (!_.isEqual(prev[attr], val)) {\r\n            changed[attr] = val;\r\n          } else {\r\n            delete changed[attr];\r\n          }\r\n          unset ? delete current[attr] : current[attr] = val;\r\n        }\r\n  \r\n        // Update the `id`.\r\n        if (this.idAttribute in attrs) {\r\n          var prevId = this.id;\r\n          this.id = this.get(this.idAttribute);\r\n          this.trigger('changeId', this, prevId, options);\r\n        }\r\n  \r\n        // Trigger all relevant attribute changes.\r\n        if (!silent) {\r\n          if (changes.length) this._pending = options;\r\n          for (var i = 0; i < changes.length; i++) {\r\n            this.trigger('change:' + changes[i], this, current[changes[i]], options);\r\n          }\r\n        }\r\n  \r\n        // You might be wondering why there's a `while` loop here. Changes can\r\n        // be recursively nested within `\"change\"` events.\r\n        if (changing) return this;\r\n        if (!silent) {\r\n          while (this._pending) {\r\n            options = this._pending;\r\n            this._pending = false;\r\n            this.trigger('change', this, options);\r\n          }\r\n        }\r\n        this._pending = false;\r\n        this._changing = false;\r\n        return this;\r\n      },\r\n  \r\n      // Remove an attribute from the model, firing `\"change\"`. `unset` is a noop\r\n      // if the attribute doesn't exist.\r\n      unset: function(attr, options) {\r\n        return this.set(attr, void 0, _.extend({}, options, {unset: true}));\r\n      },\r\n  \r\n      // Clear all attributes on the model, firing `\"change\"`.\r\n      clear: function(options) {\r\n        var attrs = {};\r\n        for (var key in this.attributes) attrs[key] = void 0;\r\n        return this.set(attrs, _.extend({}, options, {unset: true}));\r\n      },\r\n  \r\n      // Determine if the model has changed since the last `\"change\"` event.\r\n      // If you specify an attribute name, determine if that attribute has changed.\r\n      hasChanged: function(attr) {\r\n        if (attr == null) return !_.isEmpty(this.changed);\r\n        return _.has(this.changed, attr);\r\n      },\r\n  \r\n      // Return an object containing all the attributes that have changed, or\r\n      // false if there are no changed attributes. Useful for determining what\r\n      // parts of a view need to be updated and/or what attributes need to be\r\n      // persisted to the server. Unset attributes will be set to undefined.\r\n      // You can also pass an attributes object to diff against the model,\r\n      // determining if there *would be* a change.\r\n      changedAttributes: function(diff) {\r\n        if (!diff) return this.hasChanged() ? _.clone(this.changed) : false;\r\n        var old = this._changing ? this._previousAttributes : this.attributes;\r\n        var changed = {};\r\n        var hasChanged;\r\n        for (var attr in diff) {\r\n          var val = diff[attr];\r\n          if (_.isEqual(old[attr], val)) continue;\r\n          changed[attr] = val;\r\n          hasChanged = true;\r\n        }\r\n        return hasChanged ? changed : false;\r\n      },\r\n  \r\n      // Get the previous value of an attribute, recorded at the time the last\r\n      // `\"change\"` event was fired.\r\n      previous: function(attr) {\r\n        if (attr == null || !this._previousAttributes) return null;\r\n        return this._previousAttributes[attr];\r\n      },\r\n  \r\n      // Get all of the attributes of the model at the time of the previous\r\n      // `\"change\"` event.\r\n      previousAttributes: function() {\r\n        return _.clone(this._previousAttributes);\r\n      },\r\n  \r\n      // Fetch the model from the server, merging the response with the model's\r\n      // local attributes. Any changed attributes will trigger a \"change\" event.\r\n      fetch: function(options) {\r\n        options = _.extend({parse: true}, options);\r\n        var model = this;\r\n        var success = options.success;\r\n        options.success = function(resp) {\r\n          var serverAttrs = options.parse ? model.parse(resp, options) : resp;\r\n          if (!model.set(serverAttrs, options)) return false;\r\n          if (success) success.call(options.context, model, resp, options);\r\n          model.trigger('sync', model, resp, options);\r\n        };\r\n        wrapError(this, options);\r\n        return this.sync('read', this, options);\r\n      },\r\n  \r\n      // Set a hash of model attributes, and sync the model to the server.\r\n      // If the server returns an attributes hash that differs, the model's\r\n      // state will be `set` again.\r\n      save: function(key, val, options) {\r\n        // Handle both `\"key\", value` and `{key: value}` -style arguments.\r\n        var attrs;\r\n        if (key == null || typeof key === 'object') {\r\n          attrs = key;\r\n          options = val;\r\n        } else {\r\n          (attrs = {})[key] = val;\r\n        }\r\n  \r\n        options = _.extend({validate: true, parse: true}, options);\r\n        var wait = options.wait;\r\n  \r\n        // If we're not waiting and attributes exist, save acts as\r\n        // `set(attr).save(null, opts)` with validation. Otherwise, check if\r\n        // the model will be valid when the attributes, if any, are set.\r\n        if (attrs && !wait) {\r\n          if (!this.set(attrs, options)) return false;\r\n        } else if (!this._validate(attrs, options)) {\r\n          return false;\r\n        }\r\n  \r\n        // After a successful server-side save, the client is (optionally)\r\n        // updated with the server-side state.\r\n        var model = this;\r\n        var success = options.success;\r\n        var attributes = this.attributes;\r\n        options.success = function(resp) {\r\n          // Ensure attributes are restored during synchronous saves.\r\n          model.attributes = attributes;\r\n          var serverAttrs = options.parse ? model.parse(resp, options) : resp;\r\n          if (wait) serverAttrs = _.extend({}, attrs, serverAttrs);\r\n          if (serverAttrs && !model.set(serverAttrs, options)) return false;\r\n          if (success) success.call(options.context, model, resp, options);\r\n          model.trigger('sync', model, resp, options);\r\n        };\r\n        wrapError(this, options);\r\n  \r\n        // Set temporary attributes if `{wait: true}` to properly find new ids.\r\n        if (attrs && wait) this.attributes = _.extend({}, attributes, attrs);\r\n  \r\n        var method = this.isNew() ? 'create' : options.patch ? 'patch' : 'update';\r\n        if (method === 'patch' && !options.attrs) options.attrs = attrs;\r\n        var xhr = this.sync(method, this, options);\r\n  \r\n        // Restore attributes.\r\n        this.attributes = attributes;\r\n  \r\n        return xhr;\r\n      },\r\n  \r\n      // Destroy this model on the server if it was already persisted.\r\n      // Optimistically removes the model from its collection, if it has one.\r\n      // If `wait: true` is passed, waits for the server to respond before removal.\r\n      destroy: function(options) {\r\n        options = options ? _.clone(options) : {};\r\n        var model = this;\r\n        var success = options.success;\r\n        var wait = options.wait;\r\n  \r\n        var destroy = function() {\r\n          model.stopListening();\r\n          model.trigger('destroy', model, model.collection, options);\r\n        };\r\n  \r\n        options.success = function(resp) {\r\n          if (wait) destroy();\r\n          if (success) success.call(options.context, model, resp, options);\r\n          if (!model.isNew()) model.trigger('sync', model, resp, options);\r\n        };\r\n  \r\n        var xhr = false;\r\n        if (this.isNew()) {\r\n          _.defer(options.success);\r\n        } else {\r\n          wrapError(this, options);\r\n          xhr = this.sync('delete', this, options);\r\n        }\r\n        if (!wait) destroy();\r\n        return xhr;\r\n      },\r\n  \r\n      // Default URL for the model's representation on the server -- if you're\r\n      // using Backbone's restful methods, override this to change the endpoint\r\n      // that will be called.\r\n      url: function() {\r\n        var base =\r\n          _.result(this, 'urlRoot') ||\r\n          _.result(this.collection, 'url') ||\r\n          urlError();\r\n        if (this.isNew()) return base;\r\n        var id = this.get(this.idAttribute);\r\n        return base.replace(/[^\\/]$/, '$&/') + encodeURIComponent(id);\r\n      },\r\n  \r\n      // **parse** converts a response into the hash of attributes to be `set` on\r\n      // the model. The default implementation is just to pass the response along.\r\n      parse: function(resp, options) {\r\n        return resp;\r\n      },\r\n  \r\n      // Create a new model with identical attributes to this one.\r\n      clone: function() {\r\n        return new this.constructor(this.attributes);\r\n      },\r\n  \r\n      // A model is new if it has never been saved to the server, and lacks an id.\r\n      isNew: function() {\r\n        return !this.has(this.idAttribute);\r\n      },\r\n  \r\n      // Check if the model is currently in a valid state.\r\n      isValid: function(options) {\r\n        return this._validate({}, _.extend({}, options, {validate: true}));\r\n      },\r\n  \r\n      // Run validation against the next complete set of model attributes,\r\n      // returning `true` if all is well. Otherwise, fire an `\"invalid\"` event.\r\n      _validate: function(attrs, options) {\r\n        if (!options.validate || !this.validate) return true;\r\n        attrs = _.extend({}, this.attributes, attrs);\r\n        var error = this.validationError = this.validate(attrs, options) || null;\r\n        if (!error) return true;\r\n        this.trigger('invalid', this, error, _.extend(options, {validationError: error}));\r\n        return false;\r\n      }\r\n  \r\n    });\r\n  \r\n    // Backbone.Collection\r\n    // -------------------\r\n  \r\n    // If models tend to represent a single row of data, a Backbone Collection is\r\n    // more analogous to a table full of data ... or a small slice or page of that\r\n    // table, or a collection of rows that belong together for a particular reason\r\n    // -- all of the messages in this particular folder, all of the documents\r\n    // belonging to this particular author, and so on. Collections maintain\r\n    // indexes of their models, both in order, and for lookup by `id`.\r\n  \r\n    // Create a new **Collection**, perhaps to contain a specific type of `model`.\r\n    // If a `comparator` is specified, the Collection will maintain\r\n    // its models in sort order, as they're added and removed.\r\n    var Collection = Backbone.Collection = function(models, options) {\r\n      options || (options = {});\r\n      this.preinitialize.apply(this, arguments);\r\n      if (options.model) this.model = options.model;\r\n      if (options.comparator !== void 0) this.comparator = options.comparator;\r\n      this._reset();\r\n      this.initialize.apply(this, arguments);\r\n      if (models) this.reset(models, _.extend({silent: true}, options));\r\n    };\r\n  \r\n    // Default options for `Collection#set`.\r\n    var setOptions = {add: true, remove: true, merge: true};\r\n    var addOptions = {add: true, remove: false};\r\n  \r\n    // Splices `insert` into `array` at index `at`.\r\n    var splice = function(array, insert, at) {\r\n      at = Math.min(Math.max(at, 0), array.length);\r\n      var tail = Array(array.length - at);\r\n      var length = insert.length;\r\n      var i;\r\n      for (i = 0; i < tail.length; i++) tail[i] = array[i + at];\r\n      for (i = 0; i < length; i++) array[i + at] = insert[i];\r\n      for (i = 0; i < tail.length; i++) array[i + length + at] = tail[i];\r\n    };\r\n  \r\n    // Define the Collection's inheritable methods.\r\n    _.extend(Collection.prototype, Events, {\r\n  \r\n      // The default model for a collection is just a **Backbone.Model**.\r\n      // This should be overridden in most cases.\r\n      model: Model,\r\n  \r\n  \r\n      // preinitialize is an empty function by default. You can override it with a function\r\n      // or object.  preinitialize will run before any instantiation logic is run in the Collection.\r\n      preinitialize: function(){},\r\n  \r\n      // Initialize is an empty function by default. Override it with your own\r\n      // initialization logic.\r\n      initialize: function(){},\r\n  \r\n      // The JSON representation of a Collection is an array of the\r\n      // models' attributes.\r\n      toJSON: function(options) {\r\n        return this.map(function(model) { return model.toJSON(options); });\r\n      },\r\n  \r\n      // Proxy `Backbone.sync` by default.\r\n      sync: function() {\r\n        return Backbone.sync.apply(this, arguments);\r\n      },\r\n  \r\n      // Add a model, or list of models to the set. `models` may be Backbone\r\n      // Models or raw JavaScript objects to be converted to Models, or any\r\n      // combination of the two.\r\n      add: function(models, options) {\r\n        return this.set(models, _.extend({merge: false}, options, addOptions));\r\n      },\r\n  \r\n      // Remove a model, or a list of models from the set.\r\n      remove: function(models, options) {\r\n        options = _.extend({}, options);\r\n        var singular = !_.isArray(models);\r\n        models = singular ? [models] : models.slice();\r\n        var removed = this._removeModels(models, options);\r\n        if (!options.silent && removed.length) {\r\n          options.changes = {added: [], merged: [], removed: removed};\r\n          this.trigger('update', this, options);\r\n        }\r\n        return singular ? removed[0] : removed;\r\n      },\r\n  \r\n      // Update a collection by `set`-ing a new list of models, adding new ones,\r\n      // removing models that are no longer present, and merging models that\r\n      // already exist in the collection, as necessary. Similar to **Model#set**,\r\n      // the core operation for updating the data contained by the collection.\r\n      set: function(models, options) {\r\n        if (models == null) return;\r\n  \r\n        options = _.extend({}, setOptions, options);\r\n        if (options.parse && !this._isModel(models)) {\r\n          models = this.parse(models, options) || [];\r\n        }\r\n  \r\n        var singular = !_.isArray(models);\r\n        models = singular ? [models] : models.slice();\r\n  \r\n        var at = options.at;\r\n        if (at != null) at = +at;\r\n        if (at > this.length) at = this.length;\r\n        if (at < 0) at += this.length + 1;\r\n  \r\n        var set = [];\r\n        var toAdd = [];\r\n        var toMerge = [];\r\n        var toRemove = [];\r\n        var modelMap = {};\r\n  \r\n        var add = options.add;\r\n        var merge = options.merge;\r\n        var remove = options.remove;\r\n  \r\n        var sort = false;\r\n        var sortable = this.comparator && at == null && options.sort !== false;\r\n        var sortAttr = _.isString(this.comparator) ? this.comparator : null;\r\n  \r\n        // Turn bare objects into model references, and prevent invalid models\r\n        // from being added.\r\n        var model, i;\r\n        for (i = 0; i < models.length; i++) {\r\n          model = models[i];\r\n  \r\n          // If a duplicate is found, prevent it from being added and\r\n          // optionally merge it into the existing model.\r\n          var existing = this.get(model);\r\n          if (existing) {\r\n            if (merge && model !== existing) {\r\n              var attrs = this._isModel(model) ? model.attributes : model;\r\n              if (options.parse) attrs = existing.parse(attrs, options);\r\n              existing.set(attrs, options);\r\n              toMerge.push(existing);\r\n              if (sortable && !sort) sort = existing.hasChanged(sortAttr);\r\n            }\r\n            if (!modelMap[existing.cid]) {\r\n              modelMap[existing.cid] = true;\r\n              set.push(existing);\r\n            }\r\n            models[i] = existing;\r\n  \r\n          // If this is a new, valid model, push it to the `toAdd` list.\r\n          } else if (add) {\r\n            model = models[i] = this._prepareModel(model, options);\r\n            if (model) {\r\n              toAdd.push(model);\r\n              this._addReference(model, options);\r\n              modelMap[model.cid] = true;\r\n              set.push(model);\r\n            }\r\n          }\r\n        }\r\n  \r\n        // Remove stale models.\r\n        if (remove) {\r\n          for (i = 0; i < this.length; i++) {\r\n            model = this.models[i];\r\n            if (!modelMap[model.cid]) toRemove.push(model);\r\n          }\r\n          if (toRemove.length) this._removeModels(toRemove, options);\r\n        }\r\n  \r\n        // See if sorting is needed, update `length` and splice in new models.\r\n        var orderChanged = false;\r\n        var replace = !sortable && add && remove;\r\n        if (set.length && replace) {\r\n          orderChanged = this.length !== set.length || _.some(this.models, function(m, index) {\r\n            return m !== set[index];\r\n          });\r\n          this.models.length = 0;\r\n          splice(this.models, set, 0);\r\n          this.length = this.models.length;\r\n        } else if (toAdd.length) {\r\n          if (sortable) sort = true;\r\n          splice(this.models, toAdd, at == null ? this.length : at);\r\n          this.length = this.models.length;\r\n        }\r\n  \r\n        // Silently sort the collection if appropriate.\r\n        if (sort) this.sort({silent: true});\r\n  \r\n        // Unless silenced, it's time to fire all appropriate add/sort/update events.\r\n        if (!options.silent) {\r\n          for (i = 0; i < toAdd.length; i++) {\r\n            if (at != null) options.index = at + i;\r\n            model = toAdd[i];\r\n            model.trigger('add', model, this, options);\r\n          }\r\n          if (sort || orderChanged) this.trigger('sort', this, options);\r\n          if (toAdd.length || toRemove.length || toMerge.length) {\r\n            options.changes = {\r\n              added: toAdd,\r\n              removed: toRemove,\r\n              merged: toMerge\r\n            };\r\n            this.trigger('update', this, options);\r\n          }\r\n        }\r\n  \r\n        // Return the added (or merged) model (or models).\r\n        return singular ? models[0] : models;\r\n      },\r\n  \r\n      // When you have more items than you want to add or remove individually,\r\n      // you can reset the entire set with a new list of models, without firing\r\n      // any granular `add` or `remove` events. Fires `reset` when finished.\r\n      // Useful for bulk operations and optimizations.\r\n      reset: function(models, options) {\r\n        options = options ? _.clone(options) : {};\r\n        for (var i = 0; i < this.models.length; i++) {\r\n          this._removeReference(this.models[i], options);\r\n        }\r\n        options.previousModels = this.models;\r\n        this._reset();\r\n        models = this.add(models, _.extend({silent: true}, options));\r\n        if (!options.silent) this.trigger('reset', this, options);\r\n        return models;\r\n      },\r\n  \r\n      // Add a model to the end of the collection.\r\n      push: function(model, options) {\r\n        return this.add(model, _.extend({at: this.length}, options));\r\n      },\r\n  \r\n      // Remove a model from the end of the collection.\r\n      pop: function(options) {\r\n        var model = this.at(this.length - 1);\r\n        return this.remove(model, options);\r\n      },\r\n  \r\n      // Add a model to the beginning of the collection.\r\n      unshift: function(model, options) {\r\n        return this.add(model, _.extend({at: 0}, options));\r\n      },\r\n  \r\n      // Remove a model from the beginning of the collection.\r\n      shift: function(options) {\r\n        var model = this.at(0);\r\n        return this.remove(model, options);\r\n      },\r\n  \r\n      // Slice out a sub-array of models from the collection.\r\n      slice: function() {\r\n        return slice.apply(this.models, arguments);\r\n      },\r\n  \r\n      // Get a model from the set by id, cid, model object with id or cid\r\n      // properties, or an attributes object that is transformed through modelId.\r\n      get: function(obj) {\r\n        if (obj == null) return void 0;\r\n        return this._byId[obj] ||\r\n          this._byId[this.modelId(this._isModel(obj) ? obj.attributes : obj, obj.idAttribute)] ||\r\n          obj.cid && this._byId[obj.cid];\r\n      },\r\n  \r\n      // Returns `true` if the model is in the collection.\r\n      has: function(obj) {\r\n        return this.get(obj) != null;\r\n      },\r\n  \r\n      // Get the model at the given index.\r\n      at: function(index) {\r\n        if (index < 0) index += this.length;\r\n        return this.models[index];\r\n      },\r\n  \r\n      // Return models with matching attributes. Useful for simple cases of\r\n      // `filter`.\r\n      where: function(attrs, first) {\r\n        return this[first ? 'find' : 'filter'](attrs);\r\n      },\r\n  \r\n      // Return the first model with matching attributes. Useful for simple cases\r\n      // of `find`.\r\n      findWhere: function(attrs) {\r\n        return this.where(attrs, true);\r\n      },\r\n  \r\n      // Force the collection to re-sort itself. You don't need to call this under\r\n      // normal circumstances, as the set will maintain sort order as each item\r\n      // is added.\r\n      sort: function(options) {\r\n        var comparator = this.comparator;\r\n        if (!comparator) throw new Error('Cannot sort a set without a comparator');\r\n        options || (options = {});\r\n  \r\n        var length = comparator.length;\r\n        if (_.isFunction(comparator)) comparator = comparator.bind(this);\r\n  \r\n        // Run sort based on type of `comparator`.\r\n        if (length === 1 || _.isString(comparator)) {\r\n          this.models = this.sortBy(comparator);\r\n        } else {\r\n          this.models.sort(comparator);\r\n        }\r\n        if (!options.silent) this.trigger('sort', this, options);\r\n        return this;\r\n      },\r\n  \r\n      // Pluck an attribute from each model in the collection.\r\n      pluck: function(attr) {\r\n        return this.map(attr + '');\r\n      },\r\n  \r\n      // Fetch the default set of models for this collection, resetting the\r\n      // collection when they arrive. If `reset: true` is passed, the response\r\n      // data will be passed through the `reset` method instead of `set`.\r\n      fetch: function(options) {\r\n        options = _.extend({parse: true}, options);\r\n        var success = options.success;\r\n        var collection = this;\r\n        options.success = function(resp) {\r\n          var method = options.reset ? 'reset' : 'set';\r\n          collection[method](resp, options);\r\n          if (success) success.call(options.context, collection, resp, options);\r\n          collection.trigger('sync', collection, resp, options);\r\n        };\r\n        wrapError(this, options);\r\n        return this.sync('read', this, options);\r\n      },\r\n  \r\n      // Create a new instance of a model in this collection. Add the model to the\r\n      // collection immediately, unless `wait: true` is passed, in which case we\r\n      // wait for the server to agree.\r\n      create: function(model, options) {\r\n        options = options ? _.clone(options) : {};\r\n        var wait = options.wait;\r\n        model = this._prepareModel(model, options);\r\n        if (!model) return false;\r\n        if (!wait) this.add(model, options);\r\n        var collection = this;\r\n        var success = options.success;\r\n        options.success = function(m, resp, callbackOpts) {\r\n          if (wait) collection.add(m, callbackOpts);\r\n          if (success) success.call(callbackOpts.context, m, resp, callbackOpts);\r\n        };\r\n        model.save(null, options);\r\n        return model;\r\n      },\r\n  \r\n      // **parse** converts a response into a list of models to be added to the\r\n      // collection. The default implementation is just to pass it through.\r\n      parse: function(resp, options) {\r\n        return resp;\r\n      },\r\n  \r\n      // Create a new collection with an identical list of models as this one.\r\n      clone: function() {\r\n        return new this.constructor(this.models, {\r\n          model: this.model,\r\n          comparator: this.comparator\r\n        });\r\n      },\r\n  \r\n      // Define how to uniquely identify models in the collection.\r\n      modelId: function(attrs, idAttribute) {\r\n        return attrs[idAttribute || this.model.prototype.idAttribute || 'id'];\r\n      },\r\n  \r\n      // Get an iterator of all models in this collection.\r\n      values: function() {\r\n        return new CollectionIterator(this, ITERATOR_VALUES);\r\n      },\r\n  \r\n      // Get an iterator of all model IDs in this collection.\r\n      keys: function() {\r\n        return new CollectionIterator(this, ITERATOR_KEYS);\r\n      },\r\n  \r\n      // Get an iterator of all [ID, model] tuples in this collection.\r\n      entries: function() {\r\n        return new CollectionIterator(this, ITERATOR_KEYSVALUES);\r\n      },\r\n  \r\n      // Private method to reset all internal state. Called when the collection\r\n      // is first initialized or reset.\r\n      _reset: function() {\r\n        this.length = 0;\r\n        this.models = [];\r\n        this._byId  = {};\r\n      },\r\n  \r\n      // Prepare a hash of attributes (or other model) to be added to this\r\n      // collection.\r\n      _prepareModel: function(attrs, options) {\r\n        if (this._isModel(attrs)) {\r\n          if (!attrs.collection) attrs.collection = this;\r\n          return attrs;\r\n        }\r\n        options = options ? _.clone(options) : {};\r\n        options.collection = this;\r\n  \r\n        var model;\r\n        if (this.model.prototype) {\r\n          model = new this.model(attrs, options);\r\n        } else {\r\n          // ES class methods didn't have prototype\r\n          model = this.model(attrs, options);\r\n        }\r\n  \r\n        if (!model.validationError) return model;\r\n        this.trigger('invalid', this, model.validationError, options);\r\n        return false;\r\n      },\r\n  \r\n      // Internal method called by both remove and set.\r\n      _removeModels: function(models, options) {\r\n        var removed = [];\r\n        for (var i = 0; i < models.length; i++) {\r\n          var model = this.get(models[i]);\r\n          if (!model) continue;\r\n  \r\n          var index = this.indexOf(model);\r\n          this.models.splice(index, 1);\r\n          this.length--;\r\n  \r\n          // Remove references before triggering 'remove' event to prevent an\r\n          // infinite loop. #3693\r\n          delete this._byId[model.cid];\r\n          var id = this.modelId(model.attributes, model.idAttribute);\r\n          if (id != null) delete this._byId[id];\r\n  \r\n          if (!options.silent) {\r\n            options.index = index;\r\n            model.trigger('remove', model, this, options);\r\n          }\r\n  \r\n          removed.push(model);\r\n          this._removeReference(model, options);\r\n        }\r\n        return removed;\r\n      },\r\n  \r\n      // Method for checking whether an object should be considered a model for\r\n      // the purposes of adding to the collection.\r\n      _isModel: function(model) {\r\n        return model instanceof Model;\r\n      },\r\n  \r\n      // Internal method to create a model's ties to a collection.\r\n      _addReference: function(model, options) {\r\n        this._byId[model.cid] = model;\r\n        var id = this.modelId(model.attributes, model.idAttribute);\r\n        if (id != null) this._byId[id] = model;\r\n        model.on('all', this._onModelEvent, this);\r\n      },\r\n  \r\n      // Internal method to sever a model's ties to a collection.\r\n      _removeReference: function(model, options) {\r\n        delete this._byId[model.cid];\r\n        var id = this.modelId(model.attributes, model.idAttribute);\r\n        if (id != null) delete this._byId[id];\r\n        if (this === model.collection) delete model.collection;\r\n        model.off('all', this._onModelEvent, this);\r\n      },\r\n  \r\n      // Internal method called every time a model in the set fires an event.\r\n      // Sets need to update their indexes when models change ids. All other\r\n      // events simply proxy through. \"add\" and \"remove\" events that originate\r\n      // in other collections are ignored.\r\n      _onModelEvent: function(event, model, collection, options) {\r\n        if (model) {\r\n          if ((event === 'add' || event === 'remove') && collection !== this) return;\r\n          if (event === 'destroy') this.remove(model, options);\r\n          if (event === 'changeId') {\r\n            var prevId = this.modelId(model.previousAttributes(), model.idAttribute);\r\n            var id = this.modelId(model.attributes, model.idAttribute);\r\n            if (prevId != null) delete this._byId[prevId];\r\n            if (id != null) this._byId[id] = model;\r\n          }\r\n        }\r\n        this.trigger.apply(this, arguments);\r\n      }\r\n  \r\n    });\r\n  \r\n    // Defining an @@iterator method implements JavaScript's Iterable protocol.\r\n    // In modern ES2015 browsers, this value is found at Symbol.iterator.\r\n    /* global Symbol */\r\n    var $$iterator = typeof Symbol === 'function' && Symbol.iterator;\r\n    if ($$iterator) {\r\n      Collection.prototype[$$iterator] = Collection.prototype.values;\r\n    }\r\n  \r\n    // CollectionIterator\r\n    // ------------------\r\n  \r\n    // A CollectionIterator implements JavaScript's Iterator protocol, allowing the\r\n    // use of `for of` loops in modern browsers and interoperation between\r\n    // Backbone.Collection and other JavaScript functions and third-party libraries\r\n    // which can operate on Iterables.\r\n    var CollectionIterator = function(collection, kind) {\r\n      this._collection = collection;\r\n      this._kind = kind;\r\n      this._index = 0;\r\n    };\r\n  \r\n    // This \"enum\" defines the three possible kinds of values which can be emitted\r\n    // by a CollectionIterator that correspond to the values(), keys() and entries()\r\n    // methods on Collection, respectively.\r\n    var ITERATOR_VALUES = 1;\r\n    var ITERATOR_KEYS = 2;\r\n    var ITERATOR_KEYSVALUES = 3;\r\n  \r\n    // All Iterators should themselves be Iterable.\r\n    if ($$iterator) {\r\n      CollectionIterator.prototype[$$iterator] = function() {\r\n        return this;\r\n      };\r\n    }\r\n  \r\n    CollectionIterator.prototype.next = function() {\r\n      if (this._collection) {\r\n  \r\n        // Only continue iterating if the iterated collection is long enough.\r\n        if (this._index < this._collection.length) {\r\n          var model = this._collection.at(this._index);\r\n          this._index++;\r\n  \r\n          // Construct a value depending on what kind of values should be iterated.\r\n          var value;\r\n          if (this._kind === ITERATOR_VALUES) {\r\n            value = model;\r\n          } else {\r\n            var id = this._collection.modelId(model.attributes, model.idAttribute);\r\n            if (this._kind === ITERATOR_KEYS) {\r\n              value = id;\r\n            } else { // ITERATOR_KEYSVALUES\r\n              value = [id, model];\r\n            }\r\n          }\r\n          return {value: value, done: false};\r\n        }\r\n  \r\n        // Once exhausted, remove the reference to the collection so future\r\n        // calls to the next method always return done.\r\n        this._collection = void 0;\r\n      }\r\n  \r\n      return {value: void 0, done: true};\r\n    };\r\n  \r\n    // Backbone.View\r\n    // -------------\r\n  \r\n    // Backbone Views are almost more convention than they are actual code. A View\r\n    // is simply a JavaScript object that represents a logical chunk of UI in the\r\n    // DOM. This might be a single item, an entire list, a sidebar or panel, or\r\n    // even the surrounding frame which wraps your whole app. Defining a chunk of\r\n    // UI as a **View** allows you to define your DOM events declaratively, without\r\n    // having to worry about render order ... and makes it easy for the view to\r\n    // react to specific changes in the state of your models.\r\n  \r\n    // Creating a Backbone.View creates its initial element outside of the DOM,\r\n    // if an existing element is not provided...\r\n    var View = Backbone.View = function(options) {\r\n      this.cid = _.uniqueId('view');\r\n      this.preinitialize.apply(this, arguments);\r\n      _.extend(this, _.pick(options, viewOptions));\r\n      this._ensureElement();\r\n      this.initialize.apply(this, arguments);\r\n    };\r\n  \r\n    // Cached regex to split keys for `delegate`.\r\n    var delegateEventSplitter = /^(\\S+)\\s*(.*)$/;\r\n  \r\n    // List of view options to be set as properties.\r\n    var viewOptions = ['model', 'collection', 'el', 'id', 'attributes', 'className', 'tagName', 'events'];\r\n  \r\n    // Set up all inheritable **Backbone.View** properties and methods.\r\n    _.extend(View.prototype, Events, {\r\n  \r\n      // The default `tagName` of a View's element is `\"div\"`.\r\n      tagName: 'div',\r\n  \r\n      // jQuery delegate for element lookup, scoped to DOM elements within the\r\n      // current view. This should be preferred to global lookups where possible.\r\n      $: function(selector) {\r\n        return this.$el.find(selector);\r\n      },\r\n  \r\n      // preinitialize is an empty function by default. You can override it with a function\r\n      // or object.  preinitialize will run before any instantiation logic is run in the View\r\n      preinitialize: function(){},\r\n  \r\n      // Initialize is an empty function by default. Override it with your own\r\n      // initialization logic.\r\n      initialize: function(){},\r\n  \r\n      // **render** is the core function that your view should override, in order\r\n      // to populate its element (`this.el`), with the appropriate HTML. The\r\n      // convention is for **render** to always return `this`.\r\n      render: function() {\r\n        return this;\r\n      },\r\n  \r\n      // Remove this view by taking the element out of the DOM, and removing any\r\n      // applicable Backbone.Events listeners.\r\n      remove: function() {\r\n        this._removeElement();\r\n        this.stopListening();\r\n        return this;\r\n      },\r\n  \r\n      // Remove this view's element from the document and all event listeners\r\n      // attached to it. Exposed for subclasses using an alternative DOM\r\n      // manipulation API.\r\n      _removeElement: function() {\r\n        this.$el.remove();\r\n      },\r\n  \r\n      // Change the view's element (`this.el` property) and re-delegate the\r\n      // view's events on the new element.\r\n      setElement: function(element) {\r\n        this.undelegateEvents();\r\n        this._setElement(element);\r\n        this.delegateEvents();\r\n        return this;\r\n      },\r\n  \r\n      // Creates the `this.el` and `this.$el` references for this view using the\r\n      // given `el`. `el` can be a CSS selector or an HTML string, a jQuery\r\n      // context or an element. Subclasses can override this to utilize an\r\n      // alternative DOM manipulation API and are only required to set the\r\n      // `this.el` property.\r\n      _setElement: function(el) {\r\n        this.$el = el instanceof Backbone.$ ? el : Backbone.$(el);\r\n        this.el = this.$el[0];\r\n      },\r\n  \r\n      // Set callbacks, where `this.events` is a hash of\r\n      //\r\n      // *{\"event selector\": \"callback\"}*\r\n      //\r\n      //     {\r\n      //       'mousedown .title':  'edit',\r\n      //       'click .button':     'save',\r\n      //       'click .open':       function(e) { ... }\r\n      //     }\r\n      //\r\n      // pairs. Callbacks will be bound to the view, with `this` set properly.\r\n      // Uses event delegation for efficiency.\r\n      // Omitting the selector binds the event to `this.el`.\r\n      delegateEvents: function(events) {\r\n        events || (events = _.result(this, 'events'));\r\n        if (!events) return this;\r\n        this.undelegateEvents();\r\n        for (var key in events) {\r\n          var method = events[key];\r\n          if (!_.isFunction(method)) method = this[method];\r\n          if (!method) continue;\r\n          var match = key.match(delegateEventSplitter);\r\n          this.delegate(match[1], match[2], method.bind(this));\r\n        }\r\n        return this;\r\n      },\r\n  \r\n      // Add a single event listener to the view's element (or a child element\r\n      // using `selector`). This only works for delegate-able events: not `focus`,\r\n      // `blur`, and not `change`, `submit`, and `reset` in Internet Explorer.\r\n      delegate: function(eventName, selector, listener) {\r\n        this.$el.on(eventName + '.delegateEvents' + this.cid, selector, listener);\r\n        return this;\r\n      },\r\n  \r\n      // Clears all callbacks previously bound to the view by `delegateEvents`.\r\n      // You usually don't need to use this, but may wish to if you have multiple\r\n      // Backbone views attached to the same DOM element.\r\n      undelegateEvents: function() {\r\n        if (this.$el) this.$el.off('.delegateEvents' + this.cid);\r\n        return this;\r\n      },\r\n  \r\n      // A finer-grained `undelegateEvents` for removing a single delegated event.\r\n      // `selector` and `listener` are both optional.\r\n      undelegate: function(eventName, selector, listener) {\r\n        this.$el.off(eventName + '.delegateEvents' + this.cid, selector, listener);\r\n        return this;\r\n      },\r\n  \r\n      // Produces a DOM element to be assigned to your view. Exposed for\r\n      // subclasses using an alternative DOM manipulation API.\r\n      _createElement: function(tagName) {\r\n        return document.createElement(tagName);\r\n      },\r\n  \r\n      // Ensure that the View has a DOM element to render into.\r\n      // If `this.el` is a string, pass it through `$()`, take the first\r\n      // matching element, and re-assign it to `el`. Otherwise, create\r\n      // an element from the `id`, `className` and `tagName` properties.\r\n      _ensureElement: function() {\r\n        if (!this.el) {\r\n          var attrs = _.extend({}, _.result(this, 'attributes'));\r\n          if (this.id) attrs.id = _.result(this, 'id');\r\n          if (this.className) attrs['class'] = _.result(this, 'className');\r\n          this.setElement(this._createElement(_.result(this, 'tagName')));\r\n          this._setAttributes(attrs);\r\n        } else {\r\n          this.setElement(_.result(this, 'el'));\r\n        }\r\n      },\r\n  \r\n      // Set attributes from a hash on this view's element.  Exposed for\r\n      // subclasses using an alternative DOM manipulation API.\r\n      _setAttributes: function(attributes) {\r\n        this.$el.attr(attributes);\r\n      }\r\n  \r\n    });\r\n  \r\n    // Proxy Backbone class methods to Underscore functions, wrapping the model's\r\n    // `attributes` object or collection's `models` array behind the scenes.\r\n    //\r\n    // collection.filter(function(model) { return model.get('age') > 10 });\r\n    // collection.each(this.addView);\r\n    //\r\n    // `Function#apply` can be slow so we use the method's arg count, if we know it.\r\n    var addMethod = function(base, length, method, attribute) {\r\n      switch (length) {\r\n        case 1: return function() {\r\n          return base[method](this[attribute]);\r\n        };\r\n        case 2: return function(value) {\r\n          return base[method](this[attribute], value);\r\n        };\r\n        case 3: return function(iteratee, context) {\r\n          return base[method](this[attribute], cb(iteratee, this), context);\r\n        };\r\n        case 4: return function(iteratee, defaultVal, context) {\r\n          return base[method](this[attribute], cb(iteratee, this), defaultVal, context);\r\n        };\r\n        default: return function() {\r\n          var args = slice.call(arguments);\r\n          args.unshift(this[attribute]);\r\n          return base[method].apply(base, args);\r\n        };\r\n      }\r\n    };\r\n  \r\n    var addUnderscoreMethods = function(Class, base, methods, attribute) {\r\n      _.each(methods, function(length, method) {\r\n        if (base[method]) Class.prototype[method] = addMethod(base, length, method, attribute);\r\n      });\r\n    };\r\n  \r\n    // Support `collection.sortBy('attr')` and `collection.findWhere({id: 1})`.\r\n    var cb = function(iteratee, instance) {\r\n      if (_.isFunction(iteratee)) return iteratee;\r\n      if (_.isObject(iteratee) && !instance._isModel(iteratee)) return modelMatcher(iteratee);\r\n      if (_.isString(iteratee)) return function(model) { return model.get(iteratee); };\r\n      return iteratee;\r\n    };\r\n    var modelMatcher = function(attrs) {\r\n      var matcher = _.matches(attrs);\r\n      return function(model) {\r\n        return matcher(model.attributes);\r\n      };\r\n    };\r\n  \r\n    // Underscore methods that we want to implement on the Collection.\r\n    // 90% of the core usefulness of Backbone Collections is actually implemented\r\n    // right here:\r\n    var collectionMethods = {forEach: 3, each: 3, map: 3, collect: 3, reduce: 0,\r\n      foldl: 0, inject: 0, reduceRight: 0, foldr: 0, find: 3, detect: 3, filter: 3,\r\n      select: 3, reject: 3, every: 3, all: 3, some: 3, any: 3, include: 3, includes: 3,\r\n      contains: 3, invoke: 0, max: 3, min: 3, toArray: 1, size: 1, first: 3,\r\n      head: 3, take: 3, initial: 3, rest: 3, tail: 3, drop: 3, last: 3,\r\n      without: 0, difference: 0, indexOf: 3, shuffle: 1, lastIndexOf: 3,\r\n      isEmpty: 1, chain: 1, sample: 3, partition: 3, groupBy: 3, countBy: 3,\r\n      sortBy: 3, indexBy: 3, findIndex: 3, findLastIndex: 3};\r\n  \r\n  \r\n    // Underscore methods that we want to implement on the Model, mapped to the\r\n    // number of arguments they take.\r\n    var modelMethods = {keys: 1, values: 1, pairs: 1, invert: 1, pick: 0,\r\n      omit: 0, chain: 1, isEmpty: 1};\r\n  \r\n    // Mix in each Underscore method as a proxy to `Collection#models`.\r\n  \r\n    _.each([\r\n      [Collection, collectionMethods, 'models'],\r\n      [Model, modelMethods, 'attributes']\r\n    ], function(config) {\r\n      var Base = config[0],\r\n          methods = config[1],\r\n          attribute = config[2];\r\n  \r\n      Base.mixin = function(obj) {\r\n        var mappings = _.reduce(_.functions(obj), function(memo, name) {\r\n          memo[name] = 0;\r\n          return memo;\r\n        }, {});\r\n        addUnderscoreMethods(Base, obj, mappings, attribute);\r\n      };\r\n  \r\n      addUnderscoreMethods(Base, _, methods, attribute);\r\n    });\r\n  \r\n    // Backbone.sync\r\n    // -------------\r\n  \r\n    // Override this function to change the manner in which Backbone persists\r\n    // models to the server. You will be passed the type of request, and the\r\n    // model in question. By default, makes a RESTful Ajax request\r\n    // to the model's `url()`. Some possible customizations could be:\r\n    //\r\n    // * Use `setTimeout` to batch rapid-fire updates into a single request.\r\n    // * Send up the models as XML instead of JSON.\r\n    // * Persist models via WebSockets instead of Ajax.\r\n    //\r\n    // Turn on `Backbone.emulateHTTP` in order to send `PUT` and `DELETE` requests\r\n    // as `POST`, with a `_method` parameter containing the true HTTP method,\r\n    // as well as all requests with the body as `application/x-www-form-urlencoded`\r\n    // instead of `application/json` with the model in a param named `model`.\r\n    // Useful when interfacing with server-side languages like **PHP** that make\r\n    // it difficult to read the body of `PUT` requests.\r\n    Backbone.sync = function(method, model, options) {\r\n      var type = methodMap[method];\r\n  \r\n      // Default options, unless specified.\r\n      _.defaults(options || (options = {}), {\r\n        emulateHTTP: Backbone.emulateHTTP,\r\n        emulateJSON: Backbone.emulateJSON\r\n      });\r\n  \r\n      // Default JSON-request options.\r\n      var params = {type: type, dataType: 'json'};\r\n  \r\n      // Ensure that we have a URL.\r\n      if (!options.url) {\r\n        params.url = _.result(model, 'url') || urlError();\r\n      }\r\n  \r\n      // Ensure that we have the appropriate request data.\r\n      if (options.data == null && model && (method === 'create' || method === 'update' || method === 'patch')) {\r\n        params.contentType = 'application/json';\r\n        params.data = JSON.stringify(options.attrs || model.toJSON(options));\r\n      }\r\n  \r\n      // For older servers, emulate JSON by encoding the request into an HTML-form.\r\n      if (options.emulateJSON) {\r\n        params.contentType = 'application/x-www-form-urlencoded';\r\n        params.data = params.data ? {model: params.data} : {};\r\n      }\r\n  \r\n      // For older servers, emulate HTTP by mimicking the HTTP method with `_method`\r\n      // And an `X-HTTP-Method-Override` header.\r\n      if (options.emulateHTTP && (type === 'PUT' || type === 'DELETE' || type === 'PATCH')) {\r\n        params.type = 'POST';\r\n        if (options.emulateJSON) params.data._method = type;\r\n        var beforeSend = options.beforeSend;\r\n        options.beforeSend = function(xhr) {\r\n          xhr.setRequestHeader('X-HTTP-Method-Override', type);\r\n          if (beforeSend) return beforeSend.apply(this, arguments);\r\n        };\r\n      }\r\n  \r\n      // Don't process data on a non-GET request.\r\n      if (params.type !== 'GET' && !options.emulateJSON) {\r\n        params.processData = false;\r\n      }\r\n  \r\n      // Pass along `textStatus` and `errorThrown` from jQuery.\r\n      var error = options.error;\r\n      options.error = function(xhr, textStatus, errorThrown) {\r\n        options.textStatus = textStatus;\r\n        options.errorThrown = errorThrown;\r\n        if (error) error.call(options.context, xhr, textStatus, errorThrown);\r\n      };\r\n  \r\n      // Make the request, allowing the user to override any Ajax options.\r\n      var xhr = options.xhr = Backbone.ajax(_.extend(params, options));\r\n      model.trigger('request', model, xhr, options);\r\n      return xhr;\r\n    };\r\n  \r\n    // Map from CRUD to HTTP for our default `Backbone.sync` implementation.\r\n    var methodMap = {\r\n      'create': 'POST',\r\n      'update': 'PUT',\r\n      'patch': 'PATCH',\r\n      'delete': 'DELETE',\r\n      'read': 'GET'\r\n    };\r\n  \r\n    // Set the default implementation of `Backbone.ajax` to proxy through to `$`.\r\n    // Override this if you'd like to use a different library.\r\n    Backbone.ajax = function() {\r\n      return Backbone.$.ajax.apply(Backbone.$, arguments);\r\n    };\r\n  \r\n    // Backbone.Router\r\n    // ---------------\r\n  \r\n    // Routers map faux-URLs to actions, and fire events when routes are\r\n    // matched. Creating a new one sets its `routes` hash, if not set statically.\r\n    var Router = Backbone.Router = function(options) {\r\n      options || (options = {});\r\n      this.preinitialize.apply(this, arguments);\r\n      if (options.routes) this.routes = options.routes;\r\n      this._bindRoutes();\r\n      this.initialize.apply(this, arguments);\r\n    };\r\n  \r\n    // Cached regular expressions for matching named param parts and splatted\r\n    // parts of route strings.\r\n    var optionalParam = /\\((.*?)\\)/g;\r\n    var namedParam    = /(\\(\\?)?:\\w+/g;\r\n    var splatParam    = /\\*\\w+/g;\r\n    var escapeRegExp  = /[\\-{}\\[\\]+?.,\\\\\\^$|#\\s]/g;\r\n  \r\n    // Set up all inheritable **Backbone.Router** properties and methods.\r\n    _.extend(Router.prototype, Events, {\r\n  \r\n      // preinitialize is an empty function by default. You can override it with a function\r\n      // or object.  preinitialize will run before any instantiation logic is run in the Router.\r\n      preinitialize: function(){},\r\n  \r\n      // Initialize is an empty function by default. Override it with your own\r\n      // initialization logic.\r\n      initialize: function(){},\r\n  \r\n      // Manually bind a single named route to a callback. For example:\r\n      //\r\n      //     this.route('search/:query/p:num', 'search', function(query, num) {\r\n      //       ...\r\n      //     });\r\n      //\r\n      route: function(route, name, callback) {\r\n        if (!_.isRegExp(route)) route = this._routeToRegExp(route);\r\n        if (_.isFunction(name)) {\r\n          callback = name;\r\n          name = '';\r\n        }\r\n        if (!callback) callback = this[name];\r\n        var router = this;\r\n        Backbone.history.route(route, function(fragment) {\r\n          var args = router._extractParameters(route, fragment);\r\n          if (router.execute(callback, args, name) !== false) {\r\n            router.trigger.apply(router, ['route:' + name].concat(args));\r\n            router.trigger('route', name, args);\r\n            Backbone.history.trigger('route', router, name, args);\r\n          }\r\n        });\r\n        return this;\r\n      },\r\n  \r\n      // Execute a route handler with the provided parameters.  This is an\r\n      // excellent place to do pre-route setup or post-route cleanup.\r\n      execute: function(callback, args, name) {\r\n        if (callback) callback.apply(this, args);\r\n      },\r\n  \r\n      // Simple proxy to `Backbone.history` to save a fragment into the history.\r\n      navigate: function(fragment, options) {\r\n        Backbone.history.navigate(fragment, options);\r\n        return this;\r\n      },\r\n  \r\n      // Bind all defined routes to `Backbone.history`. We have to reverse the\r\n      // order of the routes here to support behavior where the most general\r\n      // routes can be defined at the bottom of the route map.\r\n      _bindRoutes: function() {\r\n        if (!this.routes) return;\r\n        this.routes = _.result(this, 'routes');\r\n        var route, routes = _.keys(this.routes);\r\n        while ((route = routes.pop()) != null) {\r\n          this.route(route, this.routes[route]);\r\n        }\r\n      },\r\n  \r\n      // Convert a route string into a regular expression, suitable for matching\r\n      // against the current location hash.\r\n      _routeToRegExp: function(route) {\r\n        route = route.replace(escapeRegExp, '\\\\$&')\r\n        .replace(optionalParam, '(?:$1)?')\r\n        .replace(namedParam, function(match, optional) {\r\n          return optional ? match : '([^/?]+)';\r\n        })\r\n        .replace(splatParam, '([^?]*?)');\r\n        return new RegExp('^' + route + '(?:\\\\?([\\\\s\\\\S]*))?$');\r\n      },\r\n  \r\n      // Given a route, and a URL fragment that it matches, return the array of\r\n      // extracted decoded parameters. Empty or unmatched parameters will be\r\n      // treated as `null` to normalize cross-browser behavior.\r\n      _extractParameters: function(route, fragment) {\r\n        var params = route.exec(fragment).slice(1);\r\n        return _.map(params, function(param, i) {\r\n          // Don't decode the search params.\r\n          if (i === params.length - 1) return param || null;\r\n          return param ? decodeURIComponent(param) : null;\r\n        });\r\n      }\r\n  \r\n    });\r\n  \r\n    // Backbone.History\r\n    // ----------------\r\n  \r\n    // Handles cross-browser history management, based on either\r\n    // [pushState](http://diveintohtml5.info/history.html) and real URLs, or\r\n    // [onhashchange](https://developer.mozilla.org/en-US/docs/DOM/window.onhashchange)\r\n    // and URL fragments. If the browser supports neither (old IE, natch),\r\n    // falls back to polling.\r\n    var History = Backbone.History = function() {\r\n      this.handlers = [];\r\n      this.checkUrl = this.checkUrl.bind(this);\r\n  \r\n      // Ensure that `History` can be used outside of the browser.\r\n      if (typeof window !== 'undefined') {\r\n        this.location = window.location;\r\n        this.history = window.history;\r\n      }\r\n    };\r\n  \r\n    // Cached regex for stripping a leading hash/slash and trailing space.\r\n    var routeStripper = /^[#\\/]|\\s+$/g;\r\n  \r\n    // Cached regex for stripping leading and trailing slashes.\r\n    var rootStripper = /^\\/+|\\/+$/g;\r\n  \r\n    // Cached regex for stripping urls of hash.\r\n    var pathStripper = /#.*$/;\r\n  \r\n    // Has the history handling already been started?\r\n    History.started = false;\r\n  \r\n    // Set up all inheritable **Backbone.History** properties and methods.\r\n    _.extend(History.prototype, Events, {\r\n  \r\n      // The default interval to poll for hash changes, if necessary, is\r\n      // twenty times a second.\r\n      interval: 50,\r\n  \r\n      // Are we at the app root?\r\n      atRoot: function() {\r\n        var path = this.location.pathname.replace(/[^\\/]$/, '$&/');\r\n        return path === this.root && !this.getSearch();\r\n      },\r\n  \r\n      // Does the pathname match the root?\r\n      matchRoot: function() {\r\n        var path = this.decodeFragment(this.location.pathname);\r\n        var rootPath = path.slice(0, this.root.length - 1) + '/';\r\n        return rootPath === this.root;\r\n      },\r\n  \r\n      // Unicode characters in `location.pathname` are percent encoded so they're\r\n      // decoded for comparison. `%25` should not be decoded since it may be part\r\n      // of an encoded parameter.\r\n      decodeFragment: function(fragment) {\r\n        return decodeURI(fragment.replace(/%25/g, '%2525'));\r\n      },\r\n  \r\n      // In IE6, the hash fragment and search params are incorrect if the\r\n      // fragment contains `?`.\r\n      getSearch: function() {\r\n        var match = this.location.href.replace(/#.*/, '').match(/\\?.+/);\r\n        return match ? match[0] : '';\r\n      },\r\n  \r\n      // Gets the true hash value. Cannot use location.hash directly due to bug\r\n      // in Firefox where location.hash will always be decoded.\r\n      getHash: function(window) {\r\n        var match = (window || this).location.href.match(/#(.*)$/);\r\n        return match ? match[1] : '';\r\n      },\r\n  \r\n      // Get the pathname and search params, without the root.\r\n      getPath: function() {\r\n        var path = this.decodeFragment(\r\n          this.location.pathname + this.getSearch()\r\n        ).slice(this.root.length - 1);\r\n        return path.charAt(0) === '/' ? path.slice(1) : path;\r\n      },\r\n  \r\n      // Get the cross-browser normalized URL fragment from the path or hash.\r\n      getFragment: function(fragment) {\r\n        if (fragment == null) {\r\n          if (this._usePushState || !this._wantsHashChange) {\r\n            fragment = this.getPath();\r\n          } else {\r\n            fragment = this.getHash();\r\n          }\r\n        }\r\n        return fragment.replace(routeStripper, '');\r\n      },\r\n  \r\n      // Start the hash change handling, returning `true` if the current URL matches\r\n      // an existing route, and `false` otherwise.\r\n      start: function(options) {\r\n        if (History.started) throw new Error('Backbone.history has already been started');\r\n        History.started = true;\r\n  \r\n        // Figure out the initial configuration. Do we need an iframe?\r\n        // Is pushState desired ... is it available?\r\n        this.options          = _.extend({root: '/'}, this.options, options);\r\n        this.root             = this.options.root;\r\n        this._wantsHashChange = this.options.hashChange !== false;\r\n        this._hasHashChange   = 'onhashchange' in window && (document.documentMode === void 0 || document.documentMode > 7);\r\n        this._useHashChange   = this._wantsHashChange && this._hasHashChange;\r\n        this._wantsPushState  = !!this.options.pushState;\r\n        this._hasPushState    = !!(this.history && this.history.pushState);\r\n        this._usePushState    = this._wantsPushState && this._hasPushState;\r\n        this.fragment         = this.getFragment();\r\n  \r\n        // Normalize root to always include a leading and trailing slash.\r\n        this.root = ('/' + this.root + '/').replace(rootStripper, '/');\r\n  \r\n        // Transition from hashChange to pushState or vice versa if both are\r\n        // requested.\r\n        if (this._wantsHashChange && this._wantsPushState) {\r\n  \r\n          // If we've started off with a route from a `pushState`-enabled\r\n          // browser, but we're currently in a browser that doesn't support it...\r\n          if (!this._hasPushState && !this.atRoot()) {\r\n            var rootPath = this.root.slice(0, -1) || '/';\r\n            this.location.replace(rootPath + '#' + this.getPath());\r\n            // Return immediately as browser will do redirect to new url\r\n            return true;\r\n  \r\n          // Or if we've started out with a hash-based route, but we're currently\r\n          // in a browser where it could be `pushState`-based instead...\r\n          } else if (this._hasPushState && this.atRoot()) {\r\n            this.navigate(this.getHash(), {replace: true});\r\n          }\r\n  \r\n        }\r\n  \r\n        // Proxy an iframe to handle location events if the browser doesn't\r\n        // support the `hashchange` event, HTML5 history, or the user wants\r\n        // `hashChange` but not `pushState`.\r\n        if (!this._hasHashChange && this._wantsHashChange && !this._usePushState) {\r\n          this.iframe = document.createElement('iframe');\r\n          this.iframe.src = 'javascript:0';\r\n          this.iframe.style.display = 'none';\r\n          this.iframe.tabIndex = -1;\r\n          var body = document.body;\r\n          // Using `appendChild` will throw on IE < 9 if the document is not ready.\r\n          var iWindow = body.insertBefore(this.iframe, body.firstChild).contentWindow;\r\n          iWindow.document.open();\r\n          iWindow.document.close();\r\n          iWindow.location.hash = '#' + this.fragment;\r\n        }\r\n  \r\n        // Add a cross-platform `addEventListener` shim for older browsers.\r\n        var addEventListener = window.addEventListener || function(eventName, listener) {\r\n          return attachEvent('on' + eventName, listener);\r\n        };\r\n  \r\n        // Depending on whether we're using pushState or hashes, and whether\r\n        // 'onhashchange' is supported, determine how we check the URL state.\r\n        if (this._usePushState) {\r\n          addEventListener('popstate', this.checkUrl, false);\r\n        } else if (this._useHashChange && !this.iframe) {\r\n          addEventListener('hashchange', this.checkUrl, false);\r\n        } else if (this._wantsHashChange) {\r\n          this._checkUrlInterval = setInterval(this.checkUrl, this.interval);\r\n        }\r\n  \r\n        if (!this.options.silent) return this.loadUrl();\r\n      },\r\n  \r\n      // Disable Backbone.history, perhaps temporarily. Not useful in a real app,\r\n      // but possibly useful for unit testing Routers.\r\n      stop: function() {\r\n        // Add a cross-platform `removeEventListener` shim for older browsers.\r\n        var removeEventListener = window.removeEventListener || function(eventName, listener) {\r\n          return detachEvent('on' + eventName, listener);\r\n        };\r\n  \r\n        // Remove window listeners.\r\n        if (this._usePushState) {\r\n          removeEventListener('popstate', this.checkUrl, false);\r\n        } else if (this._useHashChange && !this.iframe) {\r\n          removeEventListener('hashchange', this.checkUrl, false);\r\n        }\r\n  \r\n        // Clean up the iframe if necessary.\r\n        if (this.iframe) {\r\n          document.body.removeChild(this.iframe);\r\n          this.iframe = null;\r\n        }\r\n  \r\n        // Some environments will throw when clearing an undefined interval.\r\n        if (this._checkUrlInterval) clearInterval(this._checkUrlInterval);\r\n        History.started = false;\r\n      },\r\n  \r\n      // Add a route to be tested when the fragment changes. Routes added later\r\n      // may override previous routes.\r\n      route: function(route, callback) {\r\n        this.handlers.unshift({route: route, callback: callback});\r\n      },\r\n  \r\n      // Checks the current URL to see if it has changed, and if it has,\r\n      // calls `loadUrl`, normalizing across the hidden iframe.\r\n      checkUrl: function(e) {\r\n        var current = this.getFragment();\r\n  \r\n        // If the user pressed the back button, the iframe's hash will have\r\n        // changed and we should use that for comparison.\r\n        if (current === this.fragment && this.iframe) {\r\n          current = this.getHash(this.iframe.contentWindow);\r\n        }\r\n  \r\n        if (current === this.fragment) return false;\r\n        if (this.iframe) this.navigate(current);\r\n        this.loadUrl();\r\n      },\r\n  \r\n      // Attempt to load the current URL fragment. If a route succeeds with a\r\n      // match, returns `true`. If no defined routes matches the fragment,\r\n      // returns `false`.\r\n      loadUrl: function(fragment) {\r\n        // If the root doesn't match, no routes can match either.\r\n        if (!this.matchRoot()) return false;\r\n        fragment = this.fragment = this.getFragment(fragment);\r\n        return _.some(this.handlers, function(handler) {\r\n          if (handler.route.test(fragment)) {\r\n            handler.callback(fragment);\r\n            return true;\r\n          }\r\n        });\r\n      },\r\n  \r\n      // Save a fragment into the hash history, or replace the URL state if the\r\n      // 'replace' option is passed. You are responsible for properly URL-encoding\r\n      // the fragment in advance.\r\n      //\r\n      // The options object can contain `trigger: true` if you wish to have the\r\n      // route callback be fired (not usually desirable), or `replace: true`, if\r\n      // you wish to modify the current URL without adding an entry to the history.\r\n      navigate: function(fragment, options) {\r\n        if (!History.started) return false;\r\n        if (!options || options === true) options = {trigger: !!options};\r\n  \r\n        // Normalize the fragment.\r\n        fragment = this.getFragment(fragment || '');\r\n  \r\n        // Don't include a trailing slash on the root.\r\n        var rootPath = this.root;\r\n        if (fragment === '' || fragment.charAt(0) === '?') {\r\n          rootPath = rootPath.slice(0, -1) || '/';\r\n        }\r\n        var url = rootPath + fragment;\r\n  \r\n        // Strip the fragment of the query and hash for matching.\r\n        fragment = fragment.replace(pathStripper, '');\r\n  \r\n        // Decode for matching.\r\n        var decodedFragment = this.decodeFragment(fragment);\r\n  \r\n        if (this.fragment === decodedFragment) return;\r\n        this.fragment = decodedFragment;\r\n  \r\n        // If pushState is available, we use it to set the fragment as a real URL.\r\n        if (this._usePushState) {\r\n          this.history[options.replace ? 'replaceState' : 'pushState']({}, document.title, url);\r\n  \r\n        // If hash changes haven't been explicitly disabled, update the hash\r\n        // fragment to store history.\r\n        } else if (this._wantsHashChange) {\r\n          this._updateHash(this.location, fragment, options.replace);\r\n          if (this.iframe && fragment !== this.getHash(this.iframe.contentWindow)) {\r\n            var iWindow = this.iframe.contentWindow;\r\n  \r\n            // Opening and closing the iframe tricks IE7 and earlier to push a\r\n            // history entry on hash-tag change.  When replace is true, we don't\r\n            // want this.\r\n            if (!options.replace) {\r\n              iWindow.document.open();\r\n              iWindow.document.close();\r\n            }\r\n  \r\n            this._updateHash(iWindow.location, fragment, options.replace);\r\n          }\r\n  \r\n        // If you've told us that you explicitly don't want fallback hashchange-\r\n        // based history, then `navigate` becomes a page refresh.\r\n        } else {\r\n          return this.location.assign(url);\r\n        }\r\n        if (options.trigger) return this.loadUrl(fragment);\r\n      },\r\n  \r\n      // Update the hash location, either replacing the current entry, or adding\r\n      // a new one to the browser history.\r\n      _updateHash: function(location, fragment, replace) {\r\n        if (replace) {\r\n          var href = location.href.replace(/(javascript:|#).*$/, '');\r\n          location.replace(href + '#' + fragment);\r\n        } else {\r\n          // Some browsers require that `hash` contains a leading #.\r\n          location.hash = '#' + fragment;\r\n        }\r\n      }\r\n  \r\n    });\r\n  \r\n    // Create the default Backbone.history.\r\n    Backbone.history = new History;\r\n  \r\n    // Helpers\r\n    // -------\r\n  \r\n    // Helper function to correctly set up the prototype chain for subclasses.\r\n    // Similar to `goog.inherits`, but uses a hash of prototype properties and\r\n    // class properties to be extended.\r\n    var extend = function(protoProps, staticProps) {\r\n      var parent = this;\r\n      var child;\r\n  \r\n      // The constructor function for the new subclass is either defined by you\r\n      // (the \"constructor\" property in your `extend` definition), or defaulted\r\n      // by us to simply call the parent constructor.\r\n      if (protoProps && _.has(protoProps, 'constructor')) {\r\n        child = protoProps.constructor;\r\n      } else {\r\n        child = function(){ return parent.apply(this, arguments); };\r\n      }\r\n  \r\n      // Add static properties to the constructor function, if supplied.\r\n      _.extend(child, parent, staticProps);\r\n  \r\n      // Set the prototype chain to inherit from `parent`, without calling\r\n      // `parent`'s constructor function and add the prototype properties.\r\n      child.prototype = _.create(parent.prototype, protoProps);\r\n      child.prototype.constructor = child;\r\n  \r\n      // Set a convenience property in case the parent's prototype is needed\r\n      // later.\r\n      child.__super__ = parent.prototype;\r\n  \r\n      return child;\r\n    };\r\n  \r\n    // Set up inheritance for the model, collection, router, view and history.\r\n    Model.extend = Collection.extend = Router.extend = View.extend = History.extend = extend;\r\n  \r\n    // Throw an error when a URL is needed, and none is supplied.\r\n    var urlError = function() {\r\n      throw new Error('A \"url\" property or function must be specified');\r\n    };\r\n  \r\n    // Wrap an optional error callback with a fallback error event.\r\n    var wrapError = function(model, options) {\r\n      var error = options.error;\r\n      options.error = function(resp) {\r\n        if (error) error.call(options.context, model, resp, options);\r\n        model.trigger('error', model, resp, options);\r\n      };\r\n    };\r\n  \r\n    return Backbone;\r\n  });\r\n\r\n\r\n\r\n}\r\n\r\n\n\n//# sourceURL=webpack://webix/./src/js/modules/expalib.js?");

/***/ }),

/***/ "./src/js/modules/header.js":
/*!**********************************!*\
  !*** ./src/js/modules/header.js ***!
  \**********************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"header\": () => (/* binding */ header),\n/* harmony export */   \"typeTable\": () => (/* binding */ typeTable),\n/* harmony export */   \"headerContextId\": () => (/* binding */ headerContextId),\n/* harmony export */   \"userLocation\": () => (/* binding */ userLocation)\n/* harmony export */ });\n/* harmony import */ var _setId_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./setId.js */ \"./src/js/modules/setId.js\");\n/* harmony import */ var _editTableForm_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./editTableForm.js */ \"./src/js/modules/editTableForm.js\");\n/* harmony import */ var _sidebar_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./sidebar.js */ \"./src/js/modules/sidebar.js\");\n/* harmony import */ var _login_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./login.js */ \"./src/js/modules/login.js\");\n/* harmony import */ var _userSettings_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./userSettings.js */ \"./src/js/modules/userSettings.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nlet userLocation;\r\n\r\nfunction typeTable (type,columnsData, id){\r\n    $$(type).refreshColumns(columnsData);\r\n    webix.ajax().get(\"/init/default/api/\"+id,{\r\n        success:function(text, data, XmlHttpRequest){\r\n            \r\n            if(!($$(_setId_js__WEBPACK_IMPORTED_MODULE_0__.newAddBtnId).isEnabled())){\r\n                $$(_setId_js__WEBPACK_IMPORTED_MODULE_0__.newAddBtnId).enable();\r\n            }\r\n\r\n            // $$(type).showProgress({\r\n            //     type:\"bottom\",\r\n            //     hide:true\r\n            // });\r\n\r\n            data = data.json().content;\r\n            \r\n            if (data.length !== 0){\r\n                \r\n                $$(type).hideOverlay(\"Ничего не найдено\");\r\n                $$(type).parse(data);\r\n        \r\n            \r\n            } else {\r\n                $$(type).showOverlay(\"Ничего не найдено\");\r\n            }\r\n        \r\n            let countRows = $$(type).count();\r\n            $$(_setId_js__WEBPACK_IMPORTED_MODULE_0__.findElementsId).setValues(countRows.toString());\r\n        \r\n        },\r\n        error:function(text, data, XmlHttpRequest){\r\n            (0,_editTableForm_js__WEBPACK_IMPORTED_MODULE_1__.notify) (\"error\",\"Ошибка при загрузке данных\",true);\r\n        }, \r\n    });\r\n}\r\n\r\n\r\nlet headerContextId ;\r\nfunction header() {\r\n    const header = {\r\n        view: \"toolbar\", \r\n        id: \"header\",\r\n        padding:10,\r\n        css:\"webix_header-style\",\r\n        elements: [\r\n            (0,_sidebar_js__WEBPACK_IMPORTED_MODULE_2__.headerSidebar)(),\r\n            {},\r\n            {view:\"search\", \r\n                placeholder:\"Поиск\", \r\n                css:\"searchTable\", \r\n                maxWidth:250, \r\n                minWidth:40, \r\n            },\r\n            {   view:\"button\",  \r\n                id:\"webix_log-btn\",\r\n                type:\"icon\", \r\n                icon:\"wxi-eye-slash\",\r\n                height:48,\r\n                width: 60,\r\n                css:\"webix_log-btn\",\r\n                on: {\r\n                    onAfterRender: function () {\r\n                        this.getInputNode().setAttribute(\"title\",\"Показать/скрыть системные сообщения\");\r\n                    }\r\n                },\r\n                click: function() {\r\n                    if ( this.config.icon ==\"wxi-eye-slash\"){\r\n                        $$(\"logLayout\").config.height = 5;\r\n                        $$(\"logLayout\").resize();\r\n                        this.config.icon =\"wxi-eye\";\r\n                        this.refresh();\r\n                        (0,_userSettings_js__WEBPACK_IMPORTED_MODULE_4__.setStorageData)(\"LogVisible\", JSON.stringify(\"hide\"));\r\n                    } else if (this.config.icon ==\"wxi-eye\"){\r\n                        $$(\"logLayout\").config.height = 90;\r\n                        $$(\"logLayout\").resize();\r\n                        this.config.icon =\"wxi-eye-slash\";\r\n                        this.refresh();\r\n                        (0,_userSettings_js__WEBPACK_IMPORTED_MODULE_4__.setStorageData)(\"LogVisible\", JSON.stringify(\"show\"));\r\n                    }\r\n                }\r\n            },\r\n\r\n            {   view:\"button\",\r\n                id:\"button-context-menu\",\r\n                type:\"icon\",\r\n                disabled:true,\r\n                icon: 'wxi-user',\r\n                height:48,\r\n                width: 60,\r\n                popup: {\r\n                    view: 'contextmenu',\r\n                    id:\"contextmenu\",\r\n                    css:\"webix_contextmenu\",\r\n                    data: [],\r\n                    on:{\r\n                        onItemClick:function(id, e, node){\r\n\r\n                            if (id==\"logout\"){\r\n                                if($$(_setId_js__WEBPACK_IMPORTED_MODULE_0__.editFormId) && $$(_setId_js__WEBPACK_IMPORTED_MODULE_0__.editFormId).isDirty() ||$$(\"cp-form\") && $$(\"cp-form\").isDirty()){\r\n                                    (0,_editTableForm_js__WEBPACK_IMPORTED_MODULE_1__.checkFormSaved)().then(function(result){\r\n                                        if(result){\r\n                                            window.location.replace(\"#logout\");\r\n                                        }\r\n                                    });\r\n                                    return false;\r\n                                } else {\r\n                                    window.location.replace(\"#logout\");\r\n                                }\r\n                            }\r\n\r\n                            // headerContextId = id;\r\n                            // webix.ajax().get(\"/init/default/api/fields.json\").then(function (data){\r\n                            //     data = data.json().content;\r\n                            //     console.log(id)\r\n\r\n                            //     let currentFields;\r\n                            //     if(data[id]){\r\n                            //         currentFields=data[id];\r\n                            //     }\r\n                                \r\n                            //     let dataFields = currentFields.fields;\r\n                            //     console.log()\r\n                            //     let obj = Object.keys(dataFields);\r\n                            //     let columnsData = [];\r\n                               \r\n                            //     obj.forEach(function(data) {\r\n                            //         if (dataFields[data].type == \"datetime\"){\r\n                            //             dataFields[data].format = webix.i18n.fullDateFormatStr;\r\n                            //         }\r\n                            //         dataFields[data].id = data;\r\n                            //         dataFields[data].fillspace = true;\r\n                            //         dataFields[data].header= dataFields[data][\"label\"];\r\n                            //         if(dataFields[data].id == \"id\"){\r\n                            //             dataFields[data].hidden = true;\r\n                            //         }\r\n                            //         columnsData.push(dataFields[data]);\r\n                            //     });\r\n\r\n                            //     if (data[id].type==\"dbtable\"){\r\n                            //         typeTable (tableId,columnsData, id);\r\n    \r\n                            //     } else if (data[id].type==\"tform\"){\r\n                            //         typeTable (tableIdView,columnsData, id);\r\n                            //     }\r\n\r\n                            // }).catch(err => {\r\n                            //     console.log(err);\r\n                            //     notify (\"error\",\"Не удалось загрузить данные меню\",true);\r\n                            // });\r\n \r\n                        }\r\n                    }\r\n                },\r\n                on:{\r\n                    onItemClick:function(){\r\n                        userLocation = window.location.href;\r\n                        let url = userLocation.search(\"#\");\r\n                        userLocation = userLocation.slice(url);\r\n                        if (userLocation !== \"#content\" || userLocation !== \"#\"){\r\n                            let tableIdHref = userLocation.slice(userLocation.lastIndexOf('/')+1); \r\n                            let nameRecoverEl;\r\n                            let storageData;\r\n                            _login_js__WEBPACK_IMPORTED_MODULE_3__.tableNames.forEach(function(el,i){\r\n                                if (el.id == tableIdHref){\r\n                                    nameRecoverEl= el.name;\r\n                                }\r\n                            });\r\n                            if (nameRecoverEl !== undefined){\r\n                                storageData= {tableName:nameRecoverEl,tableId:tableIdHref,href:userLocation};\r\n                                (0,_userSettings_js__WEBPACK_IMPORTED_MODULE_4__.setStorageData) (\"userLocation\", JSON.stringify(storageData));\r\n                            }\r\n                            \r\n                        }\r\n                        \r\n                    }\r\n                }\r\n            },\r\n\r\n        ]\r\n    };\r\n\r\n    return header;\r\n\r\n}\r\n\r\n\n\n//# sourceURL=webpack://webix/./src/js/modules/header.js?");

/***/ }),

/***/ "./src/js/modules/logBlock.js":
/*!************************************!*\
  !*** ./src/js/modules/logBlock.js ***!
  \************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"logBlock\": () => (/* binding */ logBlock),\n/* harmony export */   \"logLayout\": () => (/* binding */ logLayout),\n/* harmony export */   \"setLogValue\": () => (/* binding */ setLogValue)\n/* harmony export */ });\n/* harmony import */ var _sidebar_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./sidebar.js */ \"./src/js/modules/sidebar.js\");\n/* harmony import */ var _login_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./login.js */ \"./src/js/modules/login.js\");\n\r\n\r\n\r\nfunction setLogValue (typeNotify,notifyText) {\r\n    const date = new Date();\r\n    let day = date.getDate();\r\n    let month = String(date.getMonth() + 1).padStart(2, '0');\r\n    let year = date.getFullYear();\r\n    let hours = date.getHours();\r\n    let minutes =String( date.getMinutes()).padStart(2, '0');;\r\n    let currentDate = `${day}.${month}.${year} ${hours}:${minutes}`;\r\n\r\n \r\n    if (_sidebar_js__WEBPACK_IMPORTED_MODULE_0__.itemTreeId){\r\n\r\n        let srcTable;\r\n        _login_js__WEBPACK_IMPORTED_MODULE_1__.tableNames.forEach(function(el,i){\r\n            if (el.id == _sidebar_js__WEBPACK_IMPORTED_MODULE_0__.itemTreeId){\r\n               \r\n                srcTable= el.name;\r\n            }\r\n        });\r\n\r\n        $$(\"logBlock-list\").add({\r\n            date:currentDate,\r\n            value:notifyText,\r\n            src:srcTable\r\n        });\r\n\r\n    } else {\r\n        $$(\"logBlock-list\").add({\r\n            date:currentDate,\r\n            value:notifyText,\r\n            src:\"Expa v1.0.7\"\r\n        });\r\n    }\r\n\r\n    let itemListIndex;\r\n    \r\n    // document.querySelectorAll(\".webix_list_item\").forEach(function(el,i){\r\n    //     itemListIndex = i;\r\n    // });\r\n    \r\n    let blockContainer = document.querySelector(\".webix_log-block\");\r\n    if (blockContainer){\r\n        blockContainer.querySelectorAll(\".webix_list_item\").forEach(function(el,i){\r\n            itemListIndex = i;\r\n        });\r\n    }\r\n    \r\n    let item = document.querySelectorAll(\".webix_list_item\")[itemListIndex];\r\n    if (typeNotify == \"error\"){\r\n        item.style.setProperty('color', 'red', 'important');\r\n    }\r\n    \r\n}\r\n\r\nconst logBlock = {\r\n    id:\"logBlock-list\",\r\n    css:\"webix_log-block\",\r\n    view:\"list\",\r\n    template:\"#date# — #value#  (Источник: #src#)\",\r\n    data:[],\r\n    on: {\r\n        onAfterLoad:function(){\r\n            setLogValue (\"success\",\"Интерфейс загружен\")\r\n        }\r\n    }\r\n};\r\n\r\nconst logLayout = {\r\n    id:\"logLayout\",height:80,rows:[\r\n        {template:\"<div class='webix_log-headline'>Системные сообщения</div>\", height:30},\r\n        logBlock\r\n    ]\r\n};\r\n\r\n\n\n//# sourceURL=webpack://webix/./src/js/modules/logBlock.js?");

/***/ }),

/***/ "./src/js/modules/login.js":
/*!*********************************!*\
  !*** ./src/js/modules/login.js ***!
  \*********************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"login\": () => (/* binding */ login),\n/* harmony export */   \"createElements\": () => (/* binding */ createElements),\n/* harmony export */   \"removeElements\": () => (/* binding */ removeElements),\n/* harmony export */   \"tableNames\": () => (/* binding */ tableNames)\n/* harmony export */ });\n/* harmony import */ var _editTableForm_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./editTableForm.js */ \"./src/js/modules/editTableForm.js\");\n/* harmony import */ var _setId_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./setId.js */ \"./src/js/modules/setId.js\");\n/* harmony import */ var _expalib_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./expalib.js */ \"./src/js/modules/expalib.js\");\n/* harmony import */ var _treeItems_dashboardView_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../treeItems/dashboardView.js */ \"./src/js/treeItems/dashboardView.js\");\n/* harmony import */ var _treeItems_tableTemplate_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../treeItems/tableTemplate.js */ \"./src/js/treeItems/tableTemplate.js\");\n/* harmony import */ var _treeItems_authItems_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../treeItems/authItems.js */ \"./src/js/treeItems/authItems.js\");\n/* harmony import */ var _treeItems_userprefsItems_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../treeItems/userprefsItems.js */ \"./src/js/treeItems/userprefsItems.js\");\n/* harmony import */ var _viewPropertyTable_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./viewPropertyTable.js */ \"./src/js/modules/viewPropertyTable.js\");\n\r\n\r\n\r\n\r\n(0,_expalib_js__WEBPACK_IMPORTED_MODULE_2__.lib) ();\r\n\r\n// tree elements\r\n\r\n\r\n\r\n\r\n\r\n// other blocks\r\n\r\n\r\n\r\n\r\n\r\nlet tableNames = [];\r\nlet userInfo=[];\r\n\r\nfunction createElements(specificElement){\r\n\r\n    $$(\"container\").addView(\r\n        {id:\"tables\", hidden:true, view:\"scrollview\", body: { view:\"flexlayout\", cols:[\r\n                                        \r\n            {   id:\"tableContainer\",\r\n                    rows:[\r\n                        (0,_treeItems_tableTemplate_js__WEBPACK_IMPORTED_MODULE_4__.tableToolbar)( _setId_js__WEBPACK_IMPORTED_MODULE_1__.searchId, _setId_js__WEBPACK_IMPORTED_MODULE_1__.exportBtn, _setId_js__WEBPACK_IMPORTED_MODULE_1__.findElementsId, _setId_js__WEBPACK_IMPORTED_MODULE_1__.tableId ),\r\n                        { view:\"resizer\",class:\"webix_resizers\",},\r\n                        (0,_treeItems_tableTemplate_js__WEBPACK_IMPORTED_MODULE_4__.table) (_setId_js__WEBPACK_IMPORTED_MODULE_1__.tableId, _treeItems_tableTemplate_js__WEBPACK_IMPORTED_MODULE_4__.onFuncTable,true)\r\n                    ]\r\n                },\r\n            \r\n                {  view:\"resizer\",class:\"webix_resizers\",},\r\n                \r\n                _editTableForm_js__WEBPACK_IMPORTED_MODULE_0__.editTableBar,]\r\n            }\r\n        \r\n        },\r\n    3);\r\n    \r\n  \r\n    $$(\"container\").addView(\r\n        {view:\"layout\",id:\"dashboards\", hidden:true, scroll:\"auto\",\r\n            rows: (0,_treeItems_dashboardView_js__WEBPACK_IMPORTED_MODULE_3__.dashboardLayout)()\r\n        },\r\n    4);\r\n\r\n\r\n    $$(\"container\").addView(\r\n        {view:\"layout\",id:\"forms\", css:\"webix_tableView\",hidden:true, \r\n                                    \r\n            rows:[\r\n                (0,_treeItems_tableTemplate_js__WEBPACK_IMPORTED_MODULE_4__.tableToolbar)(_setId_js__WEBPACK_IMPORTED_MODULE_1__.searchIdView, _setId_js__WEBPACK_IMPORTED_MODULE_1__.exportBtnView, _setId_js__WEBPACK_IMPORTED_MODULE_1__.findElementsIdView, _setId_js__WEBPACK_IMPORTED_MODULE_1__.tableIdView, true ),\r\n                { view:\"resizer\",class:\"webix_resizers\",},\r\n                \r\n                {view:\"scrollview\", body:  \r\n                \r\n                {view:\"flexlayout\",cols:[\r\n                    (0,_treeItems_tableTemplate_js__WEBPACK_IMPORTED_MODULE_4__.table) (_setId_js__WEBPACK_IMPORTED_MODULE_1__.tableIdView),\r\n                    { view:\"resizer\",class:\"webix_resizers\", id:\"propResize\", hidden:true},\r\n                    (0,_viewPropertyTable_js__WEBPACK_IMPORTED_MODULE_7__.propertyTemplate)(\"propTableView\")\r\n                ]}}, \r\n            ],\r\n\r\n            \r\n        },\r\n    5);\r\n   \r\n    if (specificElement == \"cp\"){\r\n        $$(\"container\").addView(\r\n            {view:\"layout\",id:\"user_auth\", css:\"webix_auth\",hidden:true, \r\n                rows:[\r\n                    _treeItems_authItems_js__WEBPACK_IMPORTED_MODULE_5__.authCpLayout,\r\n                    {}\r\n                ],\r\n            }, \r\n        6);\r\n    }\r\n\r\n    if (specificElement == \"userprefs\"){\r\n        $$(\"container\").addView(\r\n            {view:\"layout\",id:\"userprefs\", css:\"webix_auth\",hidden:true, \r\n                rows:[\r\n                    _treeItems_userprefsItems_js__WEBPACK_IMPORTED_MODULE_6__.userprefsLayout,\r\n                    {}\r\n                ],\r\n            }, \r\n        6);\r\n    }\r\n    \r\n\r\n}\r\n\r\nfunction removeElements(){\r\n    if ($$(\"tables\")){\r\n        $$(\"container\").removeView($$(\"tables\"));\r\n    }\r\n    if ($$(\"dashboards\")){\r\n        $$(\"container\").removeView($$(\"dashboards\"));\r\n    }\r\n    if ($$(\"forms\")){\r\n        $$(\"container\").removeView($$(\"forms\"));\r\n    }\r\n    if ($$(\"user_auth\")){\r\n        $$(\"container\").removeView($$(\"user_auth\"));\r\n    }\r\n}\r\n\r\nfunction getDataFields (routes, menuItem){\r\n   return  webix.ajax(\"/init/default/api/whoami\",{\r\n        success:function(text, data, XmlHttpRequest){\r\n            $$(\"userAuth\").hide();\r\n            $$(\"mainLayout\").show();\r\n            userInfo.push(data.json().content.first_name, data.json().content.username)\r\n\r\n            createElements();\r\n            webix.ajax().get(\"/init/default/api/fields.json\",false).then(function (data) {\r\n                $$(\"tree\").unselectAll();\r\n                let srcTree = data.json().content;\r\n\r\n                let obj = Object.keys(srcTree);\r\n\r\n                let dataChilds = {tables:[], forms:[], dashboards:[]};\r\n\r\n                obj.forEach(function(data) {\r\n                    \r\n                    if (srcTree[data].type == \"dbtable\"){\r\n                        if(srcTree[data].plural){\r\n                            dataChilds.tables.push({\"id\":data, \"value\":srcTree[data].plural, \"type\":srcTree[data].type});\r\n                            tableNames.push({name:srcTree[data].plural , id:data});\r\n                        } else if (srcTree[data].singular) {\r\n                            dataChilds.tables.push({\"id\":data, \"value\":srcTree[data].singular, \"type\":srcTree[data].type});\r\n                            tableNames.push({name:srcTree[data].singular , id:data});\r\n                        }\r\n    \r\n                    } else if (srcTree[data].type == \"tform\"){\r\n                        if(srcTree[data].plural){\r\n                            dataChilds.forms.push({\"id\":data, \"value\":srcTree[data].plural, \"type\":srcTree[data].type});\r\n                            tableNames.push({name:srcTree[data].plural , id:data}); \r\n                        }else if (srcTree[data].singular) {\r\n                            dataChilds.forms.push({\"id\":data, \"value\":srcTree[data].singular, \"type\":srcTree[data].type});\r\n                            tableNames.push({name:srcTree[data].singular , id:data}); \r\n    \r\n                        }\r\n                    }  else if (srcTree[data].type == \"dashboard\" ){\r\n                   \r\n                        if(srcTree[data].plural){\r\n                            dataChilds.dashboards.push({\"id\":data, \"value\":srcTree[data].plural, \"type\":srcTree[data].type});\r\n                            tableNames.push({name:srcTree[data].plural , id:data}); \r\n                        }else if (srcTree[data].singular) {\r\n                            dataChilds.dashboards.push({\"id\":data, \"value\":srcTree[data].singular, \"type\":srcTree[data].type});\r\n                            tableNames.push({name:srcTree[data].singular , id:data}); \r\n    \r\n                        }\r\n                    }   \r\n                    \r\n                });\r\n    \r\n    \r\n                webix.ajax().get(\"/init/default/api/mmenu.json\").then(function (data) {\r\n\r\n                    let menu = data.json().mmenu;\r\n                    let menuTree = [];\r\n               \r\n                    menu.push({\r\n                        \"id\": 7,\r\n                        \"name\": \"sales\",\r\n                        \"title\": \"sales\",\r\n                        \"mtype\": 1,\r\n                        \"ltype\": 1,\r\n                        \"typeof\":\"dashboard\",\r\n                        \"action\": \"all_aa\",\r\n                        \"childs\": []\r\n                    });\r\n\r\n                    let dataAuth=[];\r\n                    let dataNotAuth=[];\r\n                    menu.forEach(function(el,i){\r\n                       \r\n                        if (el.name == \"user_auth\" || el.name==\"userprefs\" ){\r\n                            if (el.childs.length > 0){\r\n                                el.childs.forEach(function(child,i){\r\n                                        if(child.name == \"login\"){\r\n                                            dataNotAuth.push({id:child.name,value:child.title, href:\"#\"+child.name });\r\n                                        }else if (child.name !== \"logout\") {\r\n                                         dataAuth.push({id:child.name,value:child.title, href:\"#\"+child.name });\r\n                                        }\r\n                                        tableNames.push({name:child.title , id:child.name}); \r\n                                });\r\n                                el.childs.forEach(function(child,i){\r\n                                    if (child.name == \"logout\") {\r\n                                     dataAuth.push({id:child.name,value:child.title, css:\"webix_logout\" });\r\n                                    }\r\n                                    tableNames.push({name:child.title , id:child.name}); \r\n                                });\r\n                            } \r\n                            \r\n                            if (el.childs.length <= 0){\r\n                                dataAuth.push({id:el.name, value:el.title, href:\"#\"+el.name });\r\n                            }\r\n\r\n\r\n                        } else {\r\n                       \r\n                            if (el.childs.length > 0){\r\n                                dataChilds[el.name]=[];\r\n                                el.childs.forEach(function(child,i){\r\n                                    dataChilds[el.name].push({id:child.name, value:child.title });\r\n                                    tableNames.push({name:child.title , id:child.name}); \r\n                                });\r\n                            }\r\n        \r\n                            if (el.name.includes(\"delim\")){\r\n                            } else {\r\n                                let singleItem;\r\n                                obj.forEach(function(data) {\r\n                                    if (data==el.name){\r\n                                        singleItem = el.title;\r\n                                        menuTree.push({id:el.name+\"-single\", value:el.title, typeof:srcTree[data].type});\r\n                                    }\r\n                                });\r\n                                if (!singleItem){\r\n                                    if (el.title){\r\n                                        if (el.typeof){\r\n                                            menuTree.push({id:el.name, value:el.title,typeof:el.typeof, data:dataChilds[el.name]});\r\n                                        }else {\r\n                                            menuTree.push({id:el.name, value:el.title, data:dataChilds[el.name]});\r\n                                        }\r\n                                        \r\n                                    \r\n                                    } else {\r\n                                        menuTree.push({id:el.name, value:\"Без названия\", data:dataChilds[el.name]});\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                    });\r\n\r\n                    $$(\"tree\").clearAll();\r\n                   \r\n                    $$(\"tree\").parse(menuTree);\r\n                    $$(\"button-context-menu\").config.popup.data = dataAuth;\r\n                    $$(\"button-context-menu\").enable();\r\n                }).catch(err => {\r\n                    console.log(err);\r\n                    (0,_editTableForm_js__WEBPACK_IMPORTED_MODULE_0__.notify) (\"error\",\"Не удалось загрузить данные меню\",true);\r\n                 });\r\n\r\n                \r\n                $$(\"tree\").attachEvent(\"onAfterSelect\", function (id) {\r\n                    routes.navigate(\"tree/\"+id, { trigger:true }); \r\n                });\r\n\r\n                \r\n                if (menuItem == \"userprefs\"){\r\n                }\r\n \r\n            }).catch(err => {\r\n               console.log(err);\r\n               (0,_editTableForm_js__WEBPACK_IMPORTED_MODULE_0__.notify) (\"error\",\"Не удалось загрузить данные меню\",true);\r\n            });\r\n        },\r\n        error:function(text, data, XmlHttpRequest){\r\n            routes.navigate(\"\", { trigger:true});\r\n        }\r\n    });\r\n}\r\n\r\n\r\n\r\nfunction hideAllElements (){\r\n    $$(\"container\").getChildViews().forEach(function(el,i){\r\n            if(el.config.view==\"scrollview\"|| el.config.view==\"layout\"){\r\n\r\n                if ($$(el.config.id).isVisible()){\r\n                    $$(el.config.id).hide();\r\n                }\r\n\r\n            }\r\n    });\r\n}\r\n\r\n\r\nfunction login () {\r\n   \r\n    let routes = new (Backbone.Router.extend({\r\n    routes:{\r\n        \"\": \"index\" ,\r\n        \"content\": \"content\", \r\n        \"userprefs\": \"userprefs\",\r\n        \"cp\": \"cp\",\r\n        \"logout\": \"logout\",\r\n        \"tree/:id\": \"tree\",\r\n    },\r\n  \r\n    content:function(){\r\n\r\n        getDataFields (routes);\r\n        \r\n        let userLocation = webix.storage.local.get(\"userLocation\");\r\n\r\n        if (userLocation){\r\n\r\n            if (userLocation.tableName !== undefined){\r\n\r\n                 setTimeout(function(){\r\n                    webix.ui({\r\n                        view:\"popup\",\r\n                        id:\"popupPrevHref\",\r\n                        css:\"webix_popup-prev-href\",\r\n                        width:340,\r\n                        height:150,\r\n                        position:\"center\",\r\n                        body:{\r\n                            rows: [ \r\n                                { cols:[\r\n                                {template:\"Прошлая сессия\", css:\"webix_template-recover\", borderless:true, height:40 },\r\n                                {},\r\n                                {\r\n                                    view:\"button\",\r\n                                    id:\"buttonClosePopup\",\r\n                                    css:\"webix_close-btn\",\r\n                                    type:\"icon\",\r\n                                    width:25,\r\n                                    icon: 'wxi-close',\r\n                                    click:function(){\r\n                                        $$(\"popupPrevHref\").hide();\r\n                                    }\r\n                                },\r\n                                ]},\r\n                                {   template:\"В прошлый раз Вы остановились во вкладке\"+\" «\"+userLocation.tableName+\"»\",\r\n                                    css:\"webix_template-recover-descr\", \r\n                                    borderless:true, \r\n                                    height:50 },\r\n                                {\r\n                                    view:\"button\",\r\n                                    id:\"btnRecover\",\r\n                                    css:\"webix_btn-recover\",\r\n                                    height:38,\r\n                                    value:\"Перейти ко вкладке\",\r\n                                    click:function(){\r\n                                        window.location.replace(userLocation.href)\r\n                                        \r\n                                        if(userLocation.href.includes(\"tree\")){\r\n                                            let treeItemParent = $$(\"tree\").getItem(userLocation.tableId).$parent;\r\n                                            if (treeItemParent !==0){\r\n                                                $$(\"tree\").open(treeItemParent);\r\n                                            }\r\n                                            $$(\"tree\").select(userLocation.tableId);\r\n                                        }\r\n                                        \r\n                                    $$(\"popupPrevHref\").hide();\r\n                                    }\r\n                                },\r\n                                {height:20}\r\n                            ]\r\n                            \r\n                        },\r\n\r\n                    }).show();\r\n                }, 1500);\r\n                \r\n            }\r\n       \r\n    }\r\n\r\n    },\r\n\r\n    index:function(){\r\n        webix.ajax(\"/init/default/api/whoami\",{\r\n            success:function(text, data, XmlHttpRequest){\r\n               routes.navigate(\"content\", { trigger:true});\r\n            },\r\n            error:function(text, data, XmlHttpRequest){\r\n                $$(\"mainLayout\").hide();\r\n                $$(\"userAuth\").show();\r\n            }\r\n        });      \r\n    }, \r\n    tree: function(id){\r\n\r\n        if ($$(\"tree\").data.order.length == 0){\r\n            getDataFields (routes);\r\n            let idTree = id;\r\n            \r\n            $$(\"tree\").attachEvent(\"onAfterLoad\", function (id) {\r\n                id = idTree;\r\n                let parentId = $$(\"tree\").getParentId(id);\r\n\r\n                $$(\"tree\").open(parentId);\r\n                $$(\"tree\").select(id);\r\n            });\r\n\r\n        }\r\n      \r\n\r\n    },\r\n    \r\n    cp: function(){\r\n        \r\n        if($$(\"webix__null-content\")){\r\n            $$(\"container\").removeView($$(\"webix__null-content\"));\r\n        }\r\n\r\n        hideAllElements ();\r\n\r\n\r\n        $$(\"webix__none-content\").hide();\r\n        if ($$(\"tree\").data.order.length == 0){\r\n            getDataFields (routes);\r\n        }\r\n\r\n        if($$(\"user_auth\")){\r\n            $$(\"user_auth\").show();\r\n        }else {\r\n            createElements(\"cp\");\r\n            $$(\"user_auth\").show();\r\n        }\r\n\r\n        $$(\"tree\").closeAll();\r\n     \r\n    },\r\n\r\n    userprefs: function(){\r\n        if($$(\"webix__null-content\")){\r\n            $$(\"container\").removeView($$(\"webix__null-content\"));\r\n        }\r\n       \r\n        hideAllElements ();\r\n\r\n        $$(\"webix__none-content\").hide();\r\n        if ($$(\"tree\").data.order.length == 0){\r\n            getDataFields (routes,\"userprefs\");\r\n        }\r\n\r\n        if($$(\"userprefs\")){\r\n            $$(\"userprefs\").show();\r\n        }else {\r\n            createElements(\"userprefs\");\r\n            $$(\"userprefs\").show();\r\n        }\r\n\r\n        $$(\"tree\").closeAll();\r\n     \r\n    },\r\n\r\n    logout: function (){\r\n\r\n        webix.ajax().post(\"/init/default/logout/\",{\r\n            success:function(text, data, XmlHttpRequest){\r\n                history.back();\r\n                removeElements();\r\n                $$(\"webix__none-content\").show();\r\n                $$(\"tree\").clearAll();\r\n                \r\n            },\r\n            error:function(text, data, XmlHttpRequest){\r\n                (0,_editTableForm_js__WEBPACK_IMPORTED_MODULE_0__.notify) (\"error\",\"Не удалось выполнить выход\",true);\r\n            }\r\n        });\r\n        \r\n    }\r\n\r\n    }));\r\n\r\n    function getLogin(){\r\n        $$(\"formAuth\").validate();\r\n        let userData = $$(\"formAuth\").getValues();\r\n        let loginData = [];\r\n    \r\n        loginData.push(\"un\"+\"=\"+userData.username);\r\n        loginData.push(\"np\"+\"=\"+userData.password);\r\n    \r\n        webix.ajax(\"/init/default/login\"+\"?\"+loginData.join(\"&\"),{\r\n            success:function(text, data, XmlHttpRequest){\r\n                webix.ajax(\"/init/default/api/whoami\",{\r\n                    success:function(text, data, XmlHttpRequest){\r\n                        routes.navigate(\"\");\r\n                        routes.navigate(\"content\", { trigger:true});\r\n                        $$('formAuth').clear();\r\n                        window.location.reload();\r\n                    },\r\n                    error:function(text, data, XmlHttpRequest){\r\n                        if ($$(\"formAuth\").isDirty()){\r\n                            (0,_editTableForm_js__WEBPACK_IMPORTED_MODULE_0__.notify) (\"error\",\"Неверный логин или пароль\");\r\n                        }\r\n                    }\r\n                });\r\n            },\r\n            error:function(text, data, XmlHttpRequest){\r\n            }\r\n        });\r\n\r\n    }\r\n    \r\n    \r\n    return {\r\n        view:\"form\",\r\n        id:\"formAuth\",\r\n        maxWidth: 300,\r\n        borderless:true,\r\n        elements: [\r\n            {view:\"text\", label:\"Логин\", name:\"username\",invalidMessage:\"Поле должно быть заполнено\"  },\r\n            {view:\"text\", label:\"Пароль\", name:\"password\",invalidMessage:\"Поле должно быть заполнено\",\r\n            type:\"password\"},\r\n            {view:\"button\", value: \"Войти\", css:\"webix_primary\",\r\n            hotkey: \"enter\", align:\"center\", click:getLogin}, \r\n        ],\r\n    \r\n        rules:{\r\n    \r\n            \"username\":webix.rules.isNotEmpty,\r\n            \"password\":webix.rules.isNotEmpty,\r\n    \r\n          },\r\n    \r\n    \r\n        elementsConfig:{\r\n            labelPosition:\"top\"\r\n        }\r\n    \r\n    };\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\n\n//# sourceURL=webpack://webix/./src/js/modules/login.js?");

/***/ }),

/***/ "./src/js/modules/resetTimer.js":
/*!**************************************!*\
  !*** ./src/js/modules/resetTimer.js ***!
  \**************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"resetTimer\": () => (/* binding */ resetTimer)\n/* harmony export */ });\n/* harmony import */ var _login_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./login.js */ \"./src/js/modules/login.js\");\n/* harmony import */ var _editTableForm_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./editTableForm.js */ \"./src/js/modules/editTableForm.js\");\n\r\n\r\n\r\nfunction resetTimer (){\r\n\r\n    var t;\r\n    window.onload = resetTimer;\r\n    window.onmousemove = resetTimer;\r\n    window.onmousedown = resetTimer;      \r\n    window.ontouchstart = resetTimer;\r\n    window.onclick = resetTimer;     \r\n    window.onkeypress = resetTimer;   \r\n    window.addEventListener('scroll', resetTimer, true); \r\n\r\n    function logout() {\r\n        webix.ajax().post(\"/init/default/logout/\",{\r\n            success:function(text, data, XmlHttpRequest){\r\n                history.back();\r\n                (0,_login_js__WEBPACK_IMPORTED_MODULE_0__.removeElements)();\r\n                $$(\"webix__none-content\").show();\r\n                $$(\"tree\").clearAll();\r\n                (0,_editTableForm_js__WEBPACK_IMPORTED_MODULE_1__.notify) (\"debug\",\"Превышено время бездействия\", false, -1);\r\n            },\r\n            error:function(text, data, XmlHttpRequest){\r\n                (0,_editTableForm_js__WEBPACK_IMPORTED_MODULE_1__.notify) (\"error\",\"Не удалось выполнить выход\",true);\r\n            }\r\n        });\r\n  \r\n    }\r\n\r\n    function resetTimer() {\r\n        clearTimeout(t);\r\n        t = setTimeout(logout, 600000); \r\n    };\r\n    \r\n}\n\n//# sourceURL=webpack://webix/./src/js/modules/resetTimer.js?");

/***/ }),

/***/ "./src/js/modules/setId.js":
/*!*********************************!*\
  !*** ./src/js/modules/setId.js ***!
  \*********************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"tableId\": () => (/* binding */ tableId),\n/* harmony export */   \"pagerId\": () => (/* binding */ pagerId),\n/* harmony export */   \"searchId\": () => (/* binding */ searchId),\n/* harmony export */   \"findElementsId\": () => (/* binding */ findElementsId),\n/* harmony export */   \"exportBtn\": () => (/* binding */ exportBtn),\n/* harmony export */   \"tableIdView\": () => (/* binding */ tableIdView),\n/* harmony export */   \"pagerIdView\": () => (/* binding */ pagerIdView),\n/* harmony export */   \"searchIdView\": () => (/* binding */ searchIdView),\n/* harmony export */   \"findElementsIdView\": () => (/* binding */ findElementsIdView),\n/* harmony export */   \"exportBtnView\": () => (/* binding */ exportBtnView),\n/* harmony export */   \"editFormId\": () => (/* binding */ editFormId),\n/* harmony export */   \"saveBtnId\": () => (/* binding */ saveBtnId),\n/* harmony export */   \"addBtnId\": () => (/* binding */ addBtnId),\n/* harmony export */   \"delBtnId\": () => (/* binding */ delBtnId),\n/* harmony export */   \"cleanBtnId\": () => (/* binding */ cleanBtnId),\n/* harmony export */   \"saveNewBtnId\": () => (/* binding */ saveNewBtnId),\n/* harmony export */   \"newAddBtnId\": () => (/* binding */ newAddBtnId),\n/* harmony export */   \"formId\": () => (/* binding */ formId),\n/* harmony export */   \"formIdView\": () => (/* binding */ formIdView)\n/* harmony export */ });\n\r\nlet tableId = \"table\";\r\nlet tableIdView = \"table-view\";\r\n\r\n//tooldarTable elements\r\nlet pagerId = tableId+\"-pager\";\r\nlet searchId = tableId+\"-search\";\r\nlet findElementsId = tableId+\"-findElemets\";\r\nlet exportBtn = tableId+\"exportBtn\";\r\n\r\nlet pagerIdView = tableIdView+\"-pager\";\r\nlet searchIdView = tableIdView+\"-search\";\r\nlet findElementsIdView = tableIdView+\"-findElemets\";\r\nlet exportBtnView = tableIdView+\"exportBtn\";\r\n\r\n//editTable elements\r\nlet editFormId = tableId+\"-editForm\";\r\nlet saveBtnId = tableId+\"-saveBtn\";\r\nlet addBtnId = tableId+\"-addBtn\";\r\nlet delBtnId = tableId+\"-delBtnId\";\r\nlet cleanBtnId = tableId+\"-cleanBtn\";\r\nlet saveNewBtnId = tableId+\"-saveNewBtn\";\r\nlet newAddBtnId = tableId+\"-newAddBtnId\";\r\n\r\n//form elements\r\nlet formId = tableId+\"-form\";\r\nlet formIdView = tableIdView+\"-form\";\r\n\r\n\r\n\n\n//# sourceURL=webpack://webix/./src/js/modules/setId.js?");

/***/ }),

/***/ "./src/js/modules/sidebar.js":
/*!***********************************!*\
  !*** ./src/js/modules/sidebar.js ***!
  \***********************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"headerSidebar\": () => (/* binding */ headerSidebar),\n/* harmony export */   \"treeSidebar\": () => (/* binding */ treeSidebar),\n/* harmony export */   \"getComboOptions\": () => (/* binding */ getComboOptions),\n/* harmony export */   \"itemTreeId\": () => (/* binding */ itemTreeId),\n/* harmony export */   \"inpObj\": () => (/* binding */ inpObj),\n/* harmony export */   \"customInputs\": () => (/* binding */ customInputs),\n/* harmony export */   \"urlFieldAction\": () => (/* binding */ urlFieldAction)\n/* harmony export */ });\n/* harmony import */ var _setId_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./setId.js */ \"./src/js/modules/setId.js\");\n/* harmony import */ var _editTableForm_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./editTableForm.js */ \"./src/js/modules/editTableForm.js\");\n/* harmony import */ var _login_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./login.js */ \"./src/js/modules/login.js\");\n\r\n// import {lib} from \"./expalib.js\";\r\n// lib ();\r\n\r\n\r\n\r\nlet itemTreeId = \"\";\r\nlet prevCountRows ;\r\nlet inpObj={};\r\nlet customInputs = [];\r\nlet urlFieldAction ;\r\nlet checkAction = false;\r\n\r\nfunction submitBtn (idElements, url, verb, rtype){\r\n   \r\n    let valuesArray = [];\r\n\r\n    if (verb==\"get\"){ \r\n\r\n        if(rtype==\"refresh\"){\r\n            idElements.forEach((el,i) => {\r\n                if (el.id.includes(\"customCombo\")){\r\n                    valuesArray.push(el.name+\"=\"+$$(el.id).getText());\r\n                } else if (el.id.includes(\"customInputs\")) {\r\n                    valuesArray.push(el.name+\"=\"+$$(el.id).getValue());\r\n                } else if (el.id.includes(\"customDatepicker\")) {\r\n                    valuesArray.push(el.name+\"=\"+$$(el.id).getValue());\r\n                }    \r\n            });\r\n\r\n            webix.ajax(url+\"?\"+valuesArray.join(\"&\"),{\r\n                success:function(text, data, XmlHttpRequest){\r\n                    $$(_setId_js__WEBPACK_IMPORTED_MODULE_0__.tableIdView).clearAll();\r\n                    data = data.json().content;\r\n                    if (data.length !== 0){\r\n                        $$(_setId_js__WEBPACK_IMPORTED_MODULE_0__.tableIdView).hideOverlay(\"Ничего не найдено\");\r\n                        $$(_setId_js__WEBPACK_IMPORTED_MODULE_0__.tableIdView).parse(data);\r\n                    } else {\r\n                        $$(_setId_js__WEBPACK_IMPORTED_MODULE_0__.tableIdView).showOverlay(\"Ничего не найдено\");\r\n                    }\r\n                    prevCountRows = $$(_setId_js__WEBPACK_IMPORTED_MODULE_0__.tableIdView).count();\r\n                    $$(_setId_js__WEBPACK_IMPORTED_MODULE_0__.findElementsIdView).setValues(prevCountRows.toString());\r\n                },\r\n                error:function(text, data, XmlHttpRequest){\r\n                    (0,_editTableForm_js__WEBPACK_IMPORTED_MODULE_1__.notify) (\"error\",\"Ошибка при загрузке данных\",true);\r\n                    if(!($$(_setId_js__WEBPACK_IMPORTED_MODULE_0__.newAddBtnId).isEnabled())){\r\n                        $$(_setId_js__WEBPACK_IMPORTED_MODULE_0__.newAddBtnId).enable();\r\n                    }\r\n                }\r\n            });\r\n\r\n\r\n        } else if (rtype==\"download\"){\r\n            webix.ajax().response(\"blob\").get(url, function(text, blob, xhr) {\r\n                webix.html.download(blob, \"table.docx\");\r\n            });\r\n        } \r\n    } else if (verb==\"post\"){\r\n        idElements.forEach((el,i) => {\r\n            if (el.id.includes(\"customUploader\")){\r\n                     $$(el.id).send(function(data){\r\n                        if (data.err_type == \"e\"){\r\n                            $$(_setId_js__WEBPACK_IMPORTED_MODULE_0__.tableIdView).parse($$(el.id).getValue())\r\n                            ;(0,_editTableForm_js__WEBPACK_IMPORTED_MODULE_1__.notify) (\"error\",data.err,true);\r\n                        } else if (data.err_type == \"i\"){\r\n                            (0,_editTableForm_js__WEBPACK_IMPORTED_MODULE_1__.notify) (\"success\",data.err,true);\r\n                            $$(_setId_js__WEBPACK_IMPORTED_MODULE_0__.tableIdView).refresh();\r\n                        } else if (data.err_type == \"x\"){\r\n                            (0,_editTableForm_js__WEBPACK_IMPORTED_MODULE_1__.notify) (\"debug\",data.err,true);\r\n                        }\r\n                     \r\n                    });\r\n            }\r\n        });\r\n        \r\n       \r\n    } \r\n    \r\n}\r\n\r\nfunction getComboOptions (refTable){\r\n    return new webix.DataCollection({url:{\r\n        $proxy:true,\r\n        load: function(){\r\n            return ( webix.ajax().get(\"/init/default/api/\"+refTable).then(function (data) {\r\n                \r\n                        data = data.json().content;\r\n                        let dataArray=[];\r\n                        let keyArray;\r\n                        data.forEach((el,i) =>{\r\n                            let l = 0;\r\n                            while (l <= Object.values(el).length){\r\n                                if (typeof Object.values(el)[l] == \"string\"){\r\n                                    keyArray = Object.keys(el)[l];\r\n                                    break;\r\n                                } \r\n                                l++;\r\n                            }\r\n\r\n                            if (el[keyArray] == undefined){\r\n\r\n                                while (l <= Object.values(el).length) {\r\n                                    if (typeof Object.values(el)[1] == \"number\"){\r\n                                        keyArray = Object.keys(el)[1];\r\n                                        break;\r\n                                    }\r\n                                    l++;\r\n                                }\r\n                            }\r\n                            dataArray.push({ \"id\":el.id, \"value\":el[keyArray]});\r\n                        });\r\n                        return dataArray;\r\n                    }).catch(err => {\r\n                        console.log(err);\r\n                        (0,_editTableForm_js__WEBPACK_IMPORTED_MODULE_1__.notify) (\"error\",\"Не удалось загрузить данные\",true);\r\n                    })\r\n            );\r\n            \r\n        }\r\n    }});\r\n}\r\n\r\nfunction getInfoTable (idCurrTable, idSearch, idsParam, idFindElem, single=false) {\r\n  \r\n    itemTreeId = idsParam;\r\n    let titem = $$(\"tree\").getItem(idsParam);\r\n    $$(idCurrTable).clearAll();\r\n    $$(idSearch).setValue(\"\");\r\n\r\n    \r\n    if (titem == undefined) {\r\n        (0,_editTableForm_js__WEBPACK_IMPORTED_MODULE_1__.notify) (\"error\",\"Данные не найдены\");\r\n    } else {\r\n        let inpObj;\r\n        if (idCurrTable == _setId_js__WEBPACK_IMPORTED_MODULE_0__.tableIdView){\r\n            ($$(\"filterBar\").removeView( \"customInputs\" ));\r\n        }\r\n        \r\n        webix.ajax().get(\"/init/default/api/fields.json\").then(function (data) {\r\n       \r\n// ---- Таблица - данные cols      \r\n            if (single){\r\n                let singleSearch = idsParam.search(\"-single\");\r\n                idsParam = idsParam.slice(0,singleSearch); \r\n            }\r\n          \r\n            data = data.json().content[idsParam];\r\n\r\n            let dataFields = data.fields;\r\n            let obj = Object.keys(data.fields);\r\n            let columnsData = [];\r\n\r\n            obj.forEach(function(data) {\r\n \r\n                if (dataFields[data].type.includes(\"reference\")){\r\n                    let findTableId = dataFields[data].type.slice(10);\r\n                    dataFields[data].editor = \"combo\";\r\n                    dataFields[data].collection = getComboOptions (findTableId);\r\n                    dataFields[data].template = function(obj, common, val, config){\r\n                    let item = config.collection.getItem(obj[config.id]);\r\n                    return item ? item.value : \"\";\r\n                    };\r\n                } else if (dataFields[data].type == \"datetime\"){\r\n                    dataFields[data].format = webix.i18n.fullDateFormatStr; \r\n                    dataFields[data].editor = \"date\";\r\n                } else {\r\n                    dataFields[data].editor = \"text\";\r\n                }\r\n                dataFields[data].id = data;\r\n                dataFields[data].fillspace = true;\r\n                dataFields[data].header= dataFields[data][\"label\"];\r\n                if(dataFields[data].id == \"id\"){\r\n                    dataFields[data].hidden = true;\r\n                }\r\n                \r\n                columnsData.push(dataFields[data]);\r\n            });\r\n            $$(idCurrTable).refreshColumns(columnsData);\r\n\r\n           \r\n\r\n\r\n// ---- Таблица - action detail у fields            \r\n\r\n            let idCol;\r\n            let actionKey;\r\n            checkAction = false;\r\n\r\n            columnsData.forEach(function(field,i){\r\n                if( field.type == \"action\" && data.actions[field.id].rtype == \"detail\"){\r\n                    checkAction = true;\r\n                    idCol = i;\r\n                    actionKey = field.id;\r\n                } \r\n            });\r\n            \r\n            if (actionKey !== undefined){\r\n                urlFieldAction = data.actions[actionKey].url;\r\n            \r\n                if (checkAction){\r\n                    let columns = $$(idCurrTable).config.columns;\r\n                    columns.splice(0,0,{ id:\"action-first\"+idCol, maxWidth:130, header:\"Подробнее\", template:\"<span class='webix_icon wxi-angle-down'></span> \"});\r\n                    $$(idCurrTable).refreshColumns();\r\n                }\r\n            }\r\n\r\n \r\n\r\n // -----  Array с кастомными полями\r\n            if (data.inputs){\r\n                let objInuts = Object.keys(data.inputs);\r\n                \r\n                let customInputs = [];\r\n                let idElements = [];\r\n            \r\n                let dataInputsArray = data.inputs;\r\n\r\n            \r\n                objInuts.forEach((el,i) => {\r\n                    if (dataInputsArray[el].type == \"string\"){\r\n                        customInputs.push(\r\n                        {   view:\"text\",\r\n                            placeholder:dataInputsArray[el].label, \r\n                            id: \"customInputs\"+i,\r\n                            maxWidth:300,\r\n                            minWidth:150,\r\n                            height:48,\r\n                            //label:dataInputsArray[el].label, \r\n                            labelPosition:\"top\",\r\n                            on: {\r\n                                onAfterRender: function () {\r\n                                    this.getInputNode().setAttribute(\"title\",dataInputsArray[el].comment);\r\n                                },\r\n                            }\r\n                        });\r\n                    } else if (dataInputsArray[el].type == \"apiselect\") {\r\n\r\n                        let optionData = new webix.DataCollection({url:{\r\n                            $proxy:true,\r\n                            load: function(){\r\n                                return ( webix.ajax().get(\"/init/default/api/\"+dataInputsArray[el].apiname).then(function (data) {   \r\n                                    let dataSrc = data.json().content;\r\n                                            \r\n                                            let dataOptions=[];\r\n                                            if (dataSrc[0].name !== undefined){\r\n                                                \r\n                                                dataSrc.forEach(function(data, i) {\r\n                                                    dataOptions.push( \r\n                                                        {id:i+1, value:data.name},\r\n                                                    );\r\n                                                });\r\n                                            \r\n                                            } else {\r\n                                                dataSrc.forEach(function (data, i) {\r\n                                                    dataOptions.push(\r\n                                                        { id: i + 1, value: data },\r\n                                                    );\r\n                                                });\r\n\r\n                                            }\r\n                                        \r\n                                            return dataOptions;\r\n                                        }).catch(err => {\r\n                                            console.log(err);\r\n                                            (0,_editTableForm_js__WEBPACK_IMPORTED_MODULE_1__.notify) (\"error\",\"Не удалось загрузить данные\",true);\r\n                                        })\r\n                                    );\r\n                                \r\n                            \r\n                                \r\n                            }\r\n                        }});\r\n\r\n\r\n                        customInputs.push(\r\n                            { view:\"combo\",\r\n                            width:250,\r\n                            height:48,\r\n                            id: \"customCombo\"+i,\r\n                            placeholder:dataInputsArray[el].label, \r\n                            labelPosition:\"top\", \r\n                            options:{\r\n                                data:optionData\r\n                            },\r\n                            on: {\r\n                                onAfterRender: function () {\r\n                                    this.getInputNode().setAttribute(\"title\",dataInputsArray[el].comment);\r\n                                },\r\n                            }               \r\n                        });\r\n\r\n                    } else if (dataInputsArray[el].type == \"submit\" || dataInputsArray[el].type == \"button\") {\r\n                        let actionType = dataInputsArray[el].action;\r\n                        let findAction = data.actions[actionType];\r\n\r\n                        if (findAction.verb == \"DELETE\" && actionType !== \"submit\"){\r\n                            let countCols = $$(idCurrTable).getColumns().length;\r\n                            let columns = $$(idCurrTable).config.columns;\r\n                            columns.splice(countCols,0,{ id:\"action\"+i, header:\"Действие\",maxWidth:100, template:\"{common.trashIcon()}\"});\r\n\r\n                            $$(idCurrTable).refreshColumns();\r\n                        } else if (findAction.verb == \"DELETE\") {\r\n                            customInputs.push(\r\n\r\n                                    {   view:\"button\", \r\n                                        id:\"customBtnDel\"+i,\r\n                                        css:\"webix_danger\", \r\n                                        type:\"icon\", \r\n                                        icon:\"wxi-trash\", \r\n                                        inputHeight:48,\r\n                                        height:48,\r\n                                        width:100,\r\n                                        value:dataInputsArray[el].label,\r\n                                        click:function (id) {\r\n                                            submitBtn(idElements,findAction.url,\"delete\");\r\n                                        },\r\n                                        on: {\r\n                                            onAfterRender: function () {\r\n                                                this.getInputNode().setAttribute(\"title\",dataInputsArray[el].comment);\r\n                                            },\r\n                                        },\r\n                                        \r\n                                        \r\n                                    }, \r\n\r\n                            );\r\n                        } else {\r\n                            customInputs.push(\r\n\r\n                                    {   view:\"button\", \r\n                                        css:\"webix_primary\", \r\n                                        id:\"customBtn\"+i,\r\n                                        inputHeight:48,\r\n                                        height:48, \r\n                                        minWidth:100,\r\n                                        maxWidth:550,\r\n                                        value:dataInputsArray[el].label,\r\n                                        click:function (id) {\r\n\r\n                                            if (findAction.verb== \"GET\"){\r\n                                                if ( findAction.rtype== \"refresh\") {\r\n                                                    submitBtn(idElements,findAction.url, \"get\", \"refresh\");\r\n                                                } else if (findAction.rtype== \"download\") {\r\n                                                    submitBtn(idElements,findAction.url, \"get\", \"download\");\r\n                                                }\r\n                                                \r\n                                            } else if (findAction.verb == \"POST\"){\r\n                                                submitBtn(idElements,findAction.url,\"post\");\r\n                                            \r\n                                            } \r\n                                            else if (findAction.verb == \"download\"){\r\n                                                submitBtn(idElements,findAction.url, \"get\", \"download\",id);\r\n                                            }\r\n                                        \r\n                                        },\r\n                                        on: {\r\n                                            onAfterRender: function () {\r\n                                                this.getInputNode().setAttribute(\"title\",dataInputsArray[el].comment);\r\n                                            },\r\n                                        },\r\n                                    }, \r\n                            );\r\n                        }\r\n                    } else if (dataInputsArray[el].type == \"upload\"){\r\n                        customInputs.push(\r\n                                {   view: \"uploader\", \r\n                                    value: \"Upload file\", \r\n                                    id:\"customUploader\"+i, \r\n                                    height:48,\r\n                                    autosend:false,\r\n                                    upload: data.actions.submit.url,\r\n                                    label:dataInputsArray[el].label, \r\n                                    labelPosition:\"top\",\r\n                                    on: {\r\n                                        onAfterRender: function () {\r\n                                            this.getInputNode().setAttribute(\"title\",dataInputsArray[el].comment);\r\n                                        },\r\n                                    }\r\n                                }\r\n                        );\r\n                    } else if (dataInputsArray[el].type == \"datetime\"){\r\n                        customInputs.push(\r\n                                {   view: \"datepicker\",\r\n                                    format: \"%d.%m.%Y %H:%i:%s\",\r\n                                    placeholder:dataInputsArray[el].label,  \r\n                                    id:\"customDatepicker\"+i, \r\n                                    timepicker: true,\r\n                                    labelPosition:\"top\",\r\n                                    width:300,\r\n                                    minWidth:100,\r\n                                    height:48,\r\n                                    on: {\r\n                                        onAfterRender: function () {\r\n                                            this.getInputNode().setAttribute(\"title\",dataInputsArray[el].comment);\r\n                                        },\r\n                                    }\r\n                                }\r\n                        );\r\n                    }else if (dataInputsArray[el].type == \"checkbox\"){\r\n                    \r\n                        customInputs.push(\r\n                                {   view:\"checkbox\", \r\n                                    id:\"customСheckbox\"+i, \r\n                                    minWidth:220,\r\n                                    css:\"webix_checkbox-style\",\r\n                                    labelRight:dataInputsArray[el].label, \r\n                                    on: {\r\n                                        onAfterRender: function () {\r\n                                            this.getInputNode().setAttribute(\"title\",dataInputsArray[el].comment);\r\n                                        },\r\n                                    }\r\n                                }\r\n                        );\r\n\r\n                    } \r\n                customInputs.push({width:10});\r\n                });\r\n                \r\n            \r\n\r\n                customInputs.forEach((el,i) => {\r\n                    if (el.id !== undefined){\r\n                        if (el.view==\"text\"){\r\n                            idElements.push({id:el.id, name:\"substr\"});\r\n                        } \r\n                        else if (el.view==\"combo\") {\r\n                            idElements.push({id:el.id, name:\"valtype\"});\r\n                        } else if (el.view==\"uploader\"){\r\n                            idElements.push({id:el.id});\r\n                        } else if (el.view==\"datepicker\"){\r\n                            idElements.push({id:el.id});\r\n                        }\r\n                    }\r\n\r\n                });\r\n            \r\n            \r\n                inpObj = {id:\"customInputs\",css:\"webix_custom-inp\", cols:customInputs};\r\n                \r\n                ($$(\"filterBar\").addView( inpObj,2));\r\n        }\r\n            \r\n         \r\n\r\n\r\n// ----- Таблица - получение данных rows\r\n\r\n            if (single){\r\n                itemTreeId = idsParam;\r\n            }\r\n\r\n            function getItemData (table){\r\n\r\n          \r\n\r\n                $$(table).load({\r\n                    $proxy:true,\r\n                    load:function(view, params){\r\n                        return   webix.ajax().get(\"/init/default/api/\"+itemTreeId,{\r\n                    success:function(text, data, XmlHttpRequest){\r\n                        $$(idCurrTable).clearAll();\r\n                        if(!($$(_setId_js__WEBPACK_IMPORTED_MODULE_0__.newAddBtnId).isEnabled())){\r\n                            $$(_setId_js__WEBPACK_IMPORTED_MODULE_0__.newAddBtnId).enable();\r\n                        }\r\n                       \r\n                        // $$(idCurrTable).showProgress({\r\n                        //     type:\"bottom\",\r\n                        //     hide:true\r\n                        // });\r\n        \r\n                        data = data.json().content;\r\n                        \r\n                  \r\n                        if (data.length !== 0){\r\n                            \r\n                            $$(idCurrTable).hideOverlay(\"Ничего не найдено\");\r\n                          \r\n                            $$(idCurrTable).parse(data);\r\n                    \r\n                        \r\n                        } else {\r\n                            $$(idCurrTable).showOverlay(\"Ничего не найдено\");\r\n                            $$(idCurrTable).clearAll();\r\n                        }\r\n                    \r\n                        prevCountRows = $$(idCurrTable).count();\r\n                        $$(idFindElem).setValues(prevCountRows.toString());\r\n                    \r\n                    },\r\n                    error:function(text, data, XmlHttpRequest){\r\n                        (0,_editTableForm_js__WEBPACK_IMPORTED_MODULE_1__.notify) (\"error\",\"Ошибка при загрузке данных\",true);\r\n                        prevCountRows = $$(idCurrTable).count();\r\n                        $$(idFindElem).setValues(prevCountRows.toString());\r\n                        if($$(_setId_js__WEBPACK_IMPORTED_MODULE_0__.newAddBtnId).isEnabled()){\r\n                            $$(_setId_js__WEBPACK_IMPORTED_MODULE_0__.newAddBtnId).disable();\r\n                        }\r\n                    }, \r\n                });     }\r\n            });\r\n            }\r\n\r\n            if($$(_setId_js__WEBPACK_IMPORTED_MODULE_0__.tableId)){\r\n                getItemData (_setId_js__WEBPACK_IMPORTED_MODULE_0__.tableId);\r\n            } else if ($$(_setId_js__WEBPACK_IMPORTED_MODULE_0__.tableIdView)){\r\n                getItemData (_setId_js__WEBPACK_IMPORTED_MODULE_0__.tableIdView);\r\n            }\r\n            \r\n            if (data.autorefresh){\r\n                setInterval(function(){\r\n                    getItemData ();\r\n                 }, 50000);\r\n            }\r\n        }).catch(err => {\r\n            console.log(err);\r\n            (0,_editTableForm_js__WEBPACK_IMPORTED_MODULE_1__.notify) (\"error\",\"Не удалось загрузить данные\",true);\r\n           \r\n        });\r\n    } \r\n}\r\n\r\n\r\n\r\nfunction getInfoDashboard (idsParam,single=false){\r\n    \r\n    function getAjax(url,inputsArray, action=false) {\r\n        webix.ajax().get(url, {\r\n            success:function(text, data, XmlHttpRequest){\r\n                let dashLayout=[];\r\n                let dataCharts = data.json().charts;\r\n                let titleTemplate = {};\r\n\r\n                if (dataCharts == undefined){\r\n\r\n                    $$(\"dashboardTool\").addView({\r\n                        view:\"scrollview\",\r\n                        id:\"dashboard-tool\",\r\n                        borderless:true,\r\n                        css:{\"margin\":\"20px!important\",\"height\":\"50px!important\"},\r\n                        body: {\r\n                            view:\"flexlayout\",\r\n                            rows:[]\r\n                        }\r\n                    },0);\r\n\r\n                    $$(\"dashboardTool\").addView({\r\n                        rows:[{\r\n                            template:\"\",\r\n                            id:\"dash-temlate\",\r\n                            css:\"webix_style-template-count webix_dash-title\",\r\n                            borderless:false,\r\n                            height:40,\r\n                        }]\r\n                    },1);\r\n    \r\n                    $$(\"dashboardBody\").addView({\r\n                        view:\"scrollview\", \r\n                        //height:300,  \r\n                        id:\"dashboard-charts\",\r\n                        borderless:true,\r\n                        body: {\r\n                            view:\"flexlayout\",\r\n                            cols:[]\r\n                        }\r\n                    },2);\r\n                    \r\n                    $$(\"dashboardBody\").removeView($$(\"dashEmpty\"));\r\n\r\n                    (0,_editTableForm_js__WEBPACK_IMPORTED_MODULE_1__.notify) (\"error\",\"Ошибка при загрузке данных\", true);\r\n                } else {\r\n           \r\n                    dataCharts.forEach(function(el,i){\r\n                        titleTemplate = el.title;\r\n                        delete el.title;\r\n                        el.borderless = true;\r\n                        el.minWidth = 500;\r\n                        dashLayout.push({rows:[ {template:titleTemplate,borderless:true,css:{\"padding-left\":\"25px!important\",\"margin-top\":\"20px!important\", \"font-weight\":\"400!important\", \"font-size\":\"17px!important\"}, height:35},el]});\r\n                    });\r\n\r\n                    \r\n                    $$(\"dashboardTool\").addView({\r\n                        view:\"scrollview\",\r\n                        id:\"dashboard-tool\",\r\n                        borderless:true,\r\n                        css:{\"margin\":\"20px!important\",\"height\":\"50px!important\"},\r\n                        body: {\r\n                            view:\"flexlayout\",\r\n                            rows:inputsArray\r\n                        }\r\n                    },0);\r\n              \r\n                    let dashTitle;\r\n\r\n                    if (itemTreeId.includes(\"single\")){\r\n                        itemTreeId = itemTreeId.slice(0,itemTreeId.search(\"-single\"));  \r\n                        \r\n                    }\r\n                    _login_js__WEBPACK_IMPORTED_MODULE_2__.tableNames.forEach(function(el,i){\r\n                        if (el.id == itemTreeId){\r\n                            dashTitle= el.name;\r\n                        }\r\n                    });\r\n\r\n                    $$(\"dashboardTool\").addView({\r\n                        rows:[{\r\n                            template:dashTitle,\r\n                            id:\"dash-temlate\",\r\n                            css:\"webix_style-template-count webix_dash-title\",\r\n                            borderless:false,\r\n                            height:40,\r\n                        }]\r\n                    },1);\r\n\r\n                    $$(\"dashboardBody\").addView({\r\n                        view:\"scrollview\", \r\n                        id:\"dashboard-charts\",\r\n                        borderless:true,\r\n                        body: {\r\n                            view:\"flexlayout\",\r\n                            \r\n                            css:\"webix_dash-charts-flex\",\r\n                            type: \"space\", \r\n                            cols:dashLayout\r\n                        }\r\n                    },1);\r\n\r\n                    $$(\"dashboardBody\").removeView($$(\"dashEmpty\"));\r\n                }\r\n            },\r\n            error:function(text, data, XmlHttpRequest){\r\n                (0,_editTableForm_js__WEBPACK_IMPORTED_MODULE_1__.notify) (\"error\",\"Ошибка при сохранении данных\",true);\r\n            }\r\n        }); \r\n    }\r\n\r\n    if ($$(\"dashboard-charts\")){\r\n        $$(\"dashboardBody\").removeView( $$(\"dashboard-charts\"));\r\n    }\r\n\r\n    if(!($$(\"dashboard-charts\"))){\r\n        webix.ajax().get(\"/init/default/api/fields\",{\r\n            success:function(text, data, XmlHttpRequest){\r\n\r\n                let inputsArray=[];\r\n                let actionType ;\r\n                let findAction;\r\n                let singleItemContent;\r\n                \r\n                if (single){\r\n                    let singleSearch = idsParam.search(\"-single\");\r\n                    idsParam = idsParam.slice(0,singleSearch); \r\n                }\r\n               \r\n                data = data.json().content;\r\n                Object.values(data).forEach(function(el,i){\r\n                    el.nameObj = Object.keys(data)[i];\r\n                    if (el.nameObj== idsParam){\r\n                        singleItemContent =el;\r\n                    }\r\n                });\r\n\r\n                \r\n             if (single){\r\n                let inputs = singleItemContent.inputs;\r\n                        \r\n                        inputsArray.push({width:20});\r\n                        let keys = Object.keys(inputs);\r\n                        Object.values(inputs).forEach(function(input,i){\r\n\r\n                            if (input.type == \"datetime\"){\r\n                                inputsArray.push(\r\n                                        {   view: \"datepicker\",\r\n                                            format:\"%d.%m.%Y %H:%i:%s\",  \r\n                                            id:\"dashDatepicker_\"+keys[i], \r\n                                            timepicker: true,\r\n                                            placeholder:input.label,\r\n                                            width:300,\r\n                                            minWidth:100,\r\n                                            height:48,\r\n                                            on: {\r\n                                                onAfterRender: function () {\r\n                                                    this.getInputNode().setAttribute(\"title\",input.comment);\r\n                                                },\r\n                                            }\r\n                                        }\r\n                                );\r\n                            \r\n                            } else if (input.type == \"submit\"){\r\n                                actionType = input.action;\r\n                                findAction = singleItemContent.actions[actionType];\r\n                                inputsArray.push(\r\n\r\n                                        {   view:\"button\", \r\n                                            css:\"webix_primary\", \r\n                                            id:\"dashBtn\"+i,\r\n                                            inputHeight:48,\r\n                                            height:48, \r\n                                            minWidth:100,\r\n                                            maxWidth:200,\r\n                                            value:input.label,\r\n                                            click:function () {\r\n                                                let dateArray = [];\r\n                                                let postFormatData = webix.Date.dateToStr(\"%d.%m.%Y %H:%i:%s\");\r\n                                                let getUrl;\r\n                                                inputsArray.forEach(function(el,i){\r\n                                                    \r\n                                                    //14.01.2025 11:07:00\r\n                                                    if (el.id.includes(\"sdt\")){\r\n                                                        \r\n                                                        dateArray.push(\"sdt\"+\"=\"+postFormatData($$(el.id).getValue()));\r\n                                                        \r\n                                                    }else if (el.id.includes(\"edt\")) {\r\n                                                        dateArray.push(\"edt\"+\"=\"+postFormatData($$(el.id).getValue()));\r\n                                                    }\r\n                                                });\r\n                                                getUrl = findAction.url+\"?\"+dateArray.join(\"&\");\r\n                                                getAjax(getUrl, inputsArray);\r\n                                            },\r\n                                            on: {\r\n                                                onAfterRender: function () {\r\n                                                    this.getInputNode().setAttribute(\"title\",input.comment);\r\n                                                },\r\n                                            },\r\n\r\n                                        }\r\n                                );\r\n                            }\r\n                            inputsArray.push({width:20});\r\n                        });\r\n                        getAjax(singleItemContent.actions.submit.url, inputsArray);\r\n                        if (singleItemContent.autorefresh){\r\n                            setInterval(function(){\r\n                                getAjax(singleItemContent.actions.submit.url, inputsArray);\r\n                             }, 50000);\r\n                        }\r\n\r\n            } else {\r\n             \r\n                let fields = data;\r\n           \r\n                Object.values(fields).forEach(function(el,i){\r\n\r\n               \r\n                    if (el.type == \"dashboard\" && el.nameObj == itemTreeId) {\r\n                        let inputs = el.inputs;\r\n    \r\n                        \r\n                        inputsArray.push({width:20});\r\n                        Object.values(inputs).forEach(function(input,i){\r\n                           \r\n                            \r\n                            if (input.type == \"datetime\"){\r\n                                inputsArray.push(\r\n                                        {   view: \"datepicker\",\r\n                                            format:\"%d.%m.%Y %H:%i:%s\",\r\n                                            //placeholder:\"дд.мм.гг\",\r\n                                            //placeholder:dataInputsArray[el].label,  \r\n                                            id:\"dashDatepicker\"+i, \r\n                                            timepicker: true,\r\n                                            //labelPosition:\"top\",\r\n                                            placeholder:input.label,\r\n                                            width:300,\r\n                                            minWidth:100,\r\n                                            height:48,\r\n                                            //label:input.label, \r\n                                            on: {\r\n                                                onAfterRender: function () {\r\n                                                    this.getInputNode().setAttribute(\"title\",input.comment);\r\n                                                },\r\n                                            }\r\n                                        }\r\n                                );\r\n                            \r\n                            } else if (input.type == \"submit\"){\r\n                               \r\n                                actionType = input.action;\r\n                                findAction = el.actions[actionType];\r\n                               \r\n                                inputsArray.push(\r\n\r\n                                        {   view:\"button\", \r\n                                            css:\"webix_primary\", \r\n                                            id:\"dashBtn\"+i,\r\n                                            inputHeight:48,\r\n                                            height:48, \r\n                                            minWidth:100,\r\n                                            maxWidth:200,\r\n                                            value:input.label,\r\n                                            click:function () {\r\n\r\n                                                getAjax(findAction.url, inputsArray,true);\r\n                                                \r\n                                            },\r\n                                            on: {\r\n                                                onAfterRender: function () {\r\n                                                    this.getInputNode().setAttribute(\"title\",input.comment);\r\n                                                },\r\n                                            },\r\n\r\n                                        }, \r\n                                );\r\n                            }\r\n                            inputsArray.push({width:20});\r\n                         \r\n\r\n                        });\r\n                        getAjax(el.actions.submit.url, inputsArray);\r\n                        if (el.autorefresh){\r\n                            setInterval(function(){\r\n                                getAjax(singleItemContent.actions.submit.url, inputsArray);\r\n                             }, 50000);\r\n                        }\r\n                    }\r\n                    \r\n                    \r\n                });\r\n\r\n            }\r\n\r\n            },\r\n             \r\n            error:function(text, data, XmlHttpRequest){\r\n                (0,_editTableForm_js__WEBPACK_IMPORTED_MODULE_1__.notify) (\"error\",\"Ошибка при загрузке данных\", true);\r\n\r\n            }\r\n        });     \r\n    }  \r\n}\r\n\r\n\r\nfunction headerSidebar () {\r\n    const headerLogo = {\r\n         view:\"label\",\r\n         label:\"<img src='/init/static/images/expalogo.png' style='height:30px; margin: 10px;'>\", \r\n         height:30\r\n    };\r\n    const collapseBtn = {   \r\n        view:\"button\",\r\n        type:\"icon\",\r\n        id:\"collapseBtn\",\r\n        icon:\"wxi-angle-double-left\",\r\n        css:\"webix_collapse\",\r\n        title:\"текст\",\r\n        height:45,\r\n        width:40,\r\n        click:function() {\r\n            \r\n            if ($$(\"tree\").isVisible()){\r\n                $$(\"collapseBtn\").config.icon =\"wxi-angle-double-right\";\r\n                $$(\"collapseBtn\").refresh();\r\n                $$(\"tree\").hide();\r\n                //$$(\"logBlock\").hide();\r\n                if($$(\"sideMenuResizer\")){\r\n                    $$(\"sideMenuResizer\").hide();\r\n                } \r\n            } else {\r\n                $$(\"tree\").show();\r\n                //$$(\"logBlock\").show();\r\n                $$(\"collapseBtn\").config.icon =\"wxi-angle-double-left\";\r\n                $$(\"collapseBtn\").refresh();\r\n                if(window.innerWidth >= 800){\r\n                    if($$(\"sideMenuResizer\")){\r\n                        $$(\"sideMenuResizer\").show();\r\n                    }\r\n                } \r\n              \r\n                \r\n            }\r\n            \r\n        },\r\n        on: {\r\n            onAfterRender: function () {\r\n                this.getInputNode().setAttribute(\"title\",\"Видимость бокового меню\");\r\n            }\r\n    } \r\n    };\r\n\r\n    return {cols:[collapseBtn,headerLogo]}\r\n}\r\n\r\nfunction treeSidebar () {\r\n    let tree = {\r\n        view:\"edittree\",\r\n        id:\"tree\",\r\n        minWidth:100,\r\n        width: 250,\r\n        editable:false,\r\n        select:true,\r\n        editor:\"text\",\r\n        editValue:\"value\",\r\n        activeTitle:true,\r\n        clipboard: true,\r\n        data:[],\r\n        on:{\r\n            onSelectChange:function (ids) {\r\n                if($$(\"inputsTable\")){\r\n                    $$(_setId_js__WEBPACK_IMPORTED_MODULE_0__.editFormId).removeView($$(\"inputsTable\"));\r\n                }\r\n                itemTreeId = ids[0];\r\n                let treeItemId = $$(\"tree\").getSelectedItem().id;\r\n                let getItemParent = $$(\"tree\").getParentId(treeItemId);\r\n\r\n                let treeArray = $$(\"tree\").data.order;\r\n                let parentsArray = [];\r\n                treeArray.forEach(function(el,i){\r\n                    if ($$(\"tree\").getParentId(el) == 0){\r\n                        parentsArray.push(el);\r\n                    }\r\n                });\r\n\r\n                let singleItemContent;\r\n                singleItemContent=\"\";\r\n\r\n                if (treeItemId.includes(\"single\")){\r\n                    singleItemContent = $$(\"tree\").getSelectedItem().typeof;\r\n                }\r\n\r\n                if (ids[0]&&getItemParent!==0 || singleItemContent ){\r\n                    $$(\"webix__none-content\").hide();\r\n                }\r\n\r\n                \r\n                function visibleTreeItem(singleType, idsUndefined){\r\n                    if($$(\"webix__null-content\")){\r\n                        $$(\"container\").removeView($$(\"webix__null-content\"));\r\n                    }\r\n\r\n                    if($$(\"user_auth\")){\r\n                        if ($$(\"user_auth\").isVisible()){\r\n                            $$(\"user_auth\").hide();\r\n                        }\r\n                    }\r\n\r\n                    if($$(\"userprefs\")){\r\n                        if ($$(\"userprefs\").isVisible()){\r\n                            $$(\"userprefs\").hide();\r\n                        }\r\n                    }\r\n                    \r\n\r\n                    if(idsUndefined !== undefined){\r\n                        return parentsArray.forEach(function(el,i){\r\n                            if (el.includes(\"single\")){\r\n                                if(singleType){\r\n                                    $$(singleType).hide();\r\n                                }\r\n                            } else {\r\n\r\n                                if($$(\"webix__none-content\").isVisible()){\r\n                                    $$(\"webix__none-content\").hide();\r\n                                } \r\n                                \r\n                                if(!($$(\"webix__null-content\"))){\r\n                                    $$(\"container\").addView(\r\n                                        {id:\"webix__null-content\", template:\"Блок в процессе разработки\",margin:10},\r\n                                    2);\r\n                                } \r\n                               \r\n                                if (el==\"tables\" || el==\"dashboards\" || el==\"forms\" || el==\"user_auth\"){\r\n                                    $$(el).hide();\r\n                               \r\n                                }\r\n                            }     \r\n                        });  \r\n                        \r\n                    } else {\r\n                    \r\n                        return parentsArray.forEach(function(el,i){\r\n                            if (el.includes(\"single\")){\r\n                                if (singleType){\r\n                                    $$(singleType).show();\r\n                                } \r\n                            } else {\r\n                                if (el == getItemParent){\r\n                                    $$(el).show();\r\n                                } else if (el==\"tables\" || el==\"dashboards\" || el==\"forms\" || el==\"user_auth\"){\r\n                                    $$(el).hide();\r\n                                }\r\n                        \r\n                            }\r\n                                \r\n                            \r\n                        });  \r\n                    }\r\n                   \r\n                }\r\n            \r\n                if (getItemParent==\"tables\" || singleItemContent == \"dbtable\"){\r\n                    visibleTreeItem(\"tables\"); \r\n                }else if(getItemParent==\"dashboards\" || singleItemContent == \"dashboard\"){\r\n                    visibleTreeItem(\"dashboards\"); \r\n                } else if(getItemParent==\"forms\" || singleItemContent == \"tform\"){\r\n                    if ($$(\"propTableView\") && $$(\"propTableView\").isVisible()){\r\n                        $$(\"propTableView\").hide();\r\n                    }\r\n                    visibleTreeItem(\"forms\"); \r\n                } else if (getItemParent==\"user_auth\"){\r\n                    visibleTreeItem(); \r\n                } else if (getItemParent == 0 && treeItemId!==\"tables\"&& treeItemId!==\"user_auth\"&& treeItemId!==\"dashboards\" && treeItemId!==\"forms\" && !singleItemContent){\r\n                    visibleTreeItem(false, ids[0]); \r\n                }\r\n\r\n              \r\n\r\n// --- контент tree items\r\n             \r\n\r\n                if(getItemParent==\"tables\" || singleItemContent == \"dbtable\"){\r\n                   \r\n                    (0,_editTableForm_js__WEBPACK_IMPORTED_MODULE_1__.defaultStateForm)();\r\n                    \r\n                    if(Object.keys($$(_setId_js__WEBPACK_IMPORTED_MODULE_0__.editFormId).elements).length!==0){\r\n                        $$(\"inputsTable\").hide();\r\n                    }\r\n                    if (singleItemContent == \"dbtable\"){\r\n                        getInfoTable (_setId_js__WEBPACK_IMPORTED_MODULE_0__.tableId, _setId_js__WEBPACK_IMPORTED_MODULE_0__.searchId, ids[0], _setId_js__WEBPACK_IMPORTED_MODULE_0__.findElementsId, true);\r\n                    }else {\r\n                        getInfoTable (_setId_js__WEBPACK_IMPORTED_MODULE_0__.tableId, _setId_js__WEBPACK_IMPORTED_MODULE_0__.searchId, ids[0], _setId_js__WEBPACK_IMPORTED_MODULE_0__.findElementsId);\r\n                    }\r\n                    \r\n\r\n                } else if(getItemParent==\"dashboards\") {\r\n                   getInfoDashboard ();\r\n\r\n                } else if(singleItemContent == \"dashboard\") {\r\n                    getInfoDashboard (ids[0],true);\r\n                }else if(getItemParent==\"forms\") {\r\n                    getInfoTable (_setId_js__WEBPACK_IMPORTED_MODULE_0__.tableIdView, _setId_js__WEBPACK_IMPORTED_MODULE_0__.searchIdView, ids[0], _setId_js__WEBPACK_IMPORTED_MODULE_0__.findElementsIdView);\r\n                }else if(singleItemContent == \"tform\") {\r\n                    getInfoTable (_setId_js__WEBPACK_IMPORTED_MODULE_0__.tableIdView, _setId_js__WEBPACK_IMPORTED_MODULE_0__.searchIdView, ids[0], _setId_js__WEBPACK_IMPORTED_MODULE_0__.findElementsIdView, true);\r\n                } else {\r\n             \r\n                }\r\n                \r\n            },\r\n\r\n            onBeforeSelect: function(data) {\r\n                \r\n                let getItemParent = $$(\"tree\").getParentId(data);\r\n                if(getItemParent==\"tables\"){\r\n                    if($$(_setId_js__WEBPACK_IMPORTED_MODULE_0__.editFormId).isDirty()){\r\n                        (0,_editTableForm_js__WEBPACK_IMPORTED_MODULE_1__.checkFormSaved)().then(function(result){\r\n                            if(result) {\r\n                                (0,_editTableForm_js__WEBPACK_IMPORTED_MODULE_1__.clearItem)();\r\n                                $$(\"tree\").select(data);\r\n                            } \r\n                        });\r\n                        return false;\r\n                    }\r\n                }\r\n            },\r\n\r\n            onBeforeRender:function() {\r\n                if(window.innerWidth <= 550){\r\n                    $$(\"sideMenuResizer\").hide();\r\n                } else {\r\n                    $$(\"sideMenuResizer\").show();\r\n                }\r\n               \r\n            },\r\n\r\n            // onBeforeDrop:function(context){\r\n            //     console.log(\"Drop context:\", context);\r\n            //     context.parent = context.target; //drop as child\r\n            //     context.index = -1;              //as last child\r\n            //   }\r\n\r\n        },\r\n        \r\n\r\n    };\r\n\r\n    return tree;\r\n}\r\n\r\n\r\n\r\n\n\n//# sourceURL=webpack://webix/./src/js/modules/sidebar.js?");

/***/ }),

/***/ "./src/js/modules/textInput.js":
/*!*************************************!*\
  !*** ./src/js/modules/textInput.js ***!
  \*************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"textInputClean\": () => (/* binding */ textInputClean)\n/* harmony export */ });\nfunction textInputClean(){\r\n    let mdView = null;\r\n\r\n    webix.event(document.body, \"mousedown\", e => { \r\n      const targetView = $$(e);\r\n      if (targetView && targetView.getInputNode){\r\n        mdView = targetView;\r\n      } \r\n    });\r\n    \r\n    webix.event(document, \"click\", e => { \r\n      const clickedView = $$(e);\r\n      if (mdView && clickedView && clickedView.config.id !== mdView.config.id){\r\n        e.cancelBubble = true; \r\n        webix.html.preventEvent(e);\r\n      }\r\n      mdView = null;\r\n    }, { capture: true });\r\n}\n\n//# sourceURL=webpack://webix/./src/js/modules/textInput.js?");

/***/ }),

/***/ "./src/js/modules/userSettings.js":
/*!****************************************!*\
  !*** ./src/js/modules/userSettings.js ***!
  \****************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getStorageData\": () => (/* binding */ getStorageData),\n/* harmony export */   \"setStorageData\": () => (/* binding */ setStorageData)\n/* harmony export */ });\n/* harmony import */ var _editTableForm_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./editTableForm.js */ \"./src/js/modules/editTableForm.js\");\n\r\n\r\nfunction getStorageData () {\r\n    let logBtnVal = webix.storage.local.get(\"LogVisible\");\r\n    //let userLocation = webix.storage.local.get(\"userLocation\");\r\n\r\n    //console.log(userLocation)\r\n    if (logBtnVal){\r\n\r\n        if(logBtnVal==\"hide\"){\r\n            $$(\"logLayout\").config.height = 5;\r\n            $$(\"logLayout\").resize();\r\n            $$(\"webix_log-btn\").config.icon =\"wxi-eye\";\r\n            $$(\"webix_log-btn\").refresh();\r\n\r\n        } else if(logBtnVal==\"show\"){\r\n            $$(\"logLayout\").config.height = 90;\r\n            $$(\"logLayout\").resize();\r\n            $$(\"webix_log-btn\").config.icon =\"wxi-eye-slash\";\r\n            $$(\"webix_log-btn\").refresh();\r\n        }\r\n    }\r\n    \r\n    // if (userLocation){\r\n\r\n    //     console.log(\"pap\")\r\n    //         popupExec(\"Gg\").then(\r\n    //         function(){\r\n    //             if (userLocation.includes(\"tree\")){\r\n    //                 let p =userLocation.lastIndexOf(\"#tree/\")\r\n    //                 console.log(p)\r\n    //             }\r\n    //             window.location.replace(userLocation);\r\n    //         });\r\n    \r\n     \r\n    //     //console.log(userLocation)\r\n    //    // if (userLocation !==\"\")\r\n    // }\r\n\r\n}\r\n\r\nfunction setStorageData (name, value){\r\n    if (typeof(Storage) !== 'undefined') {\r\n        localStorage.setItem(name, value);\r\n    } \r\n}\r\n\r\n\n\n//# sourceURL=webpack://webix/./src/js/modules/userSettings.js?");

/***/ }),

/***/ "./src/js/modules/viewPropertyTable.js":
/*!*********************************************!*\
  !*** ./src/js/modules/viewPropertyTable.js ***!
  \*********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"propertyTemplate\": () => (/* binding */ propertyTemplate)\n/* harmony export */ });\nfunction propertyTemplate (idProp){\r\n    return {\r\n        view:\"property\",  \r\n        id:idProp, \r\n        tooltip:\"Имя: #label#<br> Значение: #value#\",\r\n        width:350,\r\n        nameWidth:150,\r\n        editable:true,\r\n        scroll:true,\r\n        hidden:true,\r\n    };\r\n}\r\n\r\n\n\n//# sourceURL=webpack://webix/./src/js/modules/viewPropertyTable.js?");

/***/ }),

/***/ "./src/js/treeItems/authItems.js":
/*!***************************************!*\
  !*** ./src/js/treeItems/authItems.js ***!
  \***************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"authCpLayout\": () => (/* binding */ authCpLayout)\n/* harmony export */ });\n/* harmony import */ var _modules_editTableForm_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../modules/editTableForm.js */ \"./src/js/modules/editTableForm.js\");\n\r\nfunction doAuthCp (){\r\n    if ( $$(\"cp-form\").validate()){\r\n        let objPass = {op:\"\",np:\"\"};\r\n        let passData = $$(\"cp-form\").getValues();\r\n        objPass.np = passData.newPass;\r\n        objPass.op = passData.oldPass;\r\n        webix.ajax().post(\"/init/default/api/cp\", objPass, {\r\n            success:function( ){\r\n                (0,_modules_editTableForm_js__WEBPACK_IMPORTED_MODULE_0__.notify) (\"success\",\"Пароль обновлён\", true);\r\n            },\r\n            error:function(){\r\n                (0,_modules_editTableForm_js__WEBPACK_IMPORTED_MODULE_0__.notify) (\"error\",\"Ошибка при обновлении пароля\", true);\r\n            }\r\n        });\r\n    } \r\n  \r\n}\r\n\r\nconst authCp = {\r\n    view:\"form\", \r\n    id:\"cp-form\",\r\n    borderless:true,\r\n    margin:5,\r\n    elements:[\r\n        {template:\"<div>Изменение пароля</div>\",css:'webix_cp-form',height:35, borderless:true},\r\n        { view:\"text\",width:300,labelPosition:\"top\", type:\"password\",label:\"Старый пароль\", name:\"oldPass\"},\r\n        { view:\"text\",width:300,labelPosition:\"top\", type:\"password\", label:\"Новый пароль\", name:\"newPass\"},\r\n        { view:\"text\",width:300,labelPosition:\"top\", type:\"password\", label:\"Повтор нового пароля\", name:\"repeatPass\"},\r\n        { margin:5, cols:[\r\n            { view:\"button\",height:48,width:300, value:\"Сменить пароль\" , css:\"webix_primary\", click:doAuthCp},\r\n        ]}\r\n    ],\r\n\r\n    rules:{\r\n        $all:webix.rules.isNotEmpty,\r\n        $obj:function(data){\r\n\r\n            if (data.newPass != data.repeatPass){\r\n                (0,_modules_editTableForm_js__WEBPACK_IMPORTED_MODULE_0__.notify) (\"error\",\"Новый пароль не совпадает с повтором\",true);\r\n              return false;\r\n            }\r\n\r\n            if (data.newPass == data.oldPass && $$(\"cp-form\").isDirty() ){\r\n                (0,_modules_editTableForm_js__WEBPACK_IMPORTED_MODULE_0__.notify) (\"error\",\"Новый пароль должен отличаться от старого\",true);\r\n              return false;\r\n            }\r\n            return true;\r\n        }\r\n    },\r\n\r\n};\r\n\r\nconst authCpLayout = {\r\n    id:\"layout-cp\",cols:[authCp,{}]\r\n};\r\n\r\n\n\n//# sourceURL=webpack://webix/./src/js/treeItems/authItems.js?");

/***/ }),

/***/ "./src/js/treeItems/dashboardView.js":
/*!*******************************************!*\
  !*** ./src/js/treeItems/dashboardView.js ***!
  \*******************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"dashboardLayout\": () => (/* binding */ dashboardLayout)\n/* harmony export */ });\nconst dashboardBody = {id:\"dashboardBody\", css:\"dashboardBody\",cols:[\r\n    {id:\"dashEmpty\"}\r\n]};\r\nconst dashboardTool = {id:\"dashboardTool\",css:\"webix_dashTool\", rows:[\r\n  \r\n]};\r\nfunction dashboardLayout () {\r\n        return [\r\n    \r\n            {id:\"dashboardContainer\", cols:[\r\n                {rows: [dashboardTool,\r\n                dashboardBody],}\r\n            ]}\r\n        ];\r\n    }\r\n\n\n//# sourceURL=webpack://webix/./src/js/treeItems/dashboardView.js?");

/***/ }),

/***/ "./src/js/treeItems/tableTemplate.js":
/*!*******************************************!*\
  !*** ./src/js/treeItems/tableTemplate.js ***!
  \*******************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"tableToolbar\": () => (/* binding */ tableToolbar),\n/* harmony export */   \"table\": () => (/* binding */ table),\n/* harmony export */   \"onFuncTable\": () => (/* binding */ onFuncTable)\n/* harmony export */ });\n/* harmony import */ var _modules_setId_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../modules/setId.js */ \"./src/js/modules/setId.js\");\n/* harmony import */ var _modules_editTableForm_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../modules/editTableForm.js */ \"./src/js/modules/editTableForm.js\");\n/* harmony import */ var _modules_sidebar_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../modules/sidebar.js */ \"./src/js/modules/sidebar.js\");\n\r\n\r\n\r\n\r\nfunction tableToolbar (idSearch, idExport, idFindElements, idTable,visible=false) {\r\n    function exportToExcel(){\r\n        webix.toExcel(idTable, {\r\n          filename:\"Table\",\r\n          filterHTML:true,\r\n          styles:true\r\n        });\r\n        (0,_modules_editTableForm_js__WEBPACK_IMPORTED_MODULE_1__.notify) (\"success\",\"Таблица сохранена\",true);\r\n    }\r\n    return { \r\n\r\n       \r\n         id:\"adaptive-toolbar\",rows:[\r\n             \r\n        \r\n            \r\n             {id:\"filterBar\",responsive:\"adaptive-toolbar\", css:\"webix_filterBar\",padding:17, height: 80,margin:5, \r\n                \r\n                cols: [\r\n                {   view:\"search\", \r\n                    placeholder:\"Поиск\", \r\n                    id:idSearch,\r\n                    hidden:visible,\r\n                    css:\"searchTable\", \r\n                    maxWidth:250, \r\n                    minWidth:40, \r\n                    on: {\r\n                        onTimedKeyPress() {\r\n                            let text = this.getValue().toLowerCase();\r\n                            let table = $$(idTable);\r\n                            let columns = table.config.columns;\r\n                            let findElements = 0;\r\n                            table.filter(function(obj){\r\n                                for (let i=0; i<columns.length; i++)\r\n                                    if (obj[columns[i].id].toString().toLowerCase().indexOf(text) !== -1){\r\n                                        findElements++; \r\n                                        return true;\r\n                                    }\r\n                                return false;\r\n                            });\r\n                            if (!findElements){\r\n                                $$(idTable).showOverlay(\"Ничего не найдено\");\r\n                            } else if(findElements){\r\n                                $$(idTable).hideOverlay(\"Ничего не найдено\");\r\n                            }\r\n                            $$(idFindElements).setValues(findElements.toString());\r\n                            \r\n                        },\r\n                        onAfterRender: function () {\r\n                           this.getInputNode().setAttribute(\"title\",\"Поиск по таблице\");\r\n                        },\r\n                        \r\n                    }\r\n                },\r\n                {},\r\n \r\n                // {\r\n                //     view:\"pager\",\r\n                //     id:idPager,\r\n                //     size:100,\r\n                //     inputHeight:48,\r\n                //     inputWidth:50,\r\n                //     group:3,\r\n                //     height:50,\r\n                //     template:`{common.prev()} \r\n                // {common.pages()} {common.next()}`\r\n                // },\r\n\r\n                {   view:\"button\",\r\n                    width: 50, \r\n                    type:\"icon\",\r\n                    id:idExport,\r\n                    hidden:visible,\r\n                    icon:\"wxi-download\",\r\n                    css:\"webix_btn-download\",\r\n                    title:\"текст\",\r\n                    height:50,\r\n                    click:exportToExcel,\r\n                    on: {\r\n                        onAfterRender: function () {\r\n                            this.getInputNode().setAttribute(\"title\",\"Экспорт таблицы\");\r\n                        }\r\n                    } \r\n                },\r\n\r\n\r\n                ],\r\n            },\r\n            {   view:\"template\",\r\n                id:idFindElements,\r\n                css:\"webix_style-template-count\",\r\n                height:30,\r\n                template:function () {\r\n                    if (Object.keys($$(idFindElements).getValues()).length !==0){\r\n                        return \"<div style='color:#999898;'> Количество записей:\"+\" \"+$$(idFindElements).getValues()+\" </div>\";\r\n                    } else {\r\n                        return \"\";\r\n                    }\r\n                },\r\n            },\r\n        ]\r\n\r\n        \r\n    };\r\n}\r\n\r\n\r\n\r\nfunction table (idTable, onFunc, editableParam=false) {\r\n    return {\r\n        view:\"datatable\",\r\n        id: idTable,\r\n        css:\"webix_table-style webix_header_border webix_data_border\",\r\n        resizeColumn: true,\r\n        autoConfig: true,\r\n        editable:editableParam,\r\n        editaction:\"dblclick\",\r\n        //pager:idPager,\r\n        minHeight:350,\r\n        //height:200,\r\n\r\n        datafetch:5,\r\n        datathrottle: 5000,\r\n        loadahead:100,\r\n\r\n        footer: true,\r\n        minWidth:500, \r\n        select:true,\r\n        minColumnWidth:200,\r\n        on:onFunc,\r\n        onClick:{\r\n            \"wxi-trash\":function(){\r\n                (0,_modules_editTableForm_js__WEBPACK_IMPORTED_MODULE_1__.popupExec)(\"Запись будет удалена\").then(\r\n                    function(){\r\n                        let formValues = $$(idTable).getItem(id);\r\n                        webix.ajax().del(\"/init/default/api/\"+_modules_sidebar_js__WEBPACK_IMPORTED_MODULE_2__.itemTreeId+\"/\"+formValues.id+\".json\", formValues,{\r\n                            success:function(){\r\n                                $$(idTable).remove($$(idTable).getSelectedId());\r\n                                (0,_modules_editTableForm_js__WEBPACK_IMPORTED_MODULE_1__.notify) (\"success\",\"Данные успешно удалены\",true);\r\n                            },\r\n                            error:function(){\r\n                                (0,_modules_editTableForm_js__WEBPACK_IMPORTED_MODULE_1__.notify) (\"error\",\"Ошибка при удалении записи\",true);\r\n                            }\r\n                        });\r\n                });\r\n            },\r\n\r\n            \"wxi-angle-down\":function(event, cell, target){\r\n\r\n            if (!($$(\"propTableView\").isVisible()))   {\r\n                let id = cell.row;\r\n              \r\n                let urlArgEnd = _modules_sidebar_js__WEBPACK_IMPORTED_MODULE_2__.urlFieldAction.search(\"{\");\r\n                let findUrl = _modules_sidebar_js__WEBPACK_IMPORTED_MODULE_2__.urlFieldAction.slice(0,urlArgEnd); \r\n\r\n\r\n                webix.ajax(findUrl+id+\".json\",{\r\n                    success:function(text, data, XmlHttpRequest){\r\n                        data = data.json().content;\r\n                        let arrayProperty = [];\r\n                        data.forEach(function(el,i){\r\n                            arrayProperty.push({type:\"text\", id:i+1,label:el.name, value:el.value})\r\n                        });\r\n                        $$(\"propTableView\").define(\"elements\", arrayProperty);\r\n                        $$(\"propTableView\").show();\r\n                        $$(\"propResize\").show();\r\n                    },\r\n                    error:function(text, data, XmlHttpRequest){\r\n                        (0,_modules_editTableForm_js__WEBPACK_IMPORTED_MODULE_1__.notify) (\"error\",\"Ошибка при загрузке\");\r\n\r\n                    }\r\n                });\r\n            } else {\r\n                $$(\"propTableView\").hide();\r\n                $$(\"propResize\").hide();\r\n            }\r\n\r\n            },\r\n            \r\n        }\r\n    };\r\n}\r\n\r\n\r\n\r\n\r\n\r\n//----- table edit parameters\r\nlet onFuncTable = {\r\n    onBeforeLoad:function(){\r\n        this.showOverlay(\"Загрузка...\");\r\n    },\r\n    onAfterEditStop:function(state, editor, ignoreUpdate){\r\n      \r\n        if(state.value != state.old){\r\n            $$(editor.column).setValue(state.value);\r\n            (0,_modules_editTableForm_js__WEBPACK_IMPORTED_MODULE_1__.saveItem)();\r\n        }\r\n    },\r\n\r\n    onAfterSelect(id){\r\n      \r\n        let values = $$(_modules_setId_js__WEBPACK_IMPORTED_MODULE_0__.tableId).getItem(id); \r\n        function toEditForm () {\r\n            $$(_modules_setId_js__WEBPACK_IMPORTED_MODULE_0__.editFormId).setValues(values);\r\n            $$(_modules_setId_js__WEBPACK_IMPORTED_MODULE_0__.saveNewBtnId).hide();\r\n            $$(_modules_setId_js__WEBPACK_IMPORTED_MODULE_0__.saveBtnId).show();\r\n            $$(_modules_setId_js__WEBPACK_IMPORTED_MODULE_0__.editFormId).clearValidation();\r\n        }\r\n        if($$(_modules_setId_js__WEBPACK_IMPORTED_MODULE_0__.editFormId).isDirty()){\r\n            (0,_modules_editTableForm_js__WEBPACK_IMPORTED_MODULE_1__.popupExec)(\"Данные не сохранены\").then(\r\n                function(){\r\n                    $$(_modules_setId_js__WEBPACK_IMPORTED_MODULE_0__.editFormId).clear();\r\n                    $$(_modules_setId_js__WEBPACK_IMPORTED_MODULE_0__.delBtnId).enable();\r\n                    toEditForm();\r\n            }); \r\n        } else {\r\n            (0,_modules_editTableForm_js__WEBPACK_IMPORTED_MODULE_1__.createEditFields)();\r\n            toEditForm();\r\n        }   \r\n    },\r\n    onAfterLoad:function(){\r\n        this.hideOverlay();\r\n        $$(_modules_setId_js__WEBPACK_IMPORTED_MODULE_0__.editFormId).removeView(\"inputsTable\");\r\n        (0,_modules_editTableForm_js__WEBPACK_IMPORTED_MODULE_1__.defaultStateForm) ();\r\n    },  \r\n    onAfterDelete: function() {\r\n        $$(_modules_setId_js__WEBPACK_IMPORTED_MODULE_0__.findElementsId).setValues($$(_modules_setId_js__WEBPACK_IMPORTED_MODULE_0__.tableId).count().toString());\r\n        if (!this.count())\r\n            this.showOverlay(\"Ничего не найдено\");\r\n        if (this.count())\r\n            this.hideOverlay();\r\n    },\r\n    onAfterAdd: function() {\r\n        $$(_modules_setId_js__WEBPACK_IMPORTED_MODULE_0__.findElementsId).setValues($$(_modules_setId_js__WEBPACK_IMPORTED_MODULE_0__.tableId).count().toString());\r\n        this.hideOverlay();\r\n    },\r\n\r\n    \r\n \r\n};\r\n//----- table edit parameters\r\n\r\n\r\n\n\n//# sourceURL=webpack://webix/./src/js/treeItems/tableTemplate.js?");

/***/ }),

/***/ "./src/js/treeItems/userprefsItems.js":
/*!********************************************!*\
  !*** ./src/js/treeItems/userprefsItems.js ***!
  \********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"userprefsLayout\": () => (/* binding */ userprefsLayout)\n/* harmony export */ });\n\r\n\r\nconst userprefsLayout = {\r\n\r\n    view:\"form\", \r\n    id:\"userprefsForm\",\r\n    borderless:true,\r\n    elements:[\r\n        {cols:[{rows:[\r\n        {   view:\"template\",\r\n            template:\"<div>Настройки</div>\",\r\n            css:\"webix_headline-userprefs\",\r\n            height:35, \r\n            borderless:true,\r\n        },\r\n        {   view:\"template\",\r\n            id:\"userprefsInfo\",\r\n            css:\"webix_userprefs-info\",\r\n            template:\"11\",\r\n            height:50, borderless:true,\r\n        },\r\n       \r\n        {   view:\"select\", \r\n            label:\"Отображение блока сообщений\", \r\n            labelPosition:\"top\",\r\n            value:1, \r\n            options:[\r\n            { \"id\":1, \"value\":\"Показать\" },\r\n            { \"id\":2, \"value\":\"Скрыть\" },\r\n            ],\r\n            on:{\r\n            \r\n                onAfterRender: function () {\r\n                    this.getInputNode().setAttribute(\"title\",\"Показать/скрыть по умолчанию блок системных сообщений\");\r\n                },\r\n           \r\n                onChange:function(newValue, oldValue, config){\r\n                    console.log(newValue, oldValue, config);\r\n                    let prefs = {logState:newValue};\r\n                    console.log(prefs.logState.toString());\r\n                 \r\n\r\n                    const date = new Date();\r\n\r\n                    let day = date.getDate();\r\n                    let month = String(date.getMonth() + 1).padStart(2, '0');\r\n                    let year = date.getFullYear();\r\n                    let hours = date.getHours();\r\n                    let minutes =String( date.getMinutes()).padStart(2, '0');\r\n                    let seconds =date.getSeconds();\r\n                    let currentDate = `${day}.${month}.${year} ${hours}:${minutes}:${seconds}`;\r\n\r\n\r\n                    let putObj = {\r\n                        cdt:currentDate,\r\n                        id: 4,\r\n                        name: \"default\",\r\n                        owner: 1,\r\n                       // prefs: \"{\\\"pageLimit\\\":8,\\\"countMsgFlashAlert\\\":30}\",\r\n                        prefs:{logState:prefs.logState.toString()},\r\n                        ptype: 0\r\n                    };\r\n                    webix.ajax().put(\"/init/default/api/userprefs\",putObj,{\r\n                        success:function(text, data, XmlHttpRequest){\r\n                            console.log(data.json());\r\n                        },\r\n                        error:function(text, data, XmlHttpRequest){\r\n                            console.log(data.json());\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        },\r\n        {height:15},\r\n        {   view:\"select\", \r\n            label:\"Предлагать вернуться к тому, на чем остановились в прошлый раз\", \r\n            labelPosition:\"top\",\r\n            value:1, \r\n            options:[\r\n            { \"id\":1, \"value\":\"Предлагать\" },\r\n            { \"id\":2, \"value\":\"Не предлагать\" },\r\n            ],\r\n            on:{\r\n                onAfterRender: function () {\r\n                    this.getInputNode().setAttribute(\"title\",\"Показывать/не показывать всплывающее окно при загрузке приложения\");\r\n                },\r\n                onChange:function(newValue, oldValue, config){\r\n                }\r\n            }\r\n        },\r\n        {height:20},\r\n        { cols:[\r\n            {   view:\"button\", \r\n                value:\"Сохранить настройки\" ,\r\n                height:48, \r\n                css:\"webix_primary\"\r\n            },\r\n            {width:10},            \r\n            {   view:\"button\", \r\n                height:48,\r\n                value:\"Сбросить\" \r\n            },\r\n        ]},\r\n        ]},\r\n        {}\r\n        ]}\r\n    ]\r\n   \r\n};\r\n\r\n\n\n//# sourceURL=webpack://webix/./src/js/treeItems/userprefsItems.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/js/app.js");
/******/ 	
/******/ })()
;